file,mutants,function_name,function_start_line,pattern.lineno,pattern.coloffset,pattern.linematch,pattern.context,pattern.min,pattern.max,pattern.pattern,pattern.check_id,pattern.check_name,pattern.description,mutmut_summary.disabled,mutmut_summary.errors,mutmut_summary.failures,mutmut_summary.tests,mutmut_summary.time,mutants.Mutant #2.line,mutants.Mutant #2.description,mutants.Mutant #2.failure.inner,mutants.Mutant #2.failure.type,mutants.Mutant #2.failure.message,mutants.Mutant #6.line,mutants.Mutant #6.description,mutants.Mutant #6.failure.inner,mutants.Mutant #6.failure.type,mutants.Mutant #6.failure.message,mutants.Mutant #9.line,mutants.Mutant #9.description,mutants.Mutant #9.failure.inner,mutants.Mutant #9.failure.type,mutants.Mutant #9.failure.message,mutants.Mutant #20.line,mutants.Mutant #20.description,mutants.Mutant #22.line,mutants.Mutant #22.description,mutants.Mutant #25.line,mutants.Mutant #25.description,mutants.Mutant #27.line,mutants.Mutant #27.description,mutants.Mutant #31.line,mutants.Mutant #31.description,mutants.Mutant #32.line,mutants.Mutant #32.description,mutants.Mutant #33.line,mutants.Mutant #33.description,mutants.Mutant #34.line,mutants.Mutant #34.description,mutants.Mutant #38.line,mutants.Mutant #38.description,mutants.Mutant #40.line,mutants.Mutant #40.description,mutants.Mutant #1.line,mutants.Mutant #1.description,mutants.Mutant #3.line,mutants.Mutant #3.description,mutants.Mutant #5.line,mutants.Mutant #5.description,mutants.Mutant #14.line,mutants.Mutant #14.description,mutants.Mutant #14.failure.inner,mutants.Mutant #14.failure.type,mutants.Mutant #14.failure.message,mutants.Mutant #15.line,mutants.Mutant #15.description,mutants.Mutant #16.line,mutants.Mutant #16.description,mutants.Mutant #17.line,mutants.Mutant #17.description
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,,,8,0,class LazyTracker:,"import dill
from pathlib import Path


class LazyTracker:
    def __init__(self):
        """"""LazyTracked enables you to compute combined hash of things like files, directories, python objects etc.""""""
        self._hasher = hashlib.md5()

    def add_directories(self, directories: List[str], chunk_num_blocks=128):",1,10,.//ClassDef,C001,class-definition,Ensure the presence of class definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,6,0,def test_hparams():,"import shutil
from tempfile import TemporaryDirectory, tempdir
from lazytracker import LazyTracker

def test_hparams():
    hparams_1 = {
        'a': 1,
        'b': 2,
        'c': {
            'd': 1",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,35,0,def test_picable_function():,"
    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):
        return x+2
",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_files,53.0,53,0,def test_files():,"
    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_files():
    with TemporaryDirectory() as tmpdir:
        with open(f'{tmpdir}/a.txt', 'w') as f:
            f.write(""test file 1"")

        with open(f'{tmpdir}/b.txt', 'w') as f:",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_directories,76.0,76,0,def test_directories():,"
        assert tracker_1.hash() == tracker_2.hash()
        assert tracker_1.hash() != tracker_3.hash()

def test_directories():
    with TemporaryDirectory() as tmpdir:
        os.makedirs(f""{tmpdir}/1"", exist_ok=True)

        with open(f'{tmpdir}/1/a.txt', 'w') as f:
            f.write(""test file 1"")",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,36,4,def func_1(x):,"    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):
        return x+2

    tracker_1 = LazyTracker()",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,38,4,def func_2(x):,"
def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):
        return x+2

    tracker_1 = LazyTracker()
    tracker_1.add_picklables([func_1])
",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,5,0,def test_cached():,"from tempfile import TemporaryDirectory
from lazytracker import cached


def test_cached():
    with TemporaryDirectory() as cache_dir:
        updated = False

        @cached(
            cache_dir=cache_dir,",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,14,8,"def test_function(input_dir: str, output_dir: str, parameter: int):","            cache_dir=cache_dir,
            input_dirs=[""input_dir""],
            output_dirs=[""output_dir""]
        )
        def test_function(input_dir: str, output_dir: str, parameter: int):
            nonlocal updated

            with open(f""{output_dir}/test.txt"", 'w') as f:
                f.write(str(parameter))
",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,__init__,9.0,9,4,def __init__(self):,"from pathlib import Path


class LazyTracker:
    def __init__(self):
        """"""LazyTracked enables you to compute combined hash of things like files, directories, python objects etc.""""""
        self._hasher = hashlib.md5()

    def add_directories(self, directories: List[str], chunk_num_blocks=128):
        """"""Include hash of all files inside directory (including files in subdirectories)",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_directories,13.0,13,4,"def add_directories(self, directories: List[str], chunk_num_blocks=128):","    def __init__(self):
        """"""LazyTracked enables you to compute combined hash of things like files, directories, python objects etc.""""""
        self._hasher = hashlib.md5()

    def add_directories(self, directories: List[str], chunk_num_blocks=128):
        """"""Include hash of all files inside directory (including files in subdirectories)

        Args:
            directories (List[str]): List of directories to take files from
            chunk_num_blocks (int, optional): How many chunks to read at once. Defaults to 128.",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,13.0,"    def add_directories(self, directories: List[str], chunk_num_blocks=128):","--- lazytracker/lazytracker.py
+++ lazytracker/lazytracker.py
@@ -10,7 +10,7 @@
         """"""LazyTracked enables you to compute combined hash of things like files, directories, python objects etc.""""""
         self._hasher = hashlib.md5()
 
-    def add_directories(self, directories: List[str], chunk_num_blocks=128):
+    def add_directories(self, directories: List[str], chunk_num_blocks=129):
         """"""Include hash of all files inside directory (including files in subdirectories)
 
         Args:
",failure,bad_survived,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_files,29.0,29,4,"def add_files(self, filepaths: List[str], chunk_num_blocks=128):","        files_to_check = sorted(files_to_check)

        self.add_files(files_to_check, chunk_num_blocks)

    def add_files(self, filepaths: List[str], chunk_num_blocks=128):
        """"""Include hash of files

        Args:
            filepaths (List[str]): List of paths to files
            chunk_num_blocks (int, optional): How many chunks to read at once. Defaults to 128.",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,,,,,,29.0,"    def add_files(self, filepaths: List[str], chunk_num_blocks=128):","--- lazytracker/lazytracker.py
+++ lazytracker/lazytracker.py
@@ -26,7 +26,7 @@
 
         self.add_files(files_to_check, chunk_num_blocks)
 
-    def add_files(self, filepaths: List[str], chunk_num_blocks=128):
+    def add_files(self, filepaths: List[str], chunk_num_blocks=129):
         """"""Include hash of files
 
         Args:
",failure,bad_survived,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_hparams,44.0,44,4,"def add_hparams(self, hparams: dict):","                        self._hasher.update(chunk)
            else:
                self._hasher.update(dill.dumps(None))

    def add_hparams(self, hparams: dict):
        """"""Add hash of python dictionary. Utility function for storing pickable

        Args:
            hparams (dict): A dictionary to be included
        """"""",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_picklables,52.0,52,4,"def add_picklables(self, objects: List[Any], recursive: bool=False):","            hparams (dict): A dictionary to be included
        """"""
        self.add_picklables([hparams])

    def add_picklables(self, objects: List[Any], recursive: bool=False):
        """"""Include hash of any picklable python objects (pickable by dill)

        Args:
            objects (List[Any]): List of python objects to hash
            recursive (bool): Wheter to track dependencies of object. Eg.: if function calls another function, if ",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,52.0,"    def add_picklables(self, objects: List[Any], recursive: bool=False):","--- lazytracker/lazytracker.py
+++ lazytracker/lazytracker.py
@@ -49,7 +49,7 @@
         """"""
         self.add_picklables([hparams])
 
-    def add_picklables(self, objects: List[Any], recursive: bool=False):
+    def add_picklables(self, objects: List[Any], recursive: bool=True):
         """"""Include hash of any picklable python objects (pickable by dill)
 
         Args:
",failure,bad_survived,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,hash,63.0,63,4,def hash(self) -> str:,"        """"""
        for obj in objects:
            self._hasher.update(dill.dumps(obj, recurse=recursive))

    def hash(self) -> str:
        """"""Compute hash

        Returns:
            str: Computed checksum of all things tracked
        """"""",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,14,0,def cached(,"shelve.Pickler = Pickler
shelve.Unpickler = Unpickler


def cached(
    cache_dir: str = "".lazytracker"",
    input_files: Optional[List[str]] = None,
    input_dirs: Optional[List[str]] = None,
    output_dirs: Optional[List[str]] = None,
    output_files: Optional[List[str]] = None,",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,31,4,def inner_func(function: Callable):,"        output_dirs (Optional[List[str]], optional): name of function parameters, that are paths to otuput files. Defaults to None.
        output_files (Optional[List[str]], optional): name of function parameters, that are paths to directories with output files. Defaults to None.
    """"""

    def inner_func(function: Callable):
        @wraps(function)
        def wrapper(*args, **kwargs):
            kwargs.update(dict(zip(function.__code__.co_varnames, args)))

            os.makedirs(f""{cache_dir}"", exist_ok=True)",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,33,8,"def wrapper(*args, **kwargs):","    """"""

    def inner_func(function: Callable):
        @wraps(function)
        def wrapper(*args, **kwargs):
            kwargs.update(dict(zip(function.__code__.co_varnames, args)))

            os.makedirs(f""{cache_dir}"", exist_ok=True)
            with shelve.open(f""{cache_dir}/tracked_functions"", ""c"") as db:
                input_tracker = LazyTracker()",1,10,.//FunctionDef,F001,all-function-definition,Ensure the presence of function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,36,4,def func_1(x):,"    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):
        return x+2

    tracker_1 = LazyTracker()",1,10,".//FunctionDef[not(contains(@name, ""test_""))]",F002,dummy-test-non-test-function-definition,Ensure the presence of non-test function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,38,4,def func_2(x):,"
def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):
        return x+2

    tracker_1 = LazyTracker()
    tracker_1.add_picklables([func_1])
",1,10,".//FunctionDef[not(contains(@name, ""test_""))]",F002,dummy-test-non-test-function-definition,Ensure the presence of non-test function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,__init__,9.0,9,4,def __init__(self):,"from pathlib import Path


class LazyTracker:
    def __init__(self):
        """"""LazyTracked enables you to compute combined hash of things like files, directories, python objects etc.""""""
        self._hasher = hashlib.md5()

    def add_directories(self, directories: List[str], chunk_num_blocks=128):
        """"""Include hash of all files inside directory (including files in subdirectories)",1,10,".//FunctionDef[not(contains(@name, ""test_""))]",F002,dummy-test-non-test-function-definition,Ensure the presence of non-test function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_directories,13.0,13,4,"def add_directories(self, directories: List[str], chunk_num_blocks=128):","    def __init__(self):
        """"""LazyTracked enables you to compute combined hash of things like files, directories, python objects etc.""""""
        self._hasher = hashlib.md5()

    def add_directories(self, directories: List[str], chunk_num_blocks=128):
        """"""Include hash of all files inside directory (including files in subdirectories)

        Args:
            directories (List[str]): List of directories to take files from
            chunk_num_blocks (int, optional): How many chunks to read at once. Defaults to 128.",1,10,".//FunctionDef[not(contains(@name, ""test_""))]",F002,dummy-test-non-test-function-definition,Ensure the presence of non-test function definitions in the codebase.,0,0,10,44,0,13.0,"    def add_directories(self, directories: List[str], chunk_num_blocks=128):","--- lazytracker/lazytracker.py
+++ lazytracker/lazytracker.py
@@ -10,7 +10,7 @@
         """"""LazyTracked enables you to compute combined hash of things like files, directories, python objects etc.""""""
         self._hasher = hashlib.md5()
 
-    def add_directories(self, directories: List[str], chunk_num_blocks=128):
+    def add_directories(self, directories: List[str], chunk_num_blocks=129):
         """"""Include hash of all files inside directory (including files in subdirectories)
 
         Args:
",failure,bad_survived,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_files,29.0,29,4,"def add_files(self, filepaths: List[str], chunk_num_blocks=128):","        files_to_check = sorted(files_to_check)

        self.add_files(files_to_check, chunk_num_blocks)

    def add_files(self, filepaths: List[str], chunk_num_blocks=128):
        """"""Include hash of files

        Args:
            filepaths (List[str]): List of paths to files
            chunk_num_blocks (int, optional): How many chunks to read at once. Defaults to 128.",1,10,".//FunctionDef[not(contains(@name, ""test_""))]",F002,dummy-test-non-test-function-definition,Ensure the presence of non-test function definitions in the codebase.,0,0,10,44,0,,,,,,29.0,"    def add_files(self, filepaths: List[str], chunk_num_blocks=128):","--- lazytracker/lazytracker.py
+++ lazytracker/lazytracker.py
@@ -26,7 +26,7 @@
 
         self.add_files(files_to_check, chunk_num_blocks)
 
-    def add_files(self, filepaths: List[str], chunk_num_blocks=128):
+    def add_files(self, filepaths: List[str], chunk_num_blocks=129):
         """"""Include hash of files
 
         Args:
",failure,bad_survived,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_hparams,44.0,44,4,"def add_hparams(self, hparams: dict):","                        self._hasher.update(chunk)
            else:
                self._hasher.update(dill.dumps(None))

    def add_hparams(self, hparams: dict):
        """"""Add hash of python dictionary. Utility function for storing pickable

        Args:
            hparams (dict): A dictionary to be included
        """"""",1,10,".//FunctionDef[not(contains(@name, ""test_""))]",F002,dummy-test-non-test-function-definition,Ensure the presence of non-test function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_picklables,52.0,52,4,"def add_picklables(self, objects: List[Any], recursive: bool=False):","            hparams (dict): A dictionary to be included
        """"""
        self.add_picklables([hparams])

    def add_picklables(self, objects: List[Any], recursive: bool=False):
        """"""Include hash of any picklable python objects (pickable by dill)

        Args:
            objects (List[Any]): List of python objects to hash
            recursive (bool): Wheter to track dependencies of object. Eg.: if function calls another function, if ",1,10,".//FunctionDef[not(contains(@name, ""test_""))]",F002,dummy-test-non-test-function-definition,Ensure the presence of non-test function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,52.0,"    def add_picklables(self, objects: List[Any], recursive: bool=False):","--- lazytracker/lazytracker.py
+++ lazytracker/lazytracker.py
@@ -49,7 +49,7 @@
         """"""
         self.add_picklables([hparams])
 
-    def add_picklables(self, objects: List[Any], recursive: bool=False):
+    def add_picklables(self, objects: List[Any], recursive: bool=True):
         """"""Include hash of any picklable python objects (pickable by dill)
 
         Args:
",failure,bad_survived,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,hash,63.0,63,4,def hash(self) -> str:,"        """"""
        for obj in objects:
            self._hasher.update(dill.dumps(obj, recurse=recursive))

    def hash(self) -> str:
        """"""Compute hash

        Returns:
            str: Computed checksum of all things tracked
        """"""",1,10,".//FunctionDef[not(contains(@name, ""test_""))]",F002,dummy-test-non-test-function-definition,Ensure the presence of non-test function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,14,0,def cached(,"shelve.Pickler = Pickler
shelve.Unpickler = Unpickler


def cached(
    cache_dir: str = "".lazytracker"",
    input_files: Optional[List[str]] = None,
    input_dirs: Optional[List[str]] = None,
    output_dirs: Optional[List[str]] = None,
    output_files: Optional[List[str]] = None,",1,10,".//FunctionDef[not(contains(@name, ""test_""))]",F002,dummy-test-non-test-function-definition,Ensure the presence of non-test function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,31,4,def inner_func(function: Callable):,"        output_dirs (Optional[List[str]], optional): name of function parameters, that are paths to otuput files. Defaults to None.
        output_files (Optional[List[str]], optional): name of function parameters, that are paths to directories with output files. Defaults to None.
    """"""

    def inner_func(function: Callable):
        @wraps(function)
        def wrapper(*args, **kwargs):
            kwargs.update(dict(zip(function.__code__.co_varnames, args)))

            os.makedirs(f""{cache_dir}"", exist_ok=True)",1,10,".//FunctionDef[not(contains(@name, ""test_""))]",F002,dummy-test-non-test-function-definition,Ensure the presence of non-test function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,33,8,"def wrapper(*args, **kwargs):","    """"""

    def inner_func(function: Callable):
        @wraps(function)
        def wrapper(*args, **kwargs):
            kwargs.update(dict(zip(function.__code__.co_varnames, args)))

            os.makedirs(f""{cache_dir}"", exist_ok=True)
            with shelve.open(f""{cache_dir}/tracked_functions"", ""c"") as db:
                input_tracker = LazyTracker()",1,10,".//FunctionDef[not(contains(@name, ""test_""))]",F002,dummy-test-non-test-function-definition,Ensure the presence of non-test function definitions in the codebase.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_files,29.0,37,12,if os.path.exists(p):,"            filepaths (List[str]): List of paths to files
            chunk_num_blocks (int, optional): How many chunks to read at once. Defaults to 128.
        """"""
        for p in filepaths:
            if os.path.exists(p):
                with open(p, ""rb"") as f:
                    while chunk := f.read(chunk_num_blocks * self._hasher.block_size):
                        self._hasher.update(chunk)
            else:
                self._hasher.update(dill.dumps(None))",1,10,.//FunctionDef/body//If,CL001,dummy-test-single-nested-if,Ensure the presence of single nested 'if' statements within function bodies.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,41,16,if input_dirs is not None:,"            with shelve.open(f""{cache_dir}/tracked_functions"", ""c"") as db:
                input_tracker = LazyTracker()
                input_tracker.add_picklables([function], recursive=True)
                input_tracker.add_hparams(kwargs)
                if input_dirs is not None:
                    input_dirs_values = [kwargs[input_dir] for input_dir in input_dirs]
                    input_tracker.add_directories(input_dirs_values)
                if input_files is not None:
                    input_files_values = [
                        kwargs[input_file] for input_file in input_files",1,10,.//FunctionDef/body//If,CL001,dummy-test-single-nested-if,Ensure the presence of single nested 'if' statements within function bodies.,0,0,10,44,0,,,,,,,,,,,,,,,,41.0,                if input_dirs is not None:,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,44,16,if input_files is not None:,"                input_tracker.add_hparams(kwargs)
                if input_dirs is not None:
                    input_dirs_values = [kwargs[input_dir] for input_dir in input_dirs]
                    input_tracker.add_directories(input_dirs_values)
                if input_files is not None:
                    input_files_values = [
                        kwargs[input_file] for input_file in input_files
                    ]
                    input_tracker.add_files(input_files_values)
",1,10,.//FunctionDef/body//If,CL001,dummy-test-single-nested-if,Ensure the presence of single nested 'if' statements within function bodies.,0,0,10,44,0,,,,,,,,,,,,,,,,,,44.0,                if input_files is not None:,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,51,16,if output_dirs is not None:,"                    ]
                    input_tracker.add_files(input_files_values)

                test_output_tracker = LazyTracker()
                if output_dirs is not None:
                    output_dirs_values = [
                        kwargs[output_dir] for output_dir in output_dirs
                    ]
                    test_output_tracker.add_directories(output_dirs_values)
                if output_files is not None:",1,10,.//FunctionDef/body//If,CL001,dummy-test-single-nested-if,Ensure the presence of single nested 'if' statements within function bodies.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,51.0,                if output_dirs is not None:,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,56,16,if output_files is not None:,"                    output_dirs_values = [
                        kwargs[output_dir] for output_dir in output_dirs
                    ]
                    test_output_tracker.add_directories(output_dirs_values)
                if output_files is not None:
                    output_files_values = [
                        kwargs[output_file] for output_file in output_files
                    ]
                    test_output_tracker.add_files(output_files_values)
",1,10,.//FunctionDef/body//If,CL001,dummy-test-single-nested-if,Ensure the presence of single nested 'if' statements within function bodies.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,56.0,                if output_files is not None:,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,65,16,"if input_hash in db and db[input_hash][""hash""] == output_hash:","
                input_hash = input_tracker.hash()
                output_hash = test_output_tracker.hash()

                if input_hash in db and db[input_hash][""hash""] == output_hash:
                    return db[input_hash][""return_value""]
                else:
                    return_value = function(**kwargs)

                    output_tracker = LazyTracker()",1,10,.//FunctionDef/body//If,CL001,dummy-test-single-nested-if,Ensure the presence of single nested 'if' statements within function bodies.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,65.0,"                if input_hash in db and db[input_hash][""hash""] == output_hash:",65.0,"                if input_hash in db and db[input_hash][""hash""] == output_hash:",65.0,"                if input_hash in db and db[input_hash][""hash""] == output_hash:",65.0,"                if input_hash in db and db[input_hash][""hash""] == output_hash:",,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,71,20,if output_dirs is not None:,"                else:
                    return_value = function(**kwargs)

                    output_tracker = LazyTracker()
                    if output_dirs is not None:
                        output_dirs_values = [
                            kwargs[output_dir] for output_dir in output_dirs
                        ]
                        output_tracker.add_directories(output_dirs_values)
                    if output_files is not None:",1,10,.//FunctionDef/body//If,CL001,dummy-test-single-nested-if,Ensure the presence of single nested 'if' statements within function bodies.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,71.0,                    if output_dirs is not None:,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,76,20,if output_files is not None:,"                        output_dirs_values = [
                            kwargs[output_dir] for output_dir in output_dirs
                        ]
                        output_tracker.add_directories(output_dirs_values)
                    if output_files is not None:
                        output_files_values = [
                            kwargs[output_file] for output_file in output_files
                        ]
                        output_tracker.add_files(output_files_values)
",1,10,.//FunctionDef/body//If,CL001,dummy-test-single-nested-if,Ensure the presence of single nested 'if' statements within function bodies.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,76.0,                    if output_files is not None:,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_directories,76.0,104,15,assert tracker_1.hash() == tracker_2.hash(),"
        tracker_3 = LazyTracker()
        tracker_3.add_directories([f""{tmpdir}/3""])

        assert tracker_1.hash() == tracker_2.hash()
        assert tracker_1.hash() != tracker_3.hash()",1,10,//Compare/ops/Is | //Compare/ops/Eq,BOOL001,boolean-comparison,Using = or == operators to compare boolean values,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_directories,76.0,104,15,assert tracker_1.hash() == tracker_2.hash(),"
        tracker_3 = LazyTracker()
        tracker_3.add_directories([f""{tmpdir}/3""])

        assert tracker_1.hash() == tracker_2.hash()
        assert tracker_1.hash() != tracker_3.hash()",1,10,//Compare/ops/Is | //Compare/ops/Eq,BOOL001,boolean-comparison,Using = or == operators to compare boolean values,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_directories,76.0,104,15,assert tracker_1.hash() == tracker_2.hash(),"
        tracker_3 = LazyTracker()
        tracker_3.add_directories([f""{tmpdir}/3""])

        assert tracker_1.hash() == tracker_2.hash()
        assert tracker_1.hash() != tracker_3.hash()",1,10,//Compare/ops/Is | //Compare/ops/Eq,BOOL001,boolean-comparison,Using = or == operators to compare boolean values,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_directories,76.0,104,15,assert tracker_1.hash() == tracker_2.hash(),"
        tracker_3 = LazyTracker()
        tracker_3.add_directories([f""{tmpdir}/3""])

        assert tracker_1.hash() == tracker_2.hash()
        assert tracker_1.hash() != tracker_3.hash()",1,10,//Compare/ops/Is | //Compare/ops/Eq,BOOL001,boolean-comparison,Using = or == operators to compare boolean values,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,73,23,assert updated == True,"                    input_dir=input_dir, 
                    output_dir=output_dir, 
                    parameter=5
                ) == 5
                assert updated == True",1,10,//Compare/ops/Is | //Compare/ops/Eq,BOOL001,boolean-comparison,Using = or == operators to compare boolean values,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,73,23,assert updated == True,"                    input_dir=input_dir, 
                    output_dir=output_dir, 
                    parameter=5
                ) == 5
                assert updated == True",1,10,//Compare/ops/Is | //Compare/ops/Eq,BOOL001,boolean-comparison,Using = or == operators to compare boolean values,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,73,23,assert updated == True,"                    input_dir=input_dir, 
                    output_dir=output_dir, 
                    parameter=5
                ) == 5
                assert updated == True",1,10,//Compare/ops/Is | //Compare/ops/Eq,BOOL001,boolean-comparison,Using = or == operators to compare boolean values,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,73,23,assert updated == True,"                    input_dir=input_dir, 
                    output_dir=output_dir, 
                    parameter=5
                ) == 5
                assert updated == True",1,10,//Compare/ops/Is | //Compare/ops/Eq,BOOL001,boolean-comparison,Using = or == operators to compare boolean values,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,73,23,assert updated == True,"                    input_dir=input_dir, 
                    output_dir=output_dir, 
                    parameter=5
                ) == 5
                assert updated == True",1,10,//Compare/ops/Is | //Compare/ops/Eq,BOOL001,boolean-comparison,Using = or == operators to compare boolean values,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,73,23,assert updated == True,"                    input_dir=input_dir, 
                    output_dir=output_dir, 
                    parameter=5
                ) == 5
                assert updated == True",1,10,//Compare/ops/Is | //Compare/ops/Eq,BOOL001,boolean-comparison,Using = or == operators to compare boolean values,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,73,23,assert updated == True,"                    input_dir=input_dir, 
                    output_dir=output_dir, 
                    parameter=5
                ) == 5
                assert updated == True",1,10,//Compare/ops/Is | //Compare/ops/Eq,BOOL001,boolean-comparison,Using = or == operators to compare boolean values,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,73,23,assert updated == True,"                    input_dir=input_dir, 
                    output_dir=output_dir, 
                    parameter=5
                ) == 5
                assert updated == True",1,10,//Compare/ops/Is | //Compare/ops/Eq,BOOL001,boolean-comparison,Using = or == operators to compare boolean values,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,73,23,assert updated == True,"                    input_dir=input_dir, 
                    output_dir=output_dir, 
                    parameter=5
                ) == 5
                assert updated == True",1,10,//Compare/ops/Is | //Compare/ops/Eq,BOOL001,boolean-comparison,Using = or == operators to compare boolean values,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,73,23,assert updated == True,"                    input_dir=input_dir, 
                    output_dir=output_dir, 
                    parameter=5
                ) == 5
                assert updated == True",1,10,//Compare/ops/Is | //Compare/ops/Eq,BOOL001,boolean-comparison,Using = or == operators to compare boolean values,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,65,40,"if input_hash in db and db[input_hash][""hash""] == output_hash:","
                input_hash = input_tracker.hash()
                output_hash = test_output_tracker.hash()

                if input_hash in db and db[input_hash][""hash""] == output_hash:
                    return db[input_hash][""return_value""]
                else:
                    return_value = function(**kwargs)

                    output_tracker = LazyTracker()",1,10,//Compare/ops/Is | //Compare/ops/Eq,BOOL001,boolean-comparison,Using = or == operators to compare boolean values,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,65.0,"                if input_hash in db and db[input_hash][""hash""] == output_hash:",65.0,"                if input_hash in db and db[input_hash][""hash""] == output_hash:",65.0,"                if input_hash in db and db[input_hash][""hash""] == output_hash:",65.0,"                if input_hash in db and db[input_hash][""hash""] == output_hash:",,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,6,0,def test_hparams():,"import shutil
from tempfile import TemporaryDirectory, tempdir
from lazytracker import LazyTracker

def test_hparams():
    hparams_1 = {
        'a': 1,
        'b': 2,
        'c': {
            'd': 1",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,35,0,def test_picable_function():,"
    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):
        return x+2
",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,36,4,def func_1(x):,"    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):
        return x+2

    tracker_1 = LazyTracker()",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,38,4,def func_2(x):,"
def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):
        return x+2

    tracker_1.add_picklables([func_1])
",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_files,53.0,53,0,def test_files():,"
    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_files():
    with TemporaryDirectory() as tmpdir:
        with open(f'{tmpdir}/a.txt', 'w') as f:
            f.write(""test file 1"")

        with open(f'{tmpdir}/b.txt', 'w') as f:",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_directories,76.0,76,0,def test_directories():,"
        assert tracker_1.hash() == tracker_2.hash()
        assert tracker_1.hash() != tracker_3.hash()

def test_directories():
    with TemporaryDirectory() as tmpdir:
        os.makedirs(f""{tmpdir}/1"", exist_ok=True)

        with open(f'{tmpdir}/1/a.txt', 'w') as f:
            f.write(""test file 1"")",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,5,0,def test_cached():,"from tempfile import TemporaryDirectory
from lazytracker import cached


def test_cached():
    with TemporaryDirectory() as cache_dir:
        updated = False

        @cached(
            cache_dir=cache_dir,",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,14,8,"def test_function(input_dir: str, output_dir: str, parameter: int):","            cache_dir=cache_dir,
            input_dirs=[""input_dir""],
            output_dirs=[""output_dir""]
        )
        def test_function(input_dir: str, output_dir: str, parameter: int):
            nonlocal updated

            with open(f""{output_dir}/test.txt"", 'w') as f:
                f.write(str(parameter))
",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,__init__,9.0,9,4,def __init__(self):,"from pathlib import Path


class LazyTracker:
    def __init__(self):
        """"""LazyTracked enables you to compute combined hash of things like files, directories, python objects etc.""""""
        self._hasher = hashlib.md5()

    def add_directories(self, directories: List[str], chunk_num_blocks=128):
        """"""Include hash of all files inside directory (including files in subdirectories)",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_directories,13.0,13,4,"def add_directories(self, directories: List[str], chunk_num_blocks=128):","    def __init__(self):
        """"""LazyTracked enables you to compute combined hash of things like files, directories, python objects etc.""""""
        self._hasher = hashlib.md5()

    def add_directories(self, directories: List[str], chunk_num_blocks=128):
        """"""Include hash of all files inside directory (including files in subdirectories)

        Args:
            directories (List[str]): List of directories to take files from
            chunk_num_blocks (int, optional): How many chunks to read at once. Defaults to 128.",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,13.0,"    def add_directories(self, directories: List[str], chunk_num_blocks=128):","--- lazytracker/lazytracker.py
+++ lazytracker/lazytracker.py
@@ -10,7 +10,7 @@
         """"""LazyTracked enables you to compute combined hash of things like files, directories, python objects etc.""""""
         self._hasher = hashlib.md5()
 
-    def add_directories(self, directories: List[str], chunk_num_blocks=128):
+    def add_directories(self, directories: List[str], chunk_num_blocks=129):
         """"""Include hash of all files inside directory (including files in subdirectories)
 
         Args:
",failure,bad_survived,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_files,29.0,29,4,"def add_files(self, filepaths: List[str], chunk_num_blocks=128):","        files_to_check = sorted(files_to_check)

        self.add_files(files_to_check, chunk_num_blocks)

    def add_files(self, filepaths: List[str], chunk_num_blocks=128):
        """"""Include hash of files

        Args:
            filepaths (List[str]): List of paths to files
            chunk_num_blocks (int, optional): How many chunks to read at once. Defaults to 128.",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,,,,,,29.0,"    def add_files(self, filepaths: List[str], chunk_num_blocks=128):","--- lazytracker/lazytracker.py
+++ lazytracker/lazytracker.py
@@ -26,7 +26,7 @@
 
         self.add_files(files_to_check, chunk_num_blocks)
 
-    def add_files(self, filepaths: List[str], chunk_num_blocks=128):
+    def add_files(self, filepaths: List[str], chunk_num_blocks=129):
         """"""Include hash of files
 
         Args:
",failure,bad_survived,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_hparams,44.0,44,4,"def add_hparams(self, hparams: dict):","                        self._hasher.update(chunk)
            else:
                self._hasher.update(dill.dumps(None))

    def add_hparams(self, hparams: dict):
        """"""Add hash of python dictionary. Utility function for storing pickable

        Args:
            hparams (dict): A dictionary to be included
        """"""",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_picklables,52.0,52,4,"def add_picklables(self, objects: List[Any], recursive: bool=False):","            hparams (dict): A dictionary to be included
        """"""
        self.add_picklables([hparams])

    def add_picklables(self, objects: List[Any], recursive: bool=False):
        """"""Include hash of any picklable python objects (pickable by dill)

        Args:
            objects (List[Any]): List of python objects to hash
            recursive (bool): Wheter to track dependencies of object. Eg.: if function calls another function, if ",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,,,,,,,,,,,52.0,"    def add_picklables(self, objects: List[Any], recursive: bool=False):","--- lazytracker/lazytracker.py
+++ lazytracker/lazytracker.py
@@ -49,7 +49,7 @@
         """"""
         self.add_picklables([hparams])
 
-    def add_picklables(self, objects: List[Any], recursive: bool=False):
+    def add_picklables(self, objects: List[Any], recursive: bool=True):
         """"""Include hash of any picklable python objects (pickable by dill)
 
         Args:
",failure,bad_survived,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,hash,63.0,63,4,def hash(self) -> str:,"        """"""
        for obj in objects:
            self._hasher.update(dill.dumps(obj, recurse=recursive))

    def hash(self) -> str:
        """"""Compute hash

        Returns:
            str: Computed checksum of all things tracked
        """"""",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,14,0,def cached(,"shelve.Pickler = Pickler
shelve.Unpickler = Unpickler


def cached(
    cache_dir: str = "".lazytracker"",
    input_files: Optional[List[str]] = None,
    input_dirs: Optional[List[str]] = None,
    output_dirs: Optional[List[str]] = None,
    output_files: Optional[List[str]] = None,",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,31,4,def inner_func(function: Callable):,"        output_dirs (Optional[List[str]], optional): name of function parameters, that are paths to otuput files. Defaults to None.
        output_files (Optional[List[str]], optional): name of function parameters, that are paths to directories with output files. Defaults to None.
    """"""

    def inner_func(function: Callable):
        @wraps(function)
        def wrapper(*args, **kwargs):
            kwargs.update(dict(zip(function.__code__.co_varnames, args)))

            os.makedirs(f""{cache_dir}"", exist_ok=True)",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,33,8,"def wrapper(*args, **kwargs):","    """"""

    def inner_func(function: Callable):
        @wraps(function)
        def wrapper(*args, **kwargs):
            kwargs.update(dict(zip(function.__code__.co_varnames, args)))

            os.makedirs(f""{cache_dir}"", exist_ok=True)
            with shelve.open(f""{cache_dir}/tracked_functions"", ""c"") as db:
                input_tracker = LazyTracker()",1,10,//FunctionDef[not(args/arg/annotation) or not(returns)],ANNOT001,missing-annotations,A function does not explicitly annotate arguments/parameters or the expected output,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,14,0,def cached(,"shelve.Pickler = Pickler
shelve.Unpickler = Unpickler


def cached(
    cache_dir: str = "".lazytracker"",
    input_files: Optional[List[str]] = None,
    input_dirs: Optional[List[str]] = None,
    output_dirs: Optional[List[str]] = None,
    output_files: Optional[List[str]] = None,",1,10,//FunctionDef[body//comprehension/target/Name],FLV001,Function uses loop variable,"The loop variable is not bound in the function definition, so it will always have the value it had in the last iteration",0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,31,4,def inner_func(function: Callable):,"        output_dirs (Optional[List[str]], optional): name of function parameters, that are paths to otuput files. Defaults to None.
        output_files (Optional[List[str]], optional): name of function parameters, that are paths to directories with output files. Defaults to None.
    """"""

    def inner_func(function: Callable):
        @wraps(function)
        def wrapper(*args, **kwargs):
            kwargs.update(dict(zip(function.__code__.co_varnames, args)))

            os.makedirs(f""{cache_dir}"", exist_ok=True)",1,10,//FunctionDef[body//comprehension/target/Name],FLV001,Function uses loop variable,"The loop variable is not bound in the function definition, so it will always have the value it had in the last iteration",0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,33,8,"def wrapper(*args, **kwargs):","    """"""

    def inner_func(function: Callable):
        @wraps(function)
        def wrapper(*args, **kwargs):
            kwargs.update(dict(zip(function.__code__.co_varnames, args)))

            os.makedirs(f""{cache_dir}"", exist_ok=True)
            with shelve.open(f""{cache_dir}/tracked_functions"", ""c"") as db:
                input_tracker = LazyTracker()",1,10,//FunctionDef[body//comprehension/target/Name],FLV001,Function uses loop variable,"The loop variable is not bound in the function definition, so it will always have the value it had in the last iteration",0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,35,0,def test_picable_function():,"
    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):
        return x+2
",1,10,//FunctionDef//FunctionDef/ancestor::*,F001,Nested Depth (Set value),Ensure the depth of nesting within functions does not exceed the set value.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,5,0,def test_cached():,"from tempfile import TemporaryDirectory
from lazytracker import cached


def test_cached():
    with TemporaryDirectory() as cache_dir:
        updated = False

        @cached(
            cache_dir=cache_dir,",1,10,//FunctionDef//FunctionDef/ancestor::*,F001,Nested Depth (Set value),Ensure the depth of nesting within functions does not exceed the set value.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,6,4,with TemporaryDirectory() as cache_dir:,"from lazytracker import cached


def test_cached():
    with TemporaryDirectory() as cache_dir:
        updated = False

        @cached(
            cache_dir=cache_dir,
            input_dirs=[""input_dir""],",1,10,//FunctionDef//FunctionDef/ancestor::*,F001,Nested Depth (Set value),Ensure the depth of nesting within functions does not exceed the set value.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,14,0,def cached(,"shelve.Pickler = Pickler
shelve.Unpickler = Unpickler


def cached(
    cache_dir: str = "".lazytracker"",
    input_files: Optional[List[str]] = None,
    input_dirs: Optional[List[str]] = None,
    output_dirs: Optional[List[str]] = None,
    output_files: Optional[List[str]] = None,",1,10,//FunctionDef//FunctionDef/ancestor::*,F001,Nested Depth (Set value),Ensure the depth of nesting within functions does not exceed the set value.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,31,4,def inner_func(function: Callable):,"        output_dirs (Optional[List[str]], optional): name of function parameters, that are paths to otuput files. Defaults to None.
        output_files (Optional[List[str]], optional): name of function parameters, that are paths to directories with output files. Defaults to None.
    """"""

    def inner_func(function: Callable):
        @wraps(function)
        def wrapper(*args, **kwargs):
            kwargs.update(dict(zip(function.__code__.co_varnames, args)))

            os.makedirs(f""{cache_dir}"", exist_ok=True)",1,10,//FunctionDef//FunctionDef/ancestor::*,F001,Nested Depth (Set value),Ensure the depth of nesting within functions does not exceed the set value.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,44,16,if input_files is not None:,"                input_tracker.add_hparams(kwargs)
                if input_dirs is not None:
                    input_dirs_values = [kwargs[input_dir] for input_dir in input_dirs]
                    input_tracker.add_directories(input_dirs_values)
                if input_files is not None:
                    input_files_values = [
                        kwargs[input_file] for input_file in input_files
                    ]
                    input_tracker.add_files(input_files_values)
",1,10,//FunctionDef//If/following-sibling::If | //FunctionDef//If/following-sibling::Elif | //FunctionDef//If/following-sibling::Else,F002,"Number of conditions (if, if-else, and switch) in a Function","Ensure the number of conditions (if, if-else, and switch) in a function is within acceptable limits.",0,0,10,44,0,,,,,,,,,,,,,,,,,,44.0,                if input_files is not None:,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,51,16,if output_dirs is not None:,"                    ]
                    input_tracker.add_files(input_files_values)

                test_output_tracker = LazyTracker()
                if output_dirs is not None:
                    output_dirs_values = [
                        kwargs[output_dir] for output_dir in output_dirs
                    ]
                    test_output_tracker.add_directories(output_dirs_values)
                if output_files is not None:",1,10,//FunctionDef//If/following-sibling::If | //FunctionDef//If/following-sibling::Elif | //FunctionDef//If/following-sibling::Else,F002,"Number of conditions (if, if-else, and switch) in a Function","Ensure the number of conditions (if, if-else, and switch) in a function is within acceptable limits.",0,0,10,44,0,,,,,,,,,,,,,,,,,,,,51.0,                if output_dirs is not None:,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,56,16,if output_files is not None:,"                    output_dirs_values = [
                        kwargs[output_dir] for output_dir in output_dirs
                    ]
                    test_output_tracker.add_directories(output_dirs_values)
                if output_files is not None:
                    output_files_values = [
                        kwargs[output_file] for output_file in output_files
                    ]
                    test_output_tracker.add_files(output_files_values)
",1,10,//FunctionDef//If/following-sibling::If | //FunctionDef//If/following-sibling::Elif | //FunctionDef//If/following-sibling::Else,F002,"Number of conditions (if, if-else, and switch) in a Function","Ensure the number of conditions (if, if-else, and switch) in a function is within acceptable limits.",0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,56.0,                if output_files is not None:,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,65,16,"if input_hash in db and db[input_hash][""hash""] == output_hash:","
                input_hash = input_tracker.hash()
                output_hash = test_output_tracker.hash()

                if input_hash in db and db[input_hash][""hash""] == output_hash:
                    return db[input_hash][""return_value""]
                else:
                    return_value = function(**kwargs)

                    output_tracker = LazyTracker()",1,10,//FunctionDef//If/following-sibling::If | //FunctionDef//If/following-sibling::Elif | //FunctionDef//If/following-sibling::Else,F002,"Number of conditions (if, if-else, and switch) in a Function","Ensure the number of conditions (if, if-else, and switch) in a function is within acceptable limits.",0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,65.0,"                if input_hash in db and db[input_hash][""hash""] == output_hash:",65.0,"                if input_hash in db and db[input_hash][""hash""] == output_hash:",65.0,"                if input_hash in db and db[input_hash][""hash""] == output_hash:",65.0,"                if input_hash in db and db[input_hash][""hash""] == output_hash:",,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,76,20,if output_files is not None:,"                        output_dirs_values = [
                            kwargs[output_dir] for output_dir in output_dirs
                        ]
                        output_tracker.add_directories(output_dirs_values)
                    if output_files is not None:
                        output_files_values = [
                            kwargs[output_file] for output_file in output_files
                        ]
                        output_tracker.add_files(output_files_values)
",1,10,//FunctionDef//If/following-sibling::If | //FunctionDef//If/following-sibling::Elif | //FunctionDef//If/following-sibling::Else,F002,"Number of conditions (if, if-else, and switch) in a Function","Ensure the number of conditions (if, if-else, and switch) in a function is within acceptable limits.",0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,76.0,                    if output_files is not None:,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,71,20,if output_dirs is not None:,"                else:
                    return_value = function(**kwargs)

                    output_tracker = LazyTracker()
                    if output_dirs is not None:
                        output_dirs_values = [
                            kwargs[output_dir] for output_dir in output_dirs
                        ]
                        output_tracker.add_directories(output_dirs_values)
                    if output_files is not None:",1,1,//FunctionDef//If/descendant::If,CL001,"The number of nested conditions (e.g., if{if{}}) in a Function","Ensure there is at least one nested condition (e.g., if{if{}}) in a function.",0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,71.0,                    if output_dirs is not None:,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,76,20,if output_files is not None:,"                        output_dirs_values = [
                            kwargs[output_dir] for output_dir in output_dirs
                        ]
                        output_tracker.add_directories(output_dirs_values)
                    if output_files is not None:
                        output_files_values = [
                            kwargs[output_file] for output_file in output_files
                        ]
                        output_tracker.add_files(output_files_values)
",1,1,//FunctionDef//If/descendant::If,CL001,"The number of nested conditions (e.g., if{if{}}) in a Function","Ensure there is at least one nested condition (e.g., if{if{}}) in a function.",0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,76.0,                    if output_files is not None:,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,32,4,assert tracker_1.hash() == tracker_2.hash(),"
    tracker_3 = LazyTracker()
    tracker_3.add_hparams(hparams_2)

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():
    def func_1(x):
        return x+1",1,10,//FunctionDef[@type='str']/body/Assert,NOA001,number-of-assertions,Ensure the presence of assertions within function bodies of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,33,4,assert tracker_1.hash() != tracker_3.hash(),"    tracker_3 = LazyTracker()
    tracker_3.add_hparams(hparams_2)

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):",1,10,//FunctionDef[@type='str']/body/Assert,NOA001,number-of-assertions,Ensure the presence of assertions within function bodies of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,50,4,assert tracker_1.hash() == tracker_2.hash(),"
    tracker_3 = LazyTracker()
    tracker_3.add_hparams([func_2])

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_files():
    with TemporaryDirectory() as tmpdir:
        with open(f'{tmpdir}/a.txt', 'w') as f:",1,10,//FunctionDef[@type='str']/body/Assert,NOA001,number-of-assertions,Ensure the presence of assertions within function bodies of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,51,4,assert tracker_1.hash() != tracker_3.hash(),"    tracker_3 = LazyTracker()
    tracker_3.add_hparams([func_2])

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_files():
    with TemporaryDirectory() as tmpdir:
        with open(f'{tmpdir}/a.txt', 'w') as f:
            f.write(""test file 1"")",1,10,//FunctionDef[@type='str']/body/Assert,NOA001,number-of-assertions,Ensure the presence of assertions within function bodies of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,7,4,hparams_1 = {,"from tempfile import TemporaryDirectory, tempdir
from lazytracker import LazyTracker

def test_hparams():
    hparams_1 = {
        'a': 1,
        'b': 2,
        'c': {
            'd': 1
        }",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,15,4,hparams_2 = {,"            'd': 1
        }
    }

    hparams_2 = {
        'a': 1,
        'b': 2,
        'c': {
            'd': 2
        }",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,23,4,tracker_1 = LazyTracker(),"            'd': 2
        }
    }

    tracker_1 = LazyTracker()
    tracker_1.add_hparams(hparams_1)

    tracker_2 = LazyTracker()
    tracker_2.add_hparams(hparams_1)
",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,24,4,tracker_1.add_hparams(hparams_1),"        }
    }

    tracker_1 = LazyTracker()
    tracker_1.add_hparams(hparams_1)

    tracker_2 = LazyTracker()
    tracker_2.add_hparams(hparams_1)

    tracker_3 = LazyTracker()",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,26,4,tracker_2 = LazyTracker(),"
    tracker_1 = LazyTracker()
    tracker_1.add_hparams(hparams_1)

    tracker_2 = LazyTracker()
    tracker_2.add_hparams(hparams_1)

    tracker_3 = LazyTracker()
    tracker_3.add_hparams(hparams_2)
",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,27,4,tracker_2.add_hparams(hparams_1),"    tracker_1 = LazyTracker()
    tracker_1.add_hparams(hparams_1)

    tracker_2 = LazyTracker()
    tracker_2.add_hparams(hparams_1)

    tracker_3 = LazyTracker()
    tracker_3.add_hparams(hparams_2)

    assert tracker_1.hash() == tracker_2.hash()",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,29,4,tracker_3 = LazyTracker(),"
    tracker_2 = LazyTracker()
    tracker_2.add_hparams(hparams_1)

    tracker_3 = LazyTracker()
    tracker_3.add_hparams(hparams_2)

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()
",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,30,4,tracker_3.add_hparams(hparams_2),"    tracker_2 = LazyTracker()
    tracker_2.add_hparams(hparams_1)

    tracker_3 = LazyTracker()
    tracker_3.add_hparams(hparams_2)

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,32,4,assert tracker_1.hash() == tracker_2.hash(),"
    tracker_3 = LazyTracker()
    tracker_3.add_hparams(hparams_2)

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():
    def func_1(x):
        return x+1",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,33,4,assert tracker_1.hash() != tracker_3.hash(),"    tracker_3 = LazyTracker()
    tracker_3.add_hparams(hparams_2)

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,36,4,def func_1(x):,"    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):
        return x+2

    tracker_1 = LazyTracker()",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,38,4,def func_2(x):,"
def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):
        return x+2

    tracker_1 = LazyTracker()
    tracker_1.add_picklables([func_1])
",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,41,4,tracker_1 = LazyTracker(),"        return x+1
    def func_2(x):
        return x+2

    tracker_1 = LazyTracker()
    tracker_1.add_picklables([func_1])

    tracker_2 = LazyTracker()
    tracker_2.add_picklables([func_1])
",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,42,4,tracker_1.add_picklables([func_1]),"    def func_2(x):
        return x+2

    tracker_1 = LazyTracker()
    tracker_1.add_picklables([func_1])

    tracker_2 = LazyTracker()
    tracker_2.add_picklables([func_1])

    tracker_3 = LazyTracker()",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,44,4,tracker_2 = LazyTracker(),"
    tracker_1 = LazyTracker()
    tracker_1.add_picklables([func_1])

    tracker_2 = LazyTracker()
    tracker_2.add_picklables([func_1])

    tracker_3 = LazyTracker()
    tracker_3.add_hparams([func_2])
",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,45,4,tracker_2.add_picklables([func_1]),"    tracker_1 = LazyTracker()
    tracker_1.add_picklables([func_1])

    tracker_2 = LazyTracker()
    tracker_2.add_picklables([func_1])

    tracker_3 = LazyTracker()
    tracker_3.add_hparams([func_2])

    assert tracker_1.hash() == tracker_2.hash()",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,47,4,tracker_3 = LazyTracker(),"
    tracker_2 = LazyTracker()
    tracker_2.add_picklables([func_1])

    tracker_3 = LazyTracker()
    tracker_3.add_hparams([func_2])

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()
",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,48,4,tracker_3.add_hparams([func_2]),"    tracker_2 = LazyTracker()
    tracker_2.add_picklables([func_1])

    tracker_3 = LazyTracker()
    tracker_3.add_hparams([func_2])

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_files():",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,50,4,assert tracker_1.hash() == tracker_2.hash(),"
    tracker_3 = LazyTracker()
    tracker_3.add_hparams([func_2])

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_files():
    with TemporaryDirectory() as tmpdir:
        with open(f'{tmpdir}/a.txt', 'w') as f:",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,51,4,assert tracker_1.hash() != tracker_3.hash(),"    tracker_3 = LazyTracker()
    tracker_3.add_hparams([func_2])

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_files():
    with TemporaryDirectory() as tmpdir:
        with open(f'{tmpdir}/a.txt', 'w') as f:
            f.write(""test file 1"")",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_files,53.0,54,4,with TemporaryDirectory() as tmpdir:,"    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_files():
    with TemporaryDirectory() as tmpdir:
        with open(f'{tmpdir}/a.txt', 'w') as f:
            f.write(""test file 1"")

        with open(f'{tmpdir}/b.txt', 'w') as f:
            f.write(""test file 1"")",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_directories,76.0,77,4,with TemporaryDirectory() as tmpdir:,"        assert tracker_1.hash() == tracker_2.hash()
        assert tracker_1.hash() != tracker_3.hash()

def test_directories():
    with TemporaryDirectory() as tmpdir:
        os.makedirs(f""{tmpdir}/1"", exist_ok=True)

        with open(f'{tmpdir}/1/a.txt', 'w') as f:
            f.write(""test file 1"")
",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,6,4,with TemporaryDirectory() as cache_dir:,"from lazytracker import cached


def test_cached():
    with TemporaryDirectory() as cache_dir:
        updated = False

        @cached(
            cache_dir=cache_dir,
            input_dirs=[""input_dir""],",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,15,12,nonlocal updated,"            input_dirs=[""input_dir""],
            output_dirs=[""output_dir""]
        )
        def test_function(input_dir: str, output_dir: str, parameter: int):
            nonlocal updated

            with open(f""{output_dir}/test.txt"", 'w') as f:
                f.write(str(parameter))

            updated = True",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,17,12,"with open(f""{output_dir}/test.txt"", 'w') as f:","        )
        def test_function(input_dir: str, output_dir: str, parameter: int):
            nonlocal updated

            with open(f""{output_dir}/test.txt"", 'w') as f:
                f.write(str(parameter))

            updated = True
            return parameter
",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,20,12,updated = True,"
            with open(f""{output_dir}/test.txt"", 'w') as f:
                f.write(str(parameter))

            updated = True
            return parameter

        with TemporaryDirectory() as input_dir:
            with open(f""{input_dir}/test.txt"", 'w') as f:
                f.write(""test_file"")",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,21,12,return parameter,"            with open(f""{output_dir}/test.txt"", 'w') as f:
                f.write(str(parameter))

            updated = True
            return parameter

        with TemporaryDirectory() as input_dir:
            with open(f""{input_dir}/test.txt"", 'w') as f:
                f.write(""test_file"")
",1,10,"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",LOF001,count-test-method-lines,Count the lines within test methods in functions of type 'str' that start with 'test_'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,7,4,hparams_1 = {,"from tempfile import TemporaryDirectory, tempdir
from lazytracker import LazyTracker

def test_hparams():
    hparams_1 = {
        'a': 1,
        'b': 2,
        'c': {
            'd': 1
        }",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,15,4,hparams_2 = {,"            'd': 1
        }
    }

    hparams_2 = {
        'a': 1,
        'b': 2,
        'c': {
            'd': 2
        }",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,23,4,tracker_1 = LazyTracker(),"            'd': 2
        }
    }

    tracker_1 = LazyTracker()
    tracker_1.add_hparams(hparams_1)

    tracker_2 = LazyTracker()
    tracker_2.add_hparams(hparams_1)
",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,24,4,tracker_1.add_hparams(hparams_1),"        }
    }

    tracker_1 = LazyTracker()
    tracker_1.add_hparams(hparams_1)

    tracker_2 = LazyTracker()
    tracker_2.add_hparams(hparams_1)

    tracker_3 = LazyTracker()",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,26,4,tracker_2 = LazyTracker(),"
    tracker_1 = LazyTracker()
    tracker_1.add_hparams(hparams_1)

    tracker_2 = LazyTracker()
    tracker_2.add_hparams(hparams_1)

    tracker_3 = LazyTracker()
    tracker_3.add_hparams(hparams_2)
",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,27,4,tracker_2.add_hparams(hparams_1),"    tracker_1 = LazyTracker()
    tracker_1.add_hparams(hparams_1)

    tracker_2 = LazyTracker()
    tracker_2.add_hparams(hparams_1)

    tracker_3 = LazyTracker()
    tracker_3.add_hparams(hparams_2)

    assert tracker_1.hash() == tracker_2.hash()",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,29,4,tracker_3 = LazyTracker(),"
    tracker_2 = LazyTracker()
    tracker_2.add_hparams(hparams_1)

    tracker_3 = LazyTracker()
    tracker_3.add_hparams(hparams_2)

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()
",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,30,4,tracker_3.add_hparams(hparams_2),"    tracker_2 = LazyTracker()
    tracker_2.add_hparams(hparams_1)

    tracker_3 = LazyTracker()
    tracker_3.add_hparams(hparams_2)

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,32,4,assert tracker_1.hash() == tracker_2.hash(),"
    tracker_3 = LazyTracker()
    tracker_3.add_hparams(hparams_2)

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():
    def func_1(x):
        return x+1",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_hparams,6.0,33,4,assert tracker_1.hash() != tracker_3.hash(),"    tracker_3 = LazyTracker()
    tracker_3.add_hparams(hparams_2)

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,36,4,def func_1(x):,"    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):
        return x+2

    tracker_1 = LazyTracker()",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,37,8,return x+1,"    assert tracker_1.hash() != tracker_3.hash()

def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):
        return x+2

    tracker_1 = LazyTracker()
    tracker_1.add_picklables([func_1])",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,38,4,def func_2(x):,"
def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):
        return x+2

    tracker_1 = LazyTracker()
    tracker_1.add_picklables([func_1])
",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,39,8,return x+2,"def test_picable_function():
    def func_1(x):
        return x+1
    def func_2(x):
        return x+2

    tracker_1 = LazyTracker()
    tracker_1.add_picklables([func_1])

    tracker_2 = LazyTracker()",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,41,4,tracker_1 = LazyTracker(),"        return x+1
    def func_2(x):
        return x+2

    tracker_1 = LazyTracker()
    tracker_1.add_picklables([func_1])

    tracker_2 = LazyTracker()
    tracker_2.add_picklables([func_1])
",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,42,4,tracker_1.add_picklables([func_1]),"    def func_2(x):
        return x+2

    tracker_1 = LazyTracker()
    tracker_1.add_picklables([func_1])

    tracker_2 = LazyTracker()
    tracker_2.add_picklables([func_1])

    tracker_3 = LazyTracker()",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,44,4,tracker_2 = LazyTracker(),"
    tracker_1 = LazyTracker()
    tracker_1.add_picklables([func_1])

    tracker_2 = LazyTracker()
    tracker_2.add_picklables([func_1])

    tracker_3 = LazyTracker()
    tracker_3.add_hparams([func_2])
",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,45,4,tracker_2.add_picklables([func_1]),"    tracker_1 = LazyTracker()
    tracker_1.add_picklables([func_1])

    tracker_2 = LazyTracker()
    tracker_2.add_picklables([func_1])

    tracker_3 = LazyTracker()
    tracker_3.add_hparams([func_2])

    assert tracker_1.hash() == tracker_2.hash()",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,47,4,tracker_3 = LazyTracker(),"
    tracker_2 = LazyTracker()
    tracker_2.add_picklables([func_1])

    tracker_3 = LazyTracker()
    tracker_3.add_hparams([func_2])

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()
",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,48,4,tracker_3.add_hparams([func_2]),"    tracker_2 = LazyTracker()
    tracker_2.add_picklables([func_1])

    tracker_3 = LazyTracker()
    tracker_3.add_hparams([func_2])

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_files():",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,50,4,assert tracker_1.hash() == tracker_2.hash(),"
    tracker_3 = LazyTracker()
    tracker_3.add_hparams([func_2])

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_files():
    with TemporaryDirectory() as tmpdir:
        with open(f'{tmpdir}/a.txt', 'w') as f:",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_picable_function,35.0,51,4,assert tracker_1.hash() != tracker_3.hash(),"    tracker_3 = LazyTracker()
    tracker_3.add_hparams([func_2])

    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_files():
    with TemporaryDirectory() as tmpdir:
        with open(f'{tmpdir}/a.txt', 'w') as f:
            f.write(""test file 1"")",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_files,53.0,54,4,with TemporaryDirectory() as tmpdir:,"    assert tracker_1.hash() == tracker_2.hash()
    assert tracker_1.hash() != tracker_3.hash()

def test_files():
    with TemporaryDirectory() as tmpdir:
        with open(f'{tmpdir}/a.txt', 'w') as f:
            f.write(""test file 1"")

        with open(f'{tmpdir}/b.txt', 'w') as f:
            f.write(""test file 1"")",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_lazytracker.py,,test_directories,76.0,77,4,with TemporaryDirectory() as tmpdir:,"        assert tracker_1.hash() == tracker_2.hash()
        assert tracker_1.hash() != tracker_3.hash()

def test_directories():
    with TemporaryDirectory() as tmpdir:
        os.makedirs(f""{tmpdir}/1"", exist_ok=True)

        with open(f'{tmpdir}/1/a.txt', 'w') as f:
            f.write(""test file 1"")
",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,6,4,with TemporaryDirectory() as cache_dir:,"from lazytracker import cached


def test_cached():
    with TemporaryDirectory() as cache_dir:
        updated = False

        @cached(
            cache_dir=cache_dir,
            input_dirs=[""input_dir""],",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,15,12,nonlocal updated,"            input_dirs=[""input_dir""],
            output_dirs=[""output_dir""]
        )
        def test_function(input_dir: str, output_dir: str, parameter: int):
            nonlocal updated

            with open(f""{output_dir}/test.txt"", 'w') as f:
                f.write(str(parameter))

            updated = True",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,17,12,"with open(f""{output_dir}/test.txt"", 'w') as f:","        )
        def test_function(input_dir: str, output_dir: str, parameter: int):
            nonlocal updated

            with open(f""{output_dir}/test.txt"", 'w') as f:
                f.write(str(parameter))

            updated = True
            return parameter
",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,20,12,updated = True,"
            with open(f""{output_dir}/test.txt"", 'w') as f:
                f.write(str(parameter))

            updated = True
            return parameter

        with TemporaryDirectory() as input_dir:
            with open(f""{input_dir}/test.txt"", 'w') as f:
                f.write(""test_file"")",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,21,12,return parameter,"            with open(f""{output_dir}/test.txt"", 'w') as f:
                f.write(str(parameter))

            updated = True
            return parameter

        with TemporaryDirectory() as input_dir:
            with open(f""{input_dir}/test.txt"", 'w') as f:
                f.write(""test_file"")
",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,__init__,9.0,10,8,"""""""LazyTracked enables you to compute combined hash of things like files, directories, python objects etc.""""""","

class LazyTracker:
    def __init__(self):
        """"""LazyTracked enables you to compute combined hash of things like files, directories, python objects etc.""""""
        self._hasher = hashlib.md5()

    def add_directories(self, directories: List[str], chunk_num_blocks=128):
        """"""Include hash of all files inside directory (including files in subdirectories)
",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,__init__,9.0,11,8,self._hasher = hashlib.md5(),"
class LazyTracker:
    def __init__(self):
        """"""LazyTracked enables you to compute combined hash of things like files, directories, python objects etc.""""""
        self._hasher = hashlib.md5()

    def add_directories(self, directories: List[str], chunk_num_blocks=128):
        """"""Include hash of all files inside directory (including files in subdirectories)

        Args:",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,11.0,        self._hasher = hashlib.md5(),,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_directories,13.0,14,8,"""""""Include hash of all files inside directory (including files in subdirectories)","        """"""LazyTracked enables you to compute combined hash of things like files, directories, python objects etc.""""""
        self._hasher = hashlib.md5()

    def add_directories(self, directories: List[str], chunk_num_blocks=128):
        """"""Include hash of all files inside directory (including files in subdirectories)

        Args:
            directories (List[str]): List of directories to take files from
            chunk_num_blocks (int, optional): How many chunks to read at once. Defaults to 128.
        """"""",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_directories,13.0,20,8,files_to_check = [],"        Args:
            directories (List[str]): List of directories to take files from
            chunk_num_blocks (int, optional): How many chunks to read at once. Defaults to 128.
        """"""
        files_to_check = []

        for directory in directories:
            files_to_check.extend(list(Path(directory).rglob(""*"")))

        files_to_check = sorted(files_to_check)",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,20.0,        files_to_check = [],,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_directories,13.0,22,8,for directory in directories:,"            chunk_num_blocks (int, optional): How many chunks to read at once. Defaults to 128.
        """"""
        files_to_check = []

        for directory in directories:
            files_to_check.extend(list(Path(directory).rglob(""*"")))

        files_to_check = sorted(files_to_check)

        self.add_files(files_to_check, chunk_num_blocks)",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_directories,13.0,25,8,files_to_check = sorted(files_to_check),"
        for directory in directories:
            files_to_check.extend(list(Path(directory).rglob(""*"")))

        files_to_check = sorted(files_to_check)

        self.add_files(files_to_check, chunk_num_blocks)

    def add_files(self, filepaths: List[str], chunk_num_blocks=128):
        """"""Include hash of files",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,25.0,        files_to_check = sorted(files_to_check),,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_directories,13.0,27,8,"self.add_files(files_to_check, chunk_num_blocks)","            files_to_check.extend(list(Path(directory).rglob(""*"")))

        files_to_check = sorted(files_to_check)

        self.add_files(files_to_check, chunk_num_blocks)

    def add_files(self, filepaths: List[str], chunk_num_blocks=128):
        """"""Include hash of files

        Args:",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_files,29.0,30,8,"""""""Include hash of files","
        self.add_files(files_to_check, chunk_num_blocks)

    def add_files(self, filepaths: List[str], chunk_num_blocks=128):
        """"""Include hash of files

        Args:
            filepaths (List[str]): List of paths to files
            chunk_num_blocks (int, optional): How many chunks to read at once. Defaults to 128.
        """"""",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_files,29.0,36,8,for p in filepaths:,"        Args:
            filepaths (List[str]): List of paths to files
            chunk_num_blocks (int, optional): How many chunks to read at once. Defaults to 128.
        """"""
        for p in filepaths:
            if os.path.exists(p):
                with open(p, ""rb"") as f:
                    while chunk := f.read(chunk_num_blocks * self._hasher.block_size):
                        self._hasher.update(chunk)
            else:",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_hparams,44.0,45,8,"""""""Add hash of python dictionary. Utility function for storing pickable","            else:
                self._hasher.update(dill.dumps(None))

    def add_hparams(self, hparams: dict):
        """"""Add hash of python dictionary. Utility function for storing pickable

        Args:
            hparams (dict): A dictionary to be included
        """"""
        self.add_picklables([hparams])",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_hparams,44.0,50,8,self.add_picklables([hparams]),"
        Args:
            hparams (dict): A dictionary to be included
        """"""
        self.add_picklables([hparams])

    def add_picklables(self, objects: List[Any], recursive: bool=False):
        """"""Include hash of any picklable python objects (pickable by dill)

        Args:",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_picklables,52.0,53,8,"""""""Include hash of any picklable python objects (pickable by dill)","        """"""
        self.add_picklables([hparams])

    def add_picklables(self, objects: List[Any], recursive: bool=False):
        """"""Include hash of any picklable python objects (pickable by dill)

        Args:
            objects (List[Any]): List of python objects to hash
            recursive (bool): Wheter to track dependencies of object. Eg.: if function calls another function, if 
                recursive is set to true the changes in inner function are also tracked",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,add_picklables,52.0,60,8,for obj in objects:,"            objects (List[Any]): List of python objects to hash
            recursive (bool): Wheter to track dependencies of object. Eg.: if function calls another function, if 
                recursive is set to true the changes in inner function are also tracked
        """"""
        for obj in objects:
            self._hasher.update(dill.dumps(obj, recurse=recursive))

    def hash(self) -> str:
        """"""Compute hash
",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,hash,63.0,64,8,"""""""Compute hash","        for obj in objects:
            self._hasher.update(dill.dumps(obj, recurse=recursive))

    def hash(self) -> str:
        """"""Compute hash

        Returns:
            str: Computed checksum of all things tracked
        """"""
",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/lazytracker.py,,hash,63.0,70,8,return self._hasher.hexdigest(),"        Returns:
            str: Computed checksum of all things tracked
        """"""

        return self._hasher.hexdigest()",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,21,4,"""""""Function decorator for caching execution","    input_dirs: Optional[List[str]] = None,
    output_dirs: Optional[List[str]] = None,
    output_files: Optional[List[str]] = None,
):
    """"""Function decorator for caching execution

    Args:
        cache_dir (str, optional): Directory where the lazytracker cache information will be stored. Defaults to "".lazytracker"".
        input_files (Optional[List[str]], optional): name of function parameters, that are paths to input files. Defaults to None.
        input_dirs (Optional[List[str]], optional): name of function parameters, that are paths to directories with input files. Defaults to None.",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,31,4,def inner_func(function: Callable):,"        output_dirs (Optional[List[str]], optional): name of function parameters, that are paths to otuput files. Defaults to None.
        output_files (Optional[List[str]], optional): name of function parameters, that are paths to directories with output files. Defaults to None.
    """"""

    def inner_func(function: Callable):
        @wraps(function)
        def wrapper(*args, **kwargs):
            kwargs.update(dict(zip(function.__code__.co_varnames, args)))

            os.makedirs(f""{cache_dir}"", exist_ok=True)",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,33,8,"def wrapper(*args, **kwargs):","    """"""

    def inner_func(function: Callable):
        @wraps(function)
        def wrapper(*args, **kwargs):
            kwargs.update(dict(zip(function.__code__.co_varnames, args)))

            os.makedirs(f""{cache_dir}"", exist_ok=True)
            with shelve.open(f""{cache_dir}/tracked_functions"", ""c"") as db:
                input_tracker = LazyTracker()",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,34,12,"kwargs.update(dict(zip(function.__code__.co_varnames, args)))","
    def inner_func(function: Callable):
        @wraps(function)
        def wrapper(*args, **kwargs):
            kwargs.update(dict(zip(function.__code__.co_varnames, args)))

            os.makedirs(f""{cache_dir}"", exist_ok=True)
            with shelve.open(f""{cache_dir}/tracked_functions"", ""c"") as db:
                input_tracker = LazyTracker()
                input_tracker.add_picklables([function], recursive=True)",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,36,12,"os.makedirs(f""{cache_dir}"", exist_ok=True)","        @wraps(function)
        def wrapper(*args, **kwargs):
            kwargs.update(dict(zip(function.__code__.co_varnames, args)))

            os.makedirs(f""{cache_dir}"", exist_ok=True)
            with shelve.open(f""{cache_dir}/tracked_functions"", ""c"") as db:
                input_tracker = LazyTracker()
                input_tracker.add_picklables([function], recursive=True)
                input_tracker.add_hparams(kwargs)
                if input_dirs is not None:",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,36.0,"            os.makedirs(f""{cache_dir}"", exist_ok=True)","--- lazytracker/tracked.py
+++ lazytracker/tracked.py
@@ -33,7 +33,7 @@
         def wrapper(*args, **kwargs):
             kwargs.update(dict(zip(function.__code__.co_varnames, args)))
 
-            os.makedirs(f""{cache_dir}"", exist_ok=True)
+            os.makedirs(f""XX{cache_dir}XX"", exist_ok=True)
             with shelve.open(f""{cache_dir}/tracked_functions"", ""c"") as db:
                 input_tracker = LazyTracker()
                 input_tracker.add_picklables([function], recursive=True)
",failure,bad_survived,36.0,"            os.makedirs(f""{cache_dir}"", exist_ok=True)",,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,37,12,"with shelve.open(f""{cache_dir}/tracked_functions"", ""c"") as db:","        def wrapper(*args, **kwargs):
            kwargs.update(dict(zip(function.__code__.co_varnames, args)))

            os.makedirs(f""{cache_dir}"", exist_ok=True)
            with shelve.open(f""{cache_dir}/tracked_functions"", ""c"") as db:
                input_tracker = LazyTracker()
                input_tracker.add_picklables([function], recursive=True)
                input_tracker.add_hparams(kwargs)
                if input_dirs is not None:
                    input_dirs_values = [kwargs[input_dir] for input_dir in input_dirs]",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37.0,"            with shelve.open(f""{cache_dir}/tracked_functions"", ""c"") as db:",37.0,"            with shelve.open(f""{cache_dir}/tracked_functions"", ""c"") as db:"
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,89,8,return wrapper,"                    }

                    return return_value

        return wrapper

    return inner_func",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/lazytracker/tracked.py,,cached,14.0,91,4,return inner_func,"                    return return_value

        return wrapper

    return inner_func",1,10,//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,CML001,count-method-lines,Count the lines within methods in functions of type 'str'.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,28,16,assert test_function(,"            with open(f""{input_dir}/test.txt"", 'w') as f:
                f.write(""test_file"")

            with TemporaryDirectory() as output_dir:
                assert test_function(
                    input_dir=input_dir, 
                    output_dir=output_dir, 
                    parameter=3
                ) == 3
                assert updated == True",1,10,//Assert[count(.//Call[func/Name/@id='test_function']) > 0],TMIM001,test-methods-invoking-method,Identify test methods invoking specific methods.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,37,16,assert test_function(,"                assert updated == True

                # Don't change antything
                updated = False
                assert test_function(
                    input_dir=input_dir, 
                    output_dir=output_dir, 
                    parameter=3
                ) == 3
                assert updated == False",1,10,//Assert[count(.//Call[func/Name/@id='test_function']) > 0],TMIM001,test-methods-invoking-method,Identify test methods invoking specific methods.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,45,16,assert test_function(,"                ) == 3
                assert updated == False

                # Change parameter
                assert test_function(
                    input_dir=input_dir, 
                    output_dir=output_dir, 
                    parameter=5
                ) == 5
                assert updated == True",1,10,//Assert[count(.//Call[func/Name/@id='test_function']) > 0],TMIM001,test-methods-invoking-method,Identify test methods invoking specific methods.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,57,16,assert test_function(,"                updated = False
                with open(f""{input_dir}/test.txt"", 'w') as f:
                    f.write(""changed_test_file"")

                assert test_function(
                    input_dir=input_dir, 
                    output_dir=output_dir, 
                    parameter=5
                ) == 5
                assert updated == True",1,10,//Assert[count(.//Call[func/Name/@id='test_function']) > 0],TMIM001,test-methods-invoking-method,Identify test methods invoking specific methods.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/Users/danielbekele/jsem/SEERS/scripts/analyzer/demo/lazytracker/tests/test_tracked.py,,test_cached,5.0,68,16,assert test_function(,"                # Corrupt output
                with open(f""{output_dir}/test.txt"", 'w') as f:
                    f.write(""corrupted output"")

                assert test_function(
                    input_dir=input_dir, 
                    output_dir=output_dir, 
                    parameter=5
                ) == 5
                assert updated == True",1,10,//Assert[count(.//Call[func/Name/@id='test_function']) > 0],TMIM001,test-methods-invoking-method,Identify test methods invoking specific methods.,0,0,10,44,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
