[
  {
    "function_name": "calculate_area",
    "function_scope": "3-21",
    "patterns": [
      {
        "lineno": 13,
        "coloffset": 4,
        "linematch": "if shape == \"rectangle\":",
        "context": "        - No exception type (EXC)\n        - Missing type annotation (ANNOT)\n        - Unused Variables (UNUSED)\n    \"\"\"\n    if shape == \"rectangle\":\n        area = dimensions[0] * dimensions[1]\n        return area\n    else:\n        if shape == \"circle\":\n            radius = dimensions[0]",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 17,
        "coloffset": 8,
        "linematch": "if shape == \"circle\":",
        "context": "    if shape == \"rectangle\":\n        area = dimensions[0] * dimensions[1]\n        return area\n    else:\n        if shape == \"circle\":\n            radius = dimensions[0]\n            return 3.14 * dimensions[0] ** 2\n        else:\n            raise ValueError(\"Unsupported shape\")\n",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 3,
        "coloffset": 0,
        "linematch": "def calculate_area(shape,dimensions):",
        "context": "\"\"\" Config Checks Project. \"\"\"\n\ndef calculate_area(shape,dimensions):\n    \"\"\"This function calculates the area of a shape based on its dimensions.\n\n    Contains Patterns:\n        - Double Nested If (DNI)\n        - Magic Number (MN)",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 17,
        "coloffset": 8,
        "linematch": "if shape == \"circle\":",
        "context": "    if shape == \"rectangle\":\n        area = dimensions[0] * dimensions[1]\n        return area\n    else:\n        if shape == \"circle\":\n            radius = dimensions[0]\n            return 3.14 * dimensions[0] ** 2\n        else:\n            raise ValueError(\"Unsupported shape\")\n",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 3,
        "coloffset": 0,
        "linematch": "def calculate_area(shape,dimensions):",
        "context": "\"\"\" Config Checks Project. \"\"\"\n\ndef calculate_area(shape,dimensions):\n    \"\"\"This function calculates the area of a shape based on its dimensions.\n\n    Contains Patterns:\n        - Double Nested If (DNI)\n        - Magic Number (MN)",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 4,
        "coloffset": 4,
        "linematch": "\"\"\"This function calculates the area of a shape based on its dimensions.",
        "context": "\"\"\" Config Checks Project. \"\"\"\n\ndef calculate_area(shape,dimensions):\n    \"\"\"This function calculates the area of a shape based on its dimensions.\n\n    Contains Patterns:\n        - Double Nested If (DNI)\n        - Magic Number (MN)\n        - No exception type (EXC)",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 13,
        "coloffset": 4,
        "linematch": "if shape == \"rectangle\":",
        "context": "        - No exception type (EXC)\n        - Missing type annotation (ANNOT)\n        - Unused Variables (UNUSED)\n    \"\"\"\n    if shape == \"rectangle\":\n        area = dimensions[0] * dimensions[1]\n        return area\n    else:\n        if shape == \"circle\":\n            radius = dimensions[0]",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #1",
        "line": 13,
        "description": [
          "    if shape == \"rectangle\":"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -10,7 +10,7 @@\n         - Missing type annotation (ANNOT)\n         - Unused Variables (UNUSED)\n     \"\"\"\n-    if shape == \"rectangle\":\n+    if shape != \"rectangle\":\n         area = dimensions[0] * dimensions[1]\n         return area\n     else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #2",
        "line": 13,
        "description": [
          "    if shape == \"rectangle\":"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -10,7 +10,7 @@\n         - Missing type annotation (ANNOT)\n         - Unused Variables (UNUSED)\n     \"\"\"\n-    if shape == \"rectangle\":\n+    if shape == \"XXrectangleXX\":\n         area = dimensions[0] * dimensions[1]\n         return area\n     else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #3",
        "line": 14,
        "description": [
          "        area = dimensions[0] * dimensions[1]"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -11,7 +11,7 @@\n         - Unused Variables (UNUSED)\n     \"\"\"\n     if shape == \"rectangle\":\n-        area = dimensions[0] * dimensions[1]\n+        area = dimensions[1] * dimensions[1]\n         return area\n     else:\n         if shape == \"circle\":\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #4",
        "line": 14,
        "description": [
          "        area = dimensions[0] * dimensions[1]"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -11,7 +11,7 @@\n         - Unused Variables (UNUSED)\n     \"\"\"\n     if shape == \"rectangle\":\n-        area = dimensions[0] * dimensions[1]\n+        area = dimensions[0] / dimensions[1]\n         return area\n     else:\n         if shape == \"circle\":\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #5",
        "line": 14,
        "description": [
          "        area = dimensions[0] * dimensions[1]"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -11,7 +11,7 @@\n         - Unused Variables (UNUSED)\n     \"\"\"\n     if shape == \"rectangle\":\n-        area = dimensions[0] * dimensions[1]\n+        area = dimensions[0] * dimensions[2]\n         return area\n     else:\n         if shape == \"circle\":\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #6",
        "line": 14,
        "description": [
          "        area = dimensions[0] * dimensions[1]"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -11,7 +11,7 @@\n         - Unused Variables (UNUSED)\n     \"\"\"\n     if shape == \"rectangle\":\n-        area = dimensions[0] * dimensions[1]\n+        area = None\n         return area\n     else:\n         if shape == \"circle\":\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #7",
        "line": 17,
        "description": [
          "        if shape == \"circle\":"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -14,7 +14,7 @@\n         area = dimensions[0] * dimensions[1]\n         return area\n     else:\n-        if shape == \"circle\":\n+        if shape != \"circle\":\n             radius = dimensions[0]\n             return 3.14 * dimensions[0] ** 2\n         else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #8",
        "line": 17,
        "description": [
          "        if shape == \"circle\":"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -14,7 +14,7 @@\n         area = dimensions[0] * dimensions[1]\n         return area\n     else:\n-        if shape == \"circle\":\n+        if shape == \"XXcircleXX\":\n             radius = dimensions[0]\n             return 3.14 * dimensions[0] ** 2\n         else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #9",
        "line": 18,
        "description": [
          "            radius = dimensions[0]"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -15,7 +15,7 @@\n         return area\n     else:\n         if shape == \"circle\":\n-            radius = dimensions[0]\n+            radius = dimensions[1]\n             return 3.14 * dimensions[0] ** 2\n         else:\n             raise ValueError(\"Unsupported shape\")\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #10",
        "line": 18,
        "description": [
          "            radius = dimensions[0]"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -15,7 +15,7 @@\n         return area\n     else:\n         if shape == \"circle\":\n-            radius = dimensions[0]\n+            radius = None\n             return 3.14 * dimensions[0] ** 2\n         else:\n             raise ValueError(\"Unsupported shape\")\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #11",
        "line": 19,
        "description": [
          "            return 3.14 * dimensions[0] ** 2"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -16,7 +16,7 @@\n     else:\n         if shape == \"circle\":\n             radius = dimensions[0]\n-            return 3.14 * dimensions[0] ** 2\n+            return 4.140000000000001 * dimensions[0] ** 2\n         else:\n             raise ValueError(\"Unsupported shape\")\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #12",
        "line": 19,
        "description": [
          "            return 3.14 * dimensions[0] ** 2"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -16,7 +16,7 @@\n     else:\n         if shape == \"circle\":\n             radius = dimensions[0]\n-            return 3.14 * dimensions[0] ** 2\n+            return 3.14 / dimensions[0] ** 2\n         else:\n             raise ValueError(\"Unsupported shape\")\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #13",
        "line": 19,
        "description": [
          "            return 3.14 * dimensions[0] ** 2"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -16,7 +16,7 @@\n     else:\n         if shape == \"circle\":\n             radius = dimensions[0]\n-            return 3.14 * dimensions[0] ** 2\n+            return 3.14 * dimensions[1] ** 2\n         else:\n             raise ValueError(\"Unsupported shape\")\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #14",
        "line": 19,
        "description": [
          "            return 3.14 * dimensions[0] ** 2"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -16,7 +16,7 @@\n     else:\n         if shape == \"circle\":\n             radius = dimensions[0]\n-            return 3.14 * dimensions[0] ** 2\n+            return 3.14 * dimensions[0] * 2\n         else:\n             raise ValueError(\"Unsupported shape\")\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #15",
        "line": 19,
        "description": [
          "            return 3.14 * dimensions[0] ** 2"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -16,7 +16,7 @@\n     else:\n         if shape == \"circle\":\n             radius = dimensions[0]\n-            return 3.14 * dimensions[0] ** 2\n+            return 3.14 * dimensions[0] ** 3\n         else:\n             raise ValueError(\"Unsupported shape\")\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #16",
        "line": 21,
        "description": [
          "            raise ValueError(\"Unsupported shape\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -18,7 +18,7 @@\n             radius = dimensions[0]\n             return 3.14 * dimensions[0] ** 2\n         else:\n-            raise ValueError(\"Unsupported shape\")\n+            raise ValueError(\"XXUnsupported shapeXX\")\n \n class User:\n     \"\"\"This class represents a user with a name and email address.\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "check_none",
    "function_scope": "34-41",
    "patterns": [
      {
        "lineno": 40,
        "coloffset": 4,
        "linematch": "if value != None:",
        "context": "\n    Contains Pattern:\n        - none comparision (NONE)\n    \"\"\"\n    if value != None:\n        print(\"Value is not None\")\n\ndef handle_file(filename):\n    \"\"\"\n    This function attempts to read a file but does not handle specific exception",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 34,
        "coloffset": 0,
        "linematch": "def check_none(value):",
        "context": "        self.name = name\n        self.email = email\n        return\n\ndef check_none(value):\n    \"\"\"This function checks if a value is None.\n\n    Contains Pattern:\n        - none comparision (NONE)\n    \"\"\"",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 34,
        "coloffset": 0,
        "linematch": "def check_none(value):",
        "context": "        self.name = name\n        self.email = email\n        return\n\ndef check_none(value):\n    \"\"\"This function checks if a value is None.\n\n    Contains Pattern:\n        - none comparision (NONE)\n    \"\"\"",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 35,
        "coloffset": 4,
        "linematch": "\"\"\"This function checks if a value is None.",
        "context": "        self.email = email\n        return\n\ndef check_none(value):\n    \"\"\"This function checks if a value is None.\n\n    Contains Pattern:\n        - none comparision (NONE)\n    \"\"\"\n    if value != None:",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 40,
        "coloffset": 4,
        "linematch": "if value != None:",
        "context": "\n    Contains Pattern:\n        - none comparision (NONE)\n    \"\"\"\n    if value != None:\n        print(\"Value is not None\")\n\ndef handle_file(filename):\n    \"\"\"\n    This function attempts to read a file but does not handle specific exception",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #19",
        "line": 40,
        "description": [
          "    if value != None:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -37,7 +37,7 @@\n     Contains Pattern:\n         - none comparision (NONE)\n     \"\"\"\n-    if value != None:\n+    if value == None:\n         print(\"Value is not None\")\n \n def handle_file(filename):\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #20",
        "line": 41,
        "description": [
          "        print(\"Value is not None\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -38,7 +38,7 @@\n         - none comparision (NONE)\n     \"\"\"\n     if value != None:\n-        print(\"Value is not None\")\n+        print(\"XXValue is not NoneXX\")\n \n def handle_file(filename):\n     \"\"\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "is_valid",
    "function_scope": "56-66",
    "patterns": [
      {
        "lineno": 63,
        "coloffset": 4,
        "linematch": "if value is True:",
        "context": "\n    Contains Patterns:\n        - Boolean Comparison (BOOL)\n    \"\"\"\n    if value is True:\n        return \"true value\"\n    else:\n        return \"false value\"\n\ndef get_user_data():",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 63,
        "coloffset": 7,
        "linematch": "if value is True:",
        "context": "\n    Contains Patterns:\n        - Boolean Comparison (BOOL)\n    \"\"\"\n    if value is True:\n        return \"true value\"\n    else:\n        return \"false value\"\n\ndef get_user_data():",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 56,
        "coloffset": 0,
        "linematch": "def is_valid(value):",
        "context": "            data = f.read()\n    except:\n        print(\"Error reading file\")\n\ndef is_valid(value):\n    \"\"\"\n    This function checks if a value is true.\n\n    Contains Patterns:\n        - Boolean Comparison (BOOL)",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 56,
        "coloffset": 0,
        "linematch": "def is_valid(value):",
        "context": "            data = f.read()\n    except:\n        print(\"Error reading file\")\n\ndef is_valid(value):\n    \"\"\"\n    This function checks if a value is true.\n\n    Contains Patterns:\n        - Boolean Comparison (BOOL)",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 57,
        "coloffset": 4,
        "linematch": "\"\"\"",
        "context": "    except:\n        print(\"Error reading file\")\n\ndef is_valid(value):\n    \"\"\"\n    This function checks if a value is true.\n\n    Contains Patterns:\n        - Boolean Comparison (BOOL)\n    \"\"\"",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 63,
        "coloffset": 4,
        "linematch": "if value is True:",
        "context": "\n    Contains Patterns:\n        - Boolean Comparison (BOOL)\n    \"\"\"\n    if value is True:\n        return \"true value\"\n    else:\n        return \"false value\"\n\ndef get_user_data():",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #23",
        "line": 63,
        "description": [
          "    if value is True:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -60,7 +60,7 @@\n     Contains Patterns:\n         - Boolean Comparison (BOOL)\n     \"\"\"\n-    if value is True:\n+    if value is not True:\n         return \"true value\"\n     else:\n         return \"false value\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #24",
        "line": 63,
        "description": [
          "    if value is True:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -60,7 +60,7 @@\n     Contains Patterns:\n         - Boolean Comparison (BOOL)\n     \"\"\"\n-    if value is True:\n+    if value is False:\n         return \"true value\"\n     else:\n         return \"false value\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #25",
        "line": 64,
        "description": [
          "        return \"true value\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -61,7 +61,7 @@\n         - Boolean Comparison (BOOL)\n     \"\"\"\n     if value is True:\n-        return \"true value\"\n+        return \"XXtrue valueXX\"\n     else:\n         return \"false value\"\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #26",
        "line": 66,
        "description": [
          "        return \"false value\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -63,7 +63,7 @@\n     if value is True:\n         return \"true value\"\n     else:\n-        return \"false value\"\n+        return \"XXfalse valueXX\"\n \n def get_user_data():\n     \"\"\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "get_user_data",
    "function_scope": "68-81",
    "patterns": [
      {
        "lineno": 78,
        "coloffset": 4,
        "linematch": "if \"name\" in user_data.keys():",
        "context": "        - Single Nested If (SNI)\n        - Multi-value key literal (MVKL)\n    \"\"\"\n    user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}\n    if \"name\" in user_data.keys():\n        return user_data[\"name\"]\n    else:\n        return None\n\n# Multi-value key literal (MVKL)- outside function scope",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 68,
        "coloffset": 0,
        "linematch": "def get_user_data():",
        "context": "        return \"true value\"\n    else:\n        return \"false value\"\n\ndef get_user_data():\n    \"\"\"\n    This function retrieves a user's name from a dictionary using the keys() function\n\n    Contains Patterns:\n        - Key Function (KFUN)",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 78,
        "coloffset": 17,
        "linematch": "if \"name\" in user_data.keys():",
        "context": "        - Single Nested If (SNI)\n        - Multi-value key literal (MVKL)\n    \"\"\"\n    user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}\n    if \"name\" in user_data.keys():\n        return user_data[\"name\"]\n    else:\n        return None\n\n# Multi-value key literal (MVKL)- outside function scope",
        "pattern": ".//FunctionDef//Call/func/Attribute[@attr=\"keys\"]",
        "check_id": "KF001",
        "check_name": "key-function"
      },
      {
        "lineno": 68,
        "coloffset": 0,
        "linematch": "def get_user_data():",
        "context": "        return \"true value\"\n    else:\n        return \"false value\"\n\ndef get_user_data():\n    \"\"\"\n    This function retrieves a user's name from a dictionary using the keys() function\n\n    Contains Patterns:\n        - Key Function (KFUN)",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 69,
        "coloffset": 4,
        "linematch": "\"\"\"",
        "context": "    else:\n        return \"false value\"\n\ndef get_user_data():\n    \"\"\"\n    This function retrieves a user's name from a dictionary using the keys() function\n\n    Contains Patterns:\n        - Key Function (KFUN)\n        - Single Nested If (SNI)",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 77,
        "coloffset": 4,
        "linematch": "user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}",
        "context": "        - Key Function (KFUN)\n        - Single Nested If (SNI)\n        - Multi-value key literal (MVKL)\n    \"\"\"\n    user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}\n    if \"name\" in user_data.keys():\n        return user_data[\"name\"]\n    else:\n        return None\n",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 78,
        "coloffset": 4,
        "linematch": "if \"name\" in user_data.keys():",
        "context": "        - Single Nested If (SNI)\n        - Multi-value key literal (MVKL)\n    \"\"\"\n    user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}\n    if \"name\" in user_data.keys():\n        return user_data[\"name\"]\n    else:\n        return None\n\n# Multi-value key literal (MVKL)- outside function scope",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #27",
        "line": 77,
        "description": [
          "    user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -74,7 +74,7 @@\n         - Single Nested If (SNI)\n         - Multi-value key literal (MVKL)\n     \"\"\"\n-    user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}\n+    user_data = {\"XXnameXX\": \"Alice\", \"name\":\"Bob\"}\n     if \"name\" in user_data.keys():\n         return user_data[\"name\"]\n     else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #28",
        "line": 77,
        "description": [
          "    user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -74,7 +74,7 @@\n         - Single Nested If (SNI)\n         - Multi-value key literal (MVKL)\n     \"\"\"\n-    user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}\n+    user_data = {\"name\": \"XXAliceXX\", \"name\":\"Bob\"}\n     if \"name\" in user_data.keys():\n         return user_data[\"name\"]\n     else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #29",
        "line": 77,
        "description": [
          "    user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -74,7 +74,7 @@\n         - Single Nested If (SNI)\n         - Multi-value key literal (MVKL)\n     \"\"\"\n-    user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}\n+    user_data = {\"name\": \"Alice\", \"XXnameXX\":\"Bob\"}\n     if \"name\" in user_data.keys():\n         return user_data[\"name\"]\n     else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #30",
        "line": 77,
        "description": [
          "    user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -74,7 +74,7 @@\n         - Single Nested If (SNI)\n         - Multi-value key literal (MVKL)\n     \"\"\"\n-    user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}\n+    user_data = {\"name\": \"Alice\", \"name\":\"XXBobXX\"}\n     if \"name\" in user_data.keys():\n         return user_data[\"name\"]\n     else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #31",
        "line": 77,
        "description": [
          "    user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -74,7 +74,7 @@\n         - Single Nested If (SNI)\n         - Multi-value key literal (MVKL)\n     \"\"\"\n-    user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}\n+    user_data = None\n     if \"name\" in user_data.keys():\n         return user_data[\"name\"]\n     else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #32",
        "line": 78,
        "description": [
          "    if \"name\" in user_data.keys():"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -75,7 +75,7 @@\n         - Multi-value key literal (MVKL)\n     \"\"\"\n     user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}\n-    if \"name\" in user_data.keys():\n+    if \"XXnameXX\" in user_data.keys():\n         return user_data[\"name\"]\n     else:\n         return None\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #33",
        "line": 78,
        "description": [
          "    if \"name\" in user_data.keys():"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -75,7 +75,7 @@\n         - Multi-value key literal (MVKL)\n     \"\"\"\n     user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}\n-    if \"name\" in user_data.keys():\n+    if \"name\" not in user_data.keys():\n         return user_data[\"name\"]\n     else:\n         return None\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #34",
        "line": 79,
        "description": [
          "        return user_data[\"name\"]"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -76,7 +76,7 @@\n     \"\"\"\n     user_data = {\"name\": \"Alice\", \"name\":\"Bob\"}\n     if \"name\" in user_data.keys():\n-        return user_data[\"name\"]\n+        return user_data[\"XXnameXX\"]\n     else:\n         return None\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "handle_request",
    "function_scope": "122-132",
    "patterns": [
      {
        "lineno": 124,
        "coloffset": 4,
        "linematch": "if method == \"GET\":",
        "context": "    nested_function_2()\n\ndef handle_request(method, data):\n    \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n    if method == \"GET\":\n        return \"Processing GET request\"\n    elif method == \"POST\":\n        if data is not None:\n            return \"Processing POST request with data\"\n        else:",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 126,
        "coloffset": 4,
        "linematch": "elif method == \"POST\":",
        "context": "def handle_request(method, data):\n    \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n    if method == \"GET\":\n        return \"Processing GET request\"\n    elif method == \"POST\":\n        if data is not None:\n            return \"Processing POST request with data\"\n        else:\n            return \"Processing POST request without data\"\n    else:",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 127,
        "coloffset": 8,
        "linematch": "if data is not None:",
        "context": "    \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n    if method == \"GET\":\n        return \"Processing GET request\"\n    elif method == \"POST\":\n        if data is not None:\n            return \"Processing POST request with data\"\n        else:\n            return \"Processing POST request without data\"\n    else:\n        return \"Unsupported method\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 127,
        "coloffset": 8,
        "linematch": "if data is not None:",
        "context": "    \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n    if method == \"GET\":\n        return \"Processing GET request\"\n    elif method == \"POST\":\n        if data is not None:\n            return \"Processing POST request with data\"\n        else:\n            return \"Processing POST request without data\"\n    else:\n        return \"Unsupported method\"",
        "pattern": ".//FunctionDef/body//If[ancestor::If and not(parent::orelse)]",
        "check_id": "CL002",
        "check_name": "double-nested-if"
      },
      {
        "lineno": 122,
        "coloffset": 0,
        "linematch": "def handle_request(method, data):",
        "context": "        def nested_function_3():\n            pass\n    nested_function_2()\n\ndef handle_request(method, data):\n    \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n    if method == \"GET\":\n        return \"Processing GET request\"\n    elif method == \"POST\":\n        if data is not None:",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 126,
        "coloffset": 4,
        "linematch": "elif method == \"POST\":",
        "context": "def handle_request(method, data):\n    \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n    if method == \"GET\":\n        return \"Processing GET request\"\n    elif method == \"POST\":\n        if data is not None:\n            return \"Processing POST request with data\"\n        else:\n            return \"Processing POST request without data\"\n    else:",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 127,
        "coloffset": 8,
        "linematch": "if data is not None:",
        "context": "    \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n    if method == \"GET\":\n        return \"Processing GET request\"\n    elif method == \"POST\":\n        if data is not None:\n            return \"Processing POST request with data\"\n        else:\n            return \"Processing POST request without data\"\n    else:\n        return \"Unsupported method\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 122,
        "coloffset": 0,
        "linematch": "def handle_request(method, data):",
        "context": "        def nested_function_3():\n            pass\n    nested_function_2()\n\ndef handle_request(method, data):\n    \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n    if method == \"GET\":\n        return \"Processing GET request\"\n    elif method == \"POST\":\n        if data is not None:",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 123,
        "coloffset": 4,
        "linematch": "\"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"",
        "context": "            pass\n    nested_function_2()\n\ndef handle_request(method, data):\n    \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n    if method == \"GET\":\n        return \"Processing GET request\"\n    elif method == \"POST\":\n        if data is not None:\n            return \"Processing POST request with data\"",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 124,
        "coloffset": 4,
        "linematch": "if method == \"GET\":",
        "context": "    nested_function_2()\n\ndef handle_request(method, data):\n    \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n    if method == \"GET\":\n        return \"Processing GET request\"\n    elif method == \"POST\":\n        if data is not None:\n            return \"Processing POST request with data\"\n        else:",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 122,
        "coloffset": 0,
        "linematch": "def handle_request(method, data):",
        "context": "        def nested_function_3():\n            pass\n    nested_function_2()\n\ndef handle_request(method, data):\n    \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n    if method == \"GET\":\n        return \"Processing GET request\"\n    elif method == \"POST\":\n        if data is not None:",
        "pattern": ".//FunctionDef[count(body//Return) > 2]",
        "check_id": "MRET001",
        "check_name": "multiple-returns-in-function"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #47",
        "line": 124,
        "description": [
          "    if method == \"GET\":"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -121,7 +121,7 @@\n \n def handle_request(method, data):\n     \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n-    if method == \"GET\":\n+    if method != \"GET\":\n         return \"Processing GET request\"\n     elif method == \"POST\":\n         if data is not None:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #48",
        "line": 124,
        "description": [
          "    if method == \"GET\":"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -121,7 +121,7 @@\n \n def handle_request(method, data):\n     \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n-    if method == \"GET\":\n+    if method == \"XXGETXX\":\n         return \"Processing GET request\"\n     elif method == \"POST\":\n         if data is not None:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #49",
        "line": 125,
        "description": [
          "        return \"Processing GET request\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -122,7 +122,7 @@\n def handle_request(method, data):\n     \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n     if method == \"GET\":\n-        return \"Processing GET request\"\n+        return \"XXProcessing GET requestXX\"\n     elif method == \"POST\":\n         if data is not None:\n             return \"Processing POST request with data\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #50",
        "line": 126,
        "description": [
          "    elif method == \"POST\":"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -123,7 +123,7 @@\n     \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n     if method == \"GET\":\n         return \"Processing GET request\"\n-    elif method == \"POST\":\n+    elif method != \"POST\":\n         if data is not None:\n             return \"Processing POST request with data\"\n         else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #51",
        "line": 126,
        "description": [
          "    elif method == \"POST\":"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -123,7 +123,7 @@\n     \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n     if method == \"GET\":\n         return \"Processing GET request\"\n-    elif method == \"POST\":\n+    elif method == \"XXPOSTXX\":\n         if data is not None:\n             return \"Processing POST request with data\"\n         else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #52",
        "line": 127,
        "description": [
          "        if data is not None:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -124,7 +124,7 @@\n     if method == \"GET\":\n         return \"Processing GET request\"\n     elif method == \"POST\":\n-        if data is not None:\n+        if data is  None:\n             return \"Processing POST request with data\"\n         else:\n             return \"Processing POST request without data\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #53",
        "line": 128,
        "description": [
          "            return \"Processing POST request with data\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -125,7 +125,7 @@\n         return \"Processing GET request\"\n     elif method == \"POST\":\n         if data is not None:\n-            return \"Processing POST request with data\"\n+            return \"XXProcessing POST request with dataXX\"\n         else:\n             return \"Processing POST request without data\"\n     else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #54",
        "line": 130,
        "description": [
          "            return \"Processing POST request without data\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -127,7 +127,7 @@\n         if data is not None:\n             return \"Processing POST request with data\"\n         else:\n-            return \"Processing POST request without data\"\n+            return \"XXProcessing POST request without dataXX\"\n     else:\n         return \"Unsupported method\"\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #55",
        "line": 132,
        "description": [
          "        return \"Unsupported method\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -129,7 +129,7 @@\n         else:\n             return \"Processing POST request without data\"\n     else:\n-        return \"Unsupported method\"\n+        return \"XXUnsupported methodXX\"\n \n def filter_data(data, condition):\n     \"\"\"Function with nested condition-loop if{for{}} (IFOR) and (VFF) for{if{}}\"\"\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "filter_data",
    "function_scope": "134-141",
    "patterns": [
      {
        "lineno": 137,
        "coloffset": 4,
        "linematch": "if condition:",
        "context": "\ndef filter_data(data, condition):\n    \"\"\"Function with nested condition-loop if{for{}} (IFOR) and (VFF) for{if{}}\"\"\"\n    filtered_data = []\n    if condition:\n        for item in data:\n            if item is not None:\n                filtered_data.append(item)\n    return filtered_data\n",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 139,
        "coloffset": 12,
        "linematch": "if item is not None:",
        "context": "    \"\"\"Function with nested condition-loop if{for{}} (IFOR) and (VFF) for{if{}}\"\"\"\n    filtered_data = []\n    if condition:\n        for item in data:\n            if item is not None:\n                filtered_data.append(item)\n    return filtered_data\n\ndef classify_number(number):\n    \"\"\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 139,
        "coloffset": 12,
        "linematch": "if item is not None:",
        "context": "    \"\"\"Function with nested condition-loop if{for{}} (IFOR) and (VFF) for{if{}}\"\"\"\n    filtered_data = []\n    if condition:\n        for item in data:\n            if item is not None:\n                filtered_data.append(item)\n    return filtered_data\n\ndef classify_number(number):\n    \"\"\"",
        "pattern": ".//FunctionDef/body//If[ancestor::If and not(parent::orelse)]",
        "check_id": "CL002",
        "check_name": "double-nested-if"
      },
      {
        "lineno": 134,
        "coloffset": 0,
        "linematch": "def filter_data(data, condition):",
        "context": "            return \"Processing POST request without data\"\n    else:\n        return \"Unsupported method\"\n\ndef filter_data(data, condition):\n    \"\"\"Function with nested condition-loop if{for{}} (IFOR) and (VFF) for{if{}}\"\"\"\n    filtered_data = []\n    if condition:\n        for item in data:\n            if item is not None:",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 139,
        "coloffset": 12,
        "linematch": "if item is not None:",
        "context": "    \"\"\"Function with nested condition-loop if{for{}} (IFOR) and (VFF) for{if{}}\"\"\"\n    filtered_data = []\n    if condition:\n        for item in data:\n            if item is not None:\n                filtered_data.append(item)\n    return filtered_data\n\ndef classify_number(number):\n    \"\"\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 134,
        "coloffset": 0,
        "linematch": "def filter_data(data, condition):",
        "context": "            return \"Processing POST request without data\"\n    else:\n        return \"Unsupported method\"\n\ndef filter_data(data, condition):\n    \"\"\"Function with nested condition-loop if{for{}} (IFOR) and (VFF) for{if{}}\"\"\"\n    filtered_data = []\n    if condition:\n        for item in data:\n            if item is not None:",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 135,
        "coloffset": 4,
        "linematch": "\"\"\"Function with nested condition-loop if{for{}} (IFOR) and (VFF) for{if{}}\"\"\"",
        "context": "    else:\n        return \"Unsupported method\"\n\ndef filter_data(data, condition):\n    \"\"\"Function with nested condition-loop if{for{}} (IFOR) and (VFF) for{if{}}\"\"\"\n    filtered_data = []\n    if condition:\n        for item in data:\n            if item is not None:\n                filtered_data.append(item)",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 136,
        "coloffset": 4,
        "linematch": "filtered_data = []",
        "context": "        return \"Unsupported method\"\n\ndef filter_data(data, condition):\n    \"\"\"Function with nested condition-loop if{for{}} (IFOR) and (VFF) for{if{}}\"\"\"\n    filtered_data = []\n    if condition:\n        for item in data:\n            if item is not None:\n                filtered_data.append(item)\n    return filtered_data",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 137,
        "coloffset": 4,
        "linematch": "if condition:",
        "context": "\ndef filter_data(data, condition):\n    \"\"\"Function with nested condition-loop if{for{}} (IFOR) and (VFF) for{if{}}\"\"\"\n    filtered_data = []\n    if condition:\n        for item in data:\n            if item is not None:\n                filtered_data.append(item)\n    return filtered_data\n",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 141,
        "coloffset": 4,
        "linematch": "return filtered_data",
        "context": "    if condition:\n        for item in data:\n            if item is not None:\n                filtered_data.append(item)\n    return filtered_data\n\ndef classify_number(number):\n    \"\"\"\n    This function classifies a number as positive, negative, or zero.\n",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #56",
        "line": 136,
        "description": [
          "    filtered_data = []"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -133,7 +133,7 @@\n \n def filter_data(data, condition):\n     \"\"\"Function with nested condition-loop if{for{}} (IFOR) and (VFF) for{if{}}\"\"\"\n-    filtered_data = []\n+    filtered_data = None\n     if condition:\n         for item in data:\n             if item is not None:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #57",
        "line": 139,
        "description": [
          "            if item is not None:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -136,7 +136,7 @@\n     filtered_data = []\n     if condition:\n         for item in data:\n-            if item is not None:\n+            if item is  None:\n                 filtered_data.append(item)\n     return filtered_data\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "classify_number",
    "function_scope": "143-159",
    "patterns": [
      {
        "lineno": 150,
        "coloffset": 4,
        "linematch": "if number > 0:",
        "context": "\n    Contains Patterns:\n    - Nested condition (IFIF)\n    \"\"\"\n    if number > 0:\n        if number > 100:\n            return \"Large positive number\"\n        else:\n            return \"Positive number\"\n    else:",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 151,
        "coloffset": 8,
        "linematch": "if number > 100:",
        "context": "    Contains Patterns:\n    - Nested condition (IFIF)\n    \"\"\"\n    if number > 0:\n        if number > 100:\n            return \"Large positive number\"\n        else:\n            return \"Positive number\"\n    else:\n        if number < 0:",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 156,
        "coloffset": 8,
        "linematch": "if number < 0:",
        "context": "            return \"Large positive number\"\n        else:\n            return \"Positive number\"\n    else:\n        if number < 0:\n            return \"Negative number\"\n        else:\n            return \"Zero\"\n\ndef calculate_factorial(n, start=1):",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 151,
        "coloffset": 8,
        "linematch": "if number > 100:",
        "context": "    Contains Patterns:\n    - Nested condition (IFIF)\n    \"\"\"\n    if number > 0:\n        if number > 100:\n            return \"Large positive number\"\n        else:\n            return \"Positive number\"\n    else:\n        if number < 0:",
        "pattern": ".//FunctionDef/body//If[ancestor::If and not(parent::orelse)]",
        "check_id": "CL002",
        "check_name": "double-nested-if"
      },
      {
        "lineno": 143,
        "coloffset": 0,
        "linematch": "def classify_number(number):",
        "context": "            if item is not None:\n                filtered_data.append(item)\n    return filtered_data\n\ndef classify_number(number):\n    \"\"\"\n    This function classifies a number as positive, negative, or zero.\n\n    Contains Patterns:\n    - Nested condition (IFIF)",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 151,
        "coloffset": 8,
        "linematch": "if number > 100:",
        "context": "    Contains Patterns:\n    - Nested condition (IFIF)\n    \"\"\"\n    if number > 0:\n        if number > 100:\n            return \"Large positive number\"\n        else:\n            return \"Positive number\"\n    else:\n        if number < 0:",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 156,
        "coloffset": 8,
        "linematch": "if number < 0:",
        "context": "            return \"Large positive number\"\n        else:\n            return \"Positive number\"\n    else:\n        if number < 0:\n            return \"Negative number\"\n        else:\n            return \"Zero\"\n\ndef calculate_factorial(n, start=1):",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 143,
        "coloffset": 0,
        "linematch": "def classify_number(number):",
        "context": "            if item is not None:\n                filtered_data.append(item)\n    return filtered_data\n\ndef classify_number(number):\n    \"\"\"\n    This function classifies a number as positive, negative, or zero.\n\n    Contains Patterns:\n    - Nested condition (IFIF)",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 144,
        "coloffset": 4,
        "linematch": "\"\"\"",
        "context": "                filtered_data.append(item)\n    return filtered_data\n\ndef classify_number(number):\n    \"\"\"\n    This function classifies a number as positive, negative, or zero.\n\n    Contains Patterns:\n    - Nested condition (IFIF)\n    \"\"\"",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 150,
        "coloffset": 4,
        "linematch": "if number > 0:",
        "context": "\n    Contains Patterns:\n    - Nested condition (IFIF)\n    \"\"\"\n    if number > 0:\n        if number > 100:\n            return \"Large positive number\"\n        else:\n            return \"Positive number\"\n    else:",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 143,
        "coloffset": 0,
        "linematch": "def classify_number(number):",
        "context": "            if item is not None:\n                filtered_data.append(item)\n    return filtered_data\n\ndef classify_number(number):\n    \"\"\"\n    This function classifies a number as positive, negative, or zero.\n\n    Contains Patterns:\n    - Nested condition (IFIF)",
        "pattern": ".//FunctionDef[count(body//Return) > 2]",
        "check_id": "MRET001",
        "check_name": "multiple-returns-in-function"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #58",
        "line": 150,
        "description": [
          "    if number > 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -147,7 +147,7 @@\n     Contains Patterns:\n     - Nested condition (IFIF)\n     \"\"\"\n-    if number > 0:\n+    if number >= 0:\n         if number > 100:\n             return \"Large positive number\"\n         else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #59",
        "line": 150,
        "description": [
          "    if number > 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -147,7 +147,7 @@\n     Contains Patterns:\n     - Nested condition (IFIF)\n     \"\"\"\n-    if number > 0:\n+    if number > 1:\n         if number > 100:\n             return \"Large positive number\"\n         else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #60",
        "line": 151,
        "description": [
          "        if number > 100:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -148,7 +148,7 @@\n     - Nested condition (IFIF)\n     \"\"\"\n     if number > 0:\n-        if number > 100:\n+        if number >= 100:\n             return \"Large positive number\"\n         else:\n             return \"Positive number\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #61",
        "line": 151,
        "description": [
          "        if number > 100:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -148,7 +148,7 @@\n     - Nested condition (IFIF)\n     \"\"\"\n     if number > 0:\n-        if number > 100:\n+        if number > 101:\n             return \"Large positive number\"\n         else:\n             return \"Positive number\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #62",
        "line": 152,
        "description": [
          "            return \"Large positive number\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -149,7 +149,7 @@\n     \"\"\"\n     if number > 0:\n         if number > 100:\n-            return \"Large positive number\"\n+            return \"XXLarge positive numberXX\"\n         else:\n             return \"Positive number\"\n     else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #63",
        "line": 154,
        "description": [
          "            return \"Positive number\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -151,7 +151,7 @@\n         if number > 100:\n             return \"Large positive number\"\n         else:\n-            return \"Positive number\"\n+            return \"XXPositive numberXX\"\n     else:\n         if number < 0:\n             return \"Negative number\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #64",
        "line": 156,
        "description": [
          "        if number < 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -153,7 +153,7 @@\n         else:\n             return \"Positive number\"\n     else:\n-        if number < 0:\n+        if number <= 0:\n             return \"Negative number\"\n         else:\n             return \"Zero\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #65",
        "line": 156,
        "description": [
          "        if number < 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -153,7 +153,7 @@\n         else:\n             return \"Positive number\"\n     else:\n-        if number < 0:\n+        if number < 1:\n             return \"Negative number\"\n         else:\n             return \"Zero\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #66",
        "line": 157,
        "description": [
          "            return \"Negative number\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -154,7 +154,7 @@\n             return \"Positive number\"\n     else:\n         if number < 0:\n-            return \"Negative number\"\n+            return \"XXNegative numberXX\"\n         else:\n             return \"Zero\"\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #67",
        "line": 159,
        "description": [
          "            return \"Zero\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -156,7 +156,7 @@\n         if number < 0:\n             return \"Negative number\"\n         else:\n-            return \"Zero\"\n+            return \"XXZeroXX\"\n \n def calculate_factorial(n, start=1):\n     \"\"\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "calculate_factorial",
    "function_scope": "161-173",
    "patterns": [
      {
        "lineno": 167,
        "coloffset": 4,
        "linematch": "if n < 0:",
        "context": "    This function calculates the factorial of a number n, optionally starting from a specific value.\n\n    Contains Pattern: Nested Loop-Conditions (FF) for{for{}}\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"Factorial is not defined for negative numbers\")\n    factorial = 1\n    for i in range(start, n + 1):\n        for j in range(2, i + 1):  # Nested loop\n            factorial *= j",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 161,
        "coloffset": 0,
        "linematch": "def calculate_factorial(n, start=1):",
        "context": "            return \"Negative number\"\n        else:\n            return \"Zero\"\n\ndef calculate_factorial(n, start=1):\n    \"\"\"\n    This function calculates the factorial of a number n, optionally starting from a specific value.\n\n    Contains Pattern: Nested Loop-Conditions (FF) for{for{}}\n    \"\"\"",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 161,
        "coloffset": 0,
        "linematch": "def calculate_factorial(n, start=1):",
        "context": "            return \"Negative number\"\n        else:\n            return \"Zero\"\n\ndef calculate_factorial(n, start=1):\n    \"\"\"\n    This function calculates the factorial of a number n, optionally starting from a specific value.\n\n    Contains Pattern: Nested Loop-Conditions (FF) for{for{}}\n    \"\"\"",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 170,
        "coloffset": 4,
        "linematch": "for i in range(start, n + 1):",
        "context": "    \"\"\"\n    if n < 0:\n        raise ValueError(\"Factorial is not defined for negative numbers\")\n    factorial = 1\n    for i in range(start, n + 1):\n        for j in range(2, i + 1):  # Nested loop\n            factorial *= j\n    return factorial\n\ndef validate_user_input(name, email):",
        "pattern": ".//FunctionDef//For[.//For]",
        "check_id": "F001",
        "check_name": "nested-loop-conditions-ff"
      },
      {
        "lineno": 162,
        "coloffset": 4,
        "linematch": "\"\"\"",
        "context": "        else:\n            return \"Zero\"\n\ndef calculate_factorial(n, start=1):\n    \"\"\"\n    This function calculates the factorial of a number n, optionally starting from a specific value.\n\n    Contains Pattern: Nested Loop-Conditions (FF) for{for{}}\n    \"\"\"\n    if n < 0:",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 167,
        "coloffset": 4,
        "linematch": "if n < 0:",
        "context": "    This function calculates the factorial of a number n, optionally starting from a specific value.\n\n    Contains Pattern: Nested Loop-Conditions (FF) for{for{}}\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"Factorial is not defined for negative numbers\")\n    factorial = 1\n    for i in range(start, n + 1):\n        for j in range(2, i + 1):  # Nested loop\n            factorial *= j",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 169,
        "coloffset": 4,
        "linematch": "factorial = 1",
        "context": "    Contains Pattern: Nested Loop-Conditions (FF) for{for{}}\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"Factorial is not defined for negative numbers\")\n    factorial = 1\n    for i in range(start, n + 1):\n        for j in range(2, i + 1):  # Nested loop\n            factorial *= j\n    return factorial\n",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 170,
        "coloffset": 4,
        "linematch": "for i in range(start, n + 1):",
        "context": "    \"\"\"\n    if n < 0:\n        raise ValueError(\"Factorial is not defined for negative numbers\")\n    factorial = 1\n    for i in range(start, n + 1):\n        for j in range(2, i + 1):  # Nested loop\n            factorial *= j\n    return factorial\n\ndef validate_user_input(name, email):",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 173,
        "coloffset": 4,
        "linematch": "return factorial",
        "context": "    factorial = 1\n    for i in range(start, n + 1):\n        for j in range(2, i + 1):  # Nested loop\n            factorial *= j\n    return factorial\n\ndef validate_user_input(name, email):\n    \"\"\"\n    This function validates user input for name and email. (Simple example)\n",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #68",
        "line": 161,
        "description": [
          "def calculate_factorial(n, start=1):"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -158,7 +158,7 @@\n         else:\n             return \"Zero\"\n \n-def calculate_factorial(n, start=1):\n+def calculate_factorial(n, start=2):\n     \"\"\"\n     This function calculates the factorial of a number n, optionally starting from a specific value.\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #69",
        "line": 167,
        "description": [
          "    if n < 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -164,7 +164,7 @@\n \n     Contains Pattern: Nested Loop-Conditions (FF) for{for{}}\n     \"\"\"\n-    if n < 0:\n+    if n <= 0:\n         raise ValueError(\"Factorial is not defined for negative numbers\")\n     factorial = 1\n     for i in range(start, n + 1):\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #70",
        "line": 167,
        "description": [
          "    if n < 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -164,7 +164,7 @@\n \n     Contains Pattern: Nested Loop-Conditions (FF) for{for{}}\n     \"\"\"\n-    if n < 0:\n+    if n < 1:\n         raise ValueError(\"Factorial is not defined for negative numbers\")\n     factorial = 1\n     for i in range(start, n + 1):\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #71",
        "line": 168,
        "description": [
          "        raise ValueError(\"Factorial is not defined for negative numbers\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -165,7 +165,7 @@\n     Contains Pattern: Nested Loop-Conditions (FF) for{for{}}\n     \"\"\"\n     if n < 0:\n-        raise ValueError(\"Factorial is not defined for negative numbers\")\n+        raise ValueError(\"XXFactorial is not defined for negative numbersXX\")\n     factorial = 1\n     for i in range(start, n + 1):\n         for j in range(2, i + 1):  # Nested loop\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #72",
        "line": 169,
        "description": [
          "    factorial = 1"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -166,7 +166,7 @@\n     \"\"\"\n     if n < 0:\n         raise ValueError(\"Factorial is not defined for negative numbers\")\n-    factorial = 1\n+    factorial = 2\n     for i in range(start, n + 1):\n         for j in range(2, i + 1):  # Nested loop\n             factorial *= j\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #73",
        "line": 169,
        "description": [
          "    factorial = 1"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -166,7 +166,7 @@\n     \"\"\"\n     if n < 0:\n         raise ValueError(\"Factorial is not defined for negative numbers\")\n-    factorial = 1\n+    factorial = None\n     for i in range(start, n + 1):\n         for j in range(2, i + 1):  # Nested loop\n             factorial *= j\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #74",
        "line": 170,
        "description": [
          "    for i in range(start, n + 1):"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -167,7 +167,7 @@\n     if n < 0:\n         raise ValueError(\"Factorial is not defined for negative numbers\")\n     factorial = 1\n-    for i in range(start, n + 1):\n+    for i in range(start, n - 1):\n         for j in range(2, i + 1):  # Nested loop\n             factorial *= j\n     return factorial\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #75",
        "line": 170,
        "description": [
          "    for i in range(start, n + 1):"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -167,7 +167,7 @@\n     if n < 0:\n         raise ValueError(\"Factorial is not defined for negative numbers\")\n     factorial = 1\n-    for i in range(start, n + 1):\n+    for i in range(start, n + 2):\n         for j in range(2, i + 1):  # Nested loop\n             factorial *= j\n     return factorial\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #76",
        "line": 171,
        "description": [
          "        for j in range(2, i + 1):  # Nested loop"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -168,7 +168,7 @@\n         raise ValueError(\"Factorial is not defined for negative numbers\")\n     factorial = 1\n     for i in range(start, n + 1):\n-        for j in range(2, i + 1):  # Nested loop\n+        for j in range(3, i + 1):  # Nested loop\n             factorial *= j\n     return factorial\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #77",
        "line": 171,
        "description": [
          "        for j in range(2, i + 1):  # Nested loop"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -168,7 +168,7 @@\n         raise ValueError(\"Factorial is not defined for negative numbers\")\n     factorial = 1\n     for i in range(start, n + 1):\n-        for j in range(2, i + 1):  # Nested loop\n+        for j in range(2, i - 1):  # Nested loop\n             factorial *= j\n     return factorial\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #78",
        "line": 171,
        "description": [
          "        for j in range(2, i + 1):  # Nested loop"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -168,7 +168,7 @@\n         raise ValueError(\"Factorial is not defined for negative numbers\")\n     factorial = 1\n     for i in range(start, n + 1):\n-        for j in range(2, i + 1):  # Nested loop\n+        for j in range(2, i + 2):  # Nested loop\n             factorial *= j\n     return factorial\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #79",
        "line": 172,
        "description": [
          "            factorial *= j"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -169,7 +169,7 @@\n     factorial = 1\n     for i in range(start, n + 1):\n         for j in range(2, i + 1):  # Nested loop\n-            factorial *= j\n+            factorial = j\n     return factorial\n \n def validate_user_input(name, email):\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #80",
        "line": 172,
        "description": [
          "            factorial *= j"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -169,7 +169,7 @@\n     factorial = 1\n     for i in range(start, n + 1):\n         for j in range(2, i + 1):  # Nested loop\n-            factorial *= j\n+            factorial /= j\n     return factorial\n \n def validate_user_input(name, email):\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "calculate_grade",
    "function_scope": "195-209",
    "patterns": [
      {
        "lineno": 201,
        "coloffset": 4,
        "linematch": "if score >= 90:",
        "context": "    This function calculates a letter grade based on a score. (Simple example)\n\n    Contains Pattern: Multiple Returns in Function (MRET)\n    \"\"\"\n    if score >= 90:\n        return \"A\"\n    elif score >= 80:\n        return \"B\"\n    else:\n        if score >= 70:",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 203,
        "coloffset": 4,
        "linematch": "elif score >= 80:",
        "context": "    Contains Pattern: Multiple Returns in Function (MRET)\n    \"\"\"\n    if score >= 90:\n        return \"A\"\n    elif score >= 80:\n        return \"B\"\n    else:\n        if score >= 70:\n            return \"C\"\n        else:",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 206,
        "coloffset": 8,
        "linematch": "if score >= 70:",
        "context": "        return \"A\"\n    elif score >= 80:\n        return \"B\"\n    else:\n        if score >= 70:\n            return \"C\"\n        else:\n            return \"F\"\n\ndef calculate_discount(price, discount_rate, loyalty_points):",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 195,
        "coloffset": 0,
        "linematch": "def calculate_grade(score):",
        "context": "    f = open(filename, \"w\")\n    f.write(data)\n    f.close()\n\ndef calculate_grade(score):\n    \"\"\"\n    This function calculates a letter grade based on a score. (Simple example)\n\n    Contains Pattern: Multiple Returns in Function (MRET)\n    \"\"\"",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 203,
        "coloffset": 4,
        "linematch": "elif score >= 80:",
        "context": "    Contains Pattern: Multiple Returns in Function (MRET)\n    \"\"\"\n    if score >= 90:\n        return \"A\"\n    elif score >= 80:\n        return \"B\"\n    else:\n        if score >= 70:\n            return \"C\"\n        else:",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 206,
        "coloffset": 8,
        "linematch": "if score >= 70:",
        "context": "        return \"A\"\n    elif score >= 80:\n        return \"B\"\n    else:\n        if score >= 70:\n            return \"C\"\n        else:\n            return \"F\"\n\ndef calculate_discount(price, discount_rate, loyalty_points):",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 195,
        "coloffset": 0,
        "linematch": "def calculate_grade(score):",
        "context": "    f = open(filename, \"w\")\n    f.write(data)\n    f.close()\n\ndef calculate_grade(score):\n    \"\"\"\n    This function calculates a letter grade based on a score. (Simple example)\n\n    Contains Pattern: Multiple Returns in Function (MRET)\n    \"\"\"",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 196,
        "coloffset": 4,
        "linematch": "\"\"\"",
        "context": "    f.write(data)\n    f.close()\n\ndef calculate_grade(score):\n    \"\"\"\n    This function calculates a letter grade based on a score. (Simple example)\n\n    Contains Pattern: Multiple Returns in Function (MRET)\n    \"\"\"\n    if score >= 90:",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 201,
        "coloffset": 4,
        "linematch": "if score >= 90:",
        "context": "    This function calculates a letter grade based on a score. (Simple example)\n\n    Contains Pattern: Multiple Returns in Function (MRET)\n    \"\"\"\n    if score >= 90:\n        return \"A\"\n    elif score >= 80:\n        return \"B\"\n    else:\n        if score >= 70:",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 195,
        "coloffset": 0,
        "linematch": "def calculate_grade(score):",
        "context": "    f = open(filename, \"w\")\n    f.write(data)\n    f.close()\n\ndef calculate_grade(score):\n    \"\"\"\n    This function calculates a letter grade based on a score. (Simple example)\n\n    Contains Pattern: Multiple Returns in Function (MRET)\n    \"\"\"",
        "pattern": ".//FunctionDef[count(body//Return) > 2]",
        "check_id": "MRET001",
        "check_name": "multiple-returns-in-function"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #88",
        "line": 201,
        "description": [
          "    if score >= 90:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -198,7 +198,7 @@\n \n     Contains Pattern: Multiple Returns in Function (MRET)\n     \"\"\"\n-    if score >= 90:\n+    if score > 90:\n         return \"A\"\n     elif score >= 80:\n         return \"B\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #89",
        "line": 201,
        "description": [
          "    if score >= 90:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -198,7 +198,7 @@\n \n     Contains Pattern: Multiple Returns in Function (MRET)\n     \"\"\"\n-    if score >= 90:\n+    if score >= 91:\n         return \"A\"\n     elif score >= 80:\n         return \"B\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #90",
        "line": 202,
        "description": [
          "        return \"A\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -199,7 +199,7 @@\n     Contains Pattern: Multiple Returns in Function (MRET)\n     \"\"\"\n     if score >= 90:\n-        return \"A\"\n+        return \"XXAXX\"\n     elif score >= 80:\n         return \"B\"\n     else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #91",
        "line": 203,
        "description": [
          "    elif score >= 80:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -200,7 +200,7 @@\n     \"\"\"\n     if score >= 90:\n         return \"A\"\n-    elif score >= 80:\n+    elif score > 80:\n         return \"B\"\n     else:\n         if score >= 70:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #92",
        "line": 203,
        "description": [
          "    elif score >= 80:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -200,7 +200,7 @@\n     \"\"\"\n     if score >= 90:\n         return \"A\"\n-    elif score >= 80:\n+    elif score >= 81:\n         return \"B\"\n     else:\n         if score >= 70:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #93",
        "line": 204,
        "description": [
          "        return \"B\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -201,7 +201,7 @@\n     if score >= 90:\n         return \"A\"\n     elif score >= 80:\n-        return \"B\"\n+        return \"XXBXX\"\n     else:\n         if score >= 70:\n             return \"C\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #94",
        "line": 206,
        "description": [
          "        if score >= 70:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -203,7 +203,7 @@\n     elif score >= 80:\n         return \"B\"\n     else:\n-        if score >= 70:\n+        if score > 70:\n             return \"C\"\n         else:\n             return \"F\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #95",
        "line": 206,
        "description": [
          "        if score >= 70:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -203,7 +203,7 @@\n     elif score >= 80:\n         return \"B\"\n     else:\n-        if score >= 70:\n+        if score >= 71:\n             return \"C\"\n         else:\n             return \"F\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #96",
        "line": 207,
        "description": [
          "            return \"C\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -204,7 +204,7 @@\n         return \"B\"\n     else:\n         if score >= 70:\n-            return \"C\"\n+            return \"XXCXX\"\n         else:\n             return \"F\"\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #97",
        "line": 209,
        "description": [
          "            return \"F\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -206,7 +206,7 @@\n         if score >= 70:\n             return \"C\"\n         else:\n-            return \"F\"\n+            return \"XXFXX\"\n \n def calculate_discount(price, discount_rate, loyalty_points):\n     \"\"\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "calculate_discount",
    "function_scope": "211-221",
    "patterns": [
      {
        "lineno": 218,
        "coloffset": 4,
        "linematch": "if loyalty_points > 100:",
        "context": "\n    Contains Pattern: Complex Expressions (COMPLEX)\n    \"\"\"\n    discount = price * discount_rate\n    if loyalty_points > 100:\n        discount += price * 0.05\n    final_price = price - discount - (discount * 0.1)\n    return final_price\n\n# JSS paper",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 211,
        "coloffset": 0,
        "linematch": "def calculate_discount(price, discount_rate, loyalty_points):",
        "context": "            return \"C\"\n        else:\n            return \"F\"\n\ndef calculate_discount(price, discount_rate, loyalty_points):\n    \"\"\"\n    This function calculates a discounted price with complex logic.\n\n    Contains Pattern: Complex Expressions (COMPLEX)\n    \"\"\"",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 211,
        "coloffset": 0,
        "linematch": "def calculate_discount(price, discount_rate, loyalty_points):",
        "context": "            return \"C\"\n        else:\n            return \"F\"\n\ndef calculate_discount(price, discount_rate, loyalty_points):\n    \"\"\"\n    This function calculates a discounted price with complex logic.\n\n    Contains Pattern: Complex Expressions (COMPLEX)\n    \"\"\"",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 212,
        "coloffset": 4,
        "linematch": "\"\"\"",
        "context": "        else:\n            return \"F\"\n\ndef calculate_discount(price, discount_rate, loyalty_points):\n    \"\"\"\n    This function calculates a discounted price with complex logic.\n\n    Contains Pattern: Complex Expressions (COMPLEX)\n    \"\"\"\n    discount = price * discount_rate",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 217,
        "coloffset": 4,
        "linematch": "discount = price * discount_rate",
        "context": "    This function calculates a discounted price with complex logic.\n\n    Contains Pattern: Complex Expressions (COMPLEX)\n    \"\"\"\n    discount = price * discount_rate\n    if loyalty_points > 100:\n        discount += price * 0.05\n    final_price = price - discount - (discount * 0.1)\n    return final_price\n",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 218,
        "coloffset": 4,
        "linematch": "if loyalty_points > 100:",
        "context": "\n    Contains Pattern: Complex Expressions (COMPLEX)\n    \"\"\"\n    discount = price * discount_rate\n    if loyalty_points > 100:\n        discount += price * 0.05\n    final_price = price - discount - (discount * 0.1)\n    return final_price\n\n# JSS paper",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 220,
        "coloffset": 4,
        "linematch": "final_price = price - discount - (discount * 0.1)",
        "context": "    \"\"\"\n    discount = price * discount_rate\n    if loyalty_points > 100:\n        discount += price * 0.05\n    final_price = price - discount - (discount * 0.1)\n    return final_price\n\n# JSS paper\n\ndef overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 221,
        "coloffset": 4,
        "linematch": "return final_price",
        "context": "    discount = price * discount_rate\n    if loyalty_points > 100:\n        discount += price * 0.05\n    final_price = price - discount - (discount * 0.1)\n    return final_price\n\n# JSS paper\n\ndef overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):\n    \"\"\"",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #98",
        "line": 217,
        "description": [
          "    discount = price * discount_rate"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -214,7 +214,7 @@\n \n     Contains Pattern: Complex Expressions (COMPLEX)\n     \"\"\"\n-    discount = price * discount_rate\n+    discount = price / discount_rate\n     if loyalty_points > 100:\n         discount += price * 0.05\n     final_price = price - discount - (discount * 0.1)\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #99",
        "line": 217,
        "description": [
          "    discount = price * discount_rate"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -214,7 +214,7 @@\n \n     Contains Pattern: Complex Expressions (COMPLEX)\n     \"\"\"\n-    discount = price * discount_rate\n+    discount = None\n     if loyalty_points > 100:\n         discount += price * 0.05\n     final_price = price - discount - (discount * 0.1)\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #100",
        "line": 218,
        "description": [
          "    if loyalty_points > 100:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -215,7 +215,7 @@\n     Contains Pattern: Complex Expressions (COMPLEX)\n     \"\"\"\n     discount = price * discount_rate\n-    if loyalty_points > 100:\n+    if loyalty_points >= 100:\n         discount += price * 0.05\n     final_price = price - discount - (discount * 0.1)\n     return final_price\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #101",
        "line": 218,
        "description": [
          "    if loyalty_points > 100:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -215,7 +215,7 @@\n     Contains Pattern: Complex Expressions (COMPLEX)\n     \"\"\"\n     discount = price * discount_rate\n-    if loyalty_points > 100:\n+    if loyalty_points > 101:\n         discount += price * 0.05\n     final_price = price - discount - (discount * 0.1)\n     return final_price\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #102",
        "line": 219,
        "description": [
          "        discount += price * 0.05"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -216,7 +216,7 @@\n     \"\"\"\n     discount = price * discount_rate\n     if loyalty_points > 100:\n-        discount += price * 0.05\n+        discount = price * 0.05\n     final_price = price - discount - (discount * 0.1)\n     return final_price\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #103",
        "line": 219,
        "description": [
          "        discount += price * 0.05"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -216,7 +216,7 @@\n     \"\"\"\n     discount = price * discount_rate\n     if loyalty_points > 100:\n-        discount += price * 0.05\n+        discount -= price * 0.05\n     final_price = price - discount - (discount * 0.1)\n     return final_price\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #104",
        "line": 219,
        "description": [
          "        discount += price * 0.05"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -216,7 +216,7 @@\n     \"\"\"\n     discount = price * discount_rate\n     if loyalty_points > 100:\n-        discount += price * 0.05\n+        discount += price / 0.05\n     final_price = price - discount - (discount * 0.1)\n     return final_price\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #105",
        "line": 219,
        "description": [
          "        discount += price * 0.05"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -216,7 +216,7 @@\n     \"\"\"\n     discount = price * discount_rate\n     if loyalty_points > 100:\n-        discount += price * 0.05\n+        discount += price * 1.05\n     final_price = price - discount - (discount * 0.1)\n     return final_price\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #106",
        "line": 220,
        "description": [
          "    final_price = price - discount - (discount * 0.1)"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -217,7 +217,7 @@\n     discount = price * discount_rate\n     if loyalty_points > 100:\n         discount += price * 0.05\n-    final_price = price - discount - (discount * 0.1)\n+    final_price = price + discount - (discount * 0.1)\n     return final_price\n \n # JSS paper\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #107",
        "line": 220,
        "description": [
          "    final_price = price - discount - (discount * 0.1)"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -217,7 +217,7 @@\n     discount = price * discount_rate\n     if loyalty_points > 100:\n         discount += price * 0.05\n-    final_price = price - discount - (discount * 0.1)\n+    final_price = price - discount + (discount * 0.1)\n     return final_price\n \n # JSS paper\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #108",
        "line": 220,
        "description": [
          "    final_price = price - discount - (discount * 0.1)"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -217,7 +217,7 @@\n     discount = price * discount_rate\n     if loyalty_points > 100:\n         discount += price * 0.05\n-    final_price = price - discount - (discount * 0.1)\n+    final_price = price - discount - (discount / 0.1)\n     return final_price\n \n # JSS paper\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #109",
        "line": 220,
        "description": [
          "    final_price = price - discount - (discount * 0.1)"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -217,7 +217,7 @@\n     discount = price * discount_rate\n     if loyalty_points > 100:\n         discount += price * 0.05\n-    final_price = price - discount - (discount * 0.1)\n+    final_price = price - discount - (discount * 1.1)\n     return final_price\n \n # JSS paper\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #110",
        "line": 220,
        "description": [
          "    final_price = price - discount - (discount * 0.1)"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -217,7 +217,7 @@\n     discount = price * discount_rate\n     if loyalty_points > 100:\n         discount += price * 0.05\n-    final_price = price - discount - (discount * 0.1)\n+    final_price = None\n     return final_price\n \n # JSS paper\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "overly_complex_function",
    "function_scope": "225-260",
    "patterns": [
      {
        "lineno": 252,
        "coloffset": 4,
        "linematch": "if len(filtered_data) > 0:",
        "context": "            print(f\"Item {item['id']} does not meet the value thresholds\")\n        pass\n\n    # Deeply nested control structures (can be further nested for DNCS)\n    if len(filtered_data) > 0:\n        for item in filtered_data:\n            if item['discounted_price'] < 0:\n                item['discounted_price'] = 0\n        global_variable += 1\n    else:",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 238,
        "coloffset": 8,
        "linematch": "if item['value1'] > threshold1 and item['value2'] < threshold2:",
        "context": "    \"\"\"\n    filtered_data = []\n\n    for item in data:\n        if item['value1'] > threshold1 and item['value2'] < threshold2:\n            if item['price'] > min_order_value:\n                discount = item['price'] * discount_rate\n                if loyalty_points > 100:\n                    discount += item['price'] * 0.05 \n                item['discounted_price'] = item['price'] - discount",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 239,
        "coloffset": 12,
        "linematch": "if item['price'] > min_order_value:",
        "context": "    filtered_data = []\n\n    for item in data:\n        if item['value1'] > threshold1 and item['value2'] < threshold2:\n            if item['price'] > min_order_value:\n                discount = item['price'] * discount_rate\n                if loyalty_points > 100:\n                    discount += item['price'] * 0.05 \n                item['discounted_price'] = item['price'] - discount\n                filtered_data.append(item)",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 241,
        "coloffset": 16,
        "linematch": "if loyalty_points > 100:",
        "context": "    for item in data:\n        if item['value1'] > threshold1 and item['value2'] < threshold2:\n            if item['price'] > min_order_value:\n                discount = item['price'] * discount_rate\n                if loyalty_points > 100:\n                    discount += item['price'] * 0.05 \n                item['discounted_price'] = item['price'] - discount\n                filtered_data.append(item)\n            else:\n                print(f\"Order value for item {item['id']} is below minimum ({min_order_value})\")",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 254,
        "coloffset": 12,
        "linematch": "if item['discounted_price'] < 0:",
        "context": "\n    # Deeply nested control structures (can be further nested for DNCS)\n    if len(filtered_data) > 0:\n        for item in filtered_data:\n            if item['discounted_price'] < 0:\n                item['discounted_price'] = 0\n        global_variable += 1\n    else:\n        print(\"No items met the filtering criteria.\")\n",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 239,
        "coloffset": 12,
        "linematch": "if item['price'] > min_order_value:",
        "context": "    filtered_data = []\n\n    for item in data:\n        if item['value1'] > threshold1 and item['value2'] < threshold2:\n            if item['price'] > min_order_value:\n                discount = item['price'] * discount_rate\n                if loyalty_points > 100:\n                    discount += item['price'] * 0.05 \n                item['discounted_price'] = item['price'] - discount\n                filtered_data.append(item)",
        "pattern": ".//FunctionDef/body//If[ancestor::If and not(parent::orelse)]",
        "check_id": "CL002",
        "check_name": "double-nested-if"
      },
      {
        "lineno": 241,
        "coloffset": 16,
        "linematch": "if loyalty_points > 100:",
        "context": "    for item in data:\n        if item['value1'] > threshold1 and item['value2'] < threshold2:\n            if item['price'] > min_order_value:\n                discount = item['price'] * discount_rate\n                if loyalty_points > 100:\n                    discount += item['price'] * 0.05 \n                item['discounted_price'] = item['price'] - discount\n                filtered_data.append(item)\n            else:\n                print(f\"Order value for item {item['id']} is below minimum ({min_order_value})\")",
        "pattern": ".//FunctionDef/body//If[ancestor::If and not(parent::orelse)]",
        "check_id": "CL002",
        "check_name": "double-nested-if"
      },
      {
        "lineno": 254,
        "coloffset": 12,
        "linematch": "if item['discounted_price'] < 0:",
        "context": "\n    # Deeply nested control structures (can be further nested for DNCS)\n    if len(filtered_data) > 0:\n        for item in filtered_data:\n            if item['discounted_price'] < 0:\n                item['discounted_price'] = 0\n        global_variable += 1\n    else:\n        print(\"No items met the filtering criteria.\")\n",
        "pattern": ".//FunctionDef/body//If[ancestor::If and not(parent::orelse)]",
        "check_id": "CL002",
        "check_name": "double-nested-if"
      },
      {
        "lineno": 225,
        "coloffset": 0,
        "linematch": "def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):",
        "context": "    return final_price\n\n# JSS paper\n\ndef overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):\n    \"\"\"\n    This function demonstrates a combination of code smells for demonstration purposes.\n\n    Contains Patterns:\n        - High Cyclomatic Complexity (HCC): Uses multiple nested conditionals.",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 254,
        "coloffset": 12,
        "linematch": "if item['discounted_price'] < 0:",
        "context": "\n    # Deeply nested control structures (can be further nested for DNCS)\n    if len(filtered_data) > 0:\n        for item in filtered_data:\n            if item['discounted_price'] < 0:\n                item['discounted_price'] = 0\n        global_variable += 1\n    else:\n        print(\"No items met the filtering criteria.\")\n",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 239,
        "coloffset": 12,
        "linematch": "if item['price'] > min_order_value:",
        "context": "    filtered_data = []\n\n    for item in data:\n        if item['value1'] > threshold1 and item['value2'] < threshold2:\n            if item['price'] > min_order_value:\n                discount = item['price'] * discount_rate\n                if loyalty_points > 100:\n                    discount += item['price'] * 0.05 \n                item['discounted_price'] = item['price'] - discount\n                filtered_data.append(item)",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 241,
        "coloffset": 16,
        "linematch": "if loyalty_points > 100:",
        "context": "    for item in data:\n        if item['value1'] > threshold1 and item['value2'] < threshold2:\n            if item['price'] > min_order_value:\n                discount = item['price'] * discount_rate\n                if loyalty_points > 100:\n                    discount += item['price'] * 0.05 \n                item['discounted_price'] = item['price'] - discount\n                filtered_data.append(item)\n            else:\n                print(f\"Order value for item {item['id']} is below minimum ({min_order_value})\")",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 225,
        "coloffset": 0,
        "linematch": "def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):",
        "context": "    return final_price\n\n# JSS paper\n\ndef overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):\n    \"\"\"\n    This function demonstrates a combination of code smells for demonstration purposes.\n\n    Contains Patterns:\n        - High Cyclomatic Complexity (HCC): Uses multiple nested conditionals.",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 226,
        "coloffset": 4,
        "linematch": "\"\"\"",
        "context": "\n# JSS paper\n\ndef overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):\n    \"\"\"\n    This function demonstrates a combination of code smells for demonstration purposes.\n\n    Contains Patterns:\n        - High Cyclomatic Complexity (HCC): Uses multiple nested conditionals.\n        - Long Parameter List (LPL): Has 7 parameters.",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 235,
        "coloffset": 4,
        "linematch": "filtered_data = []",
        "context": "        - Long Parameter List (LPL): Has 7 parameters.\n        - Deeply Nested Control Structures (DNCS): Uses nested ifs and fors.\n        - Magic Numbers: Uses hardcoded values (thresholds, discount rate).\n    \"\"\"\n    filtered_data = []\n\n    for item in data:\n        if item['value1'] > threshold1 and item['value2'] < threshold2:\n            if item['price'] > min_order_value:\n                discount = item['price'] * discount_rate",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 237,
        "coloffset": 4,
        "linematch": "for item in data:",
        "context": "        - Magic Numbers: Uses hardcoded values (thresholds, discount rate).\n    \"\"\"\n    filtered_data = []\n\n    for item in data:\n        if item['value1'] > threshold1 and item['value2'] < threshold2:\n            if item['price'] > min_order_value:\n                discount = item['price'] * discount_rate\n                if loyalty_points > 100:\n                    discount += item['price'] * 0.05 ",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 252,
        "coloffset": 4,
        "linematch": "if len(filtered_data) > 0:",
        "context": "            print(f\"Item {item['id']} does not meet the value thresholds\")\n        pass\n\n    # Deeply nested control structures (can be further nested for DNCS)\n    if len(filtered_data) > 0:\n        for item in filtered_data:\n            if item['discounted_price'] < 0:\n                item['discounted_price'] = 0\n        global_variable += 1\n    else:",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 260,
        "coloffset": 4,
        "linematch": "return filtered_data",
        "context": "        global_variable += 1\n    else:\n        print(\"No items met the filtering criteria.\")\n\n    return filtered_data\n\nclass Person:\n    \"\"\"A complex class\n    Contains Patterns:\n        - God Object (GO): Has many responsibilities.",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 225,
        "coloffset": 0,
        "linematch": "def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):",
        "context": "    return final_price\n\n# JSS paper\n\ndef overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):\n    \"\"\"\n    This function demonstrates a combination of code smells for demonstration purposes.\n\n    Contains Patterns:\n        - High Cyclomatic Complexity (HCC): Uses multiple nested conditionals.",
        "pattern": ".//FunctionDef[count(.//If | .//For | .//While | .//Try) > 3]",
        "check_id": "F030",
        "check_name": "deeply-nested-control-structures"
      },
      {
        "lineno": 225,
        "coloffset": 0,
        "linematch": "def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):",
        "context": "    return final_price\n\n# JSS paper\n\ndef overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):\n    \"\"\"\n    This function demonstrates a combination of code smells for demonstration purposes.\n\n    Contains Patterns:\n        - High Cyclomatic Complexity (HCC): Uses multiple nested conditionals.",
        "pattern": ".//FunctionDef[count(.//If | .//For | .//While | .//Try) > 3]",
        "check_id": "P005",
        "check_name": "long-scope-chaining"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #111",
        "line": 225,
        "description": [
          "def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -222,7 +222,7 @@\n \n # JSS paper\n \n-def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):\n+def overly_complex_function(data, threshold1=11, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):\n     \"\"\"\n     This function demonstrates a combination of code smells for demonstration purposes.\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #112",
        "line": 225,
        "description": [
          "def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -222,7 +222,7 @@\n \n # JSS paper\n \n-def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):\n+def overly_complex_function(data, threshold1=10, threshold2=6, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):\n     \"\"\"\n     This function demonstrates a combination of code smells for demonstration purposes.\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #113",
        "line": 225,
        "description": [
          "def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -222,7 +222,7 @@\n \n # JSS paper\n \n-def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):\n+def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=1.1, loyalty_points=0, min_order_value=100, global_variable=1):\n     \"\"\"\n     This function demonstrates a combination of code smells for demonstration purposes.\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #114",
        "line": 225,
        "description": [
          "def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -222,7 +222,7 @@\n \n # JSS paper\n \n-def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):\n+def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=1, min_order_value=100, global_variable=1):\n     \"\"\"\n     This function demonstrates a combination of code smells for demonstration purposes.\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #115",
        "line": 225,
        "description": [
          "def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -222,7 +222,7 @@\n \n # JSS paper\n \n-def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):\n+def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=101, global_variable=1):\n     \"\"\"\n     This function demonstrates a combination of code smells for demonstration purposes.\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #116",
        "line": 225,
        "description": [
          "def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -222,7 +222,7 @@\n \n # JSS paper\n \n-def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=1):\n+def overly_complex_function(data, threshold1=10, threshold2=5, discount_rate=0.1, loyalty_points=0, min_order_value=100, global_variable=2):\n     \"\"\"\n     This function demonstrates a combination of code smells for demonstration purposes.\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #117",
        "line": 235,
        "description": [
          "    filtered_data = []"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -232,7 +232,7 @@\n         - Deeply Nested Control Structures (DNCS): Uses nested ifs and fors.\n         - Magic Numbers: Uses hardcoded values (thresholds, discount rate).\n     \"\"\"\n-    filtered_data = []\n+    filtered_data = None\n \n     for item in data:\n         if item['value1'] > threshold1 and item['value2'] < threshold2:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #118",
        "line": 238,
        "description": [
          "        if item['value1'] > threshold1 and item['value2'] < threshold2:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -235,7 +235,7 @@\n     filtered_data = []\n \n     for item in data:\n-        if item['value1'] > threshold1 and item['value2'] < threshold2:\n+        if item['XXvalue1XX'] > threshold1 and item['value2'] < threshold2:\n             if item['price'] > min_order_value:\n                 discount = item['price'] * discount_rate\n                 if loyalty_points > 100:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #119",
        "line": 238,
        "description": [
          "        if item['value1'] > threshold1 and item['value2'] < threshold2:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -235,7 +235,7 @@\n     filtered_data = []\n \n     for item in data:\n-        if item['value1'] > threshold1 and item['value2'] < threshold2:\n+        if item['value1'] >= threshold1 and item['value2'] < threshold2:\n             if item['price'] > min_order_value:\n                 discount = item['price'] * discount_rate\n                 if loyalty_points > 100:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #120",
        "line": 238,
        "description": [
          "        if item['value1'] > threshold1 and item['value2'] < threshold2:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -235,7 +235,7 @@\n     filtered_data = []\n \n     for item in data:\n-        if item['value1'] > threshold1 and item['value2'] < threshold2:\n+        if item['value1'] > threshold1 and item['XXvalue2XX'] < threshold2:\n             if item['price'] > min_order_value:\n                 discount = item['price'] * discount_rate\n                 if loyalty_points > 100:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #121",
        "line": 238,
        "description": [
          "        if item['value1'] > threshold1 and item['value2'] < threshold2:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -235,7 +235,7 @@\n     filtered_data = []\n \n     for item in data:\n-        if item['value1'] > threshold1 and item['value2'] < threshold2:\n+        if item['value1'] > threshold1 and item['value2'] <= threshold2:\n             if item['price'] > min_order_value:\n                 discount = item['price'] * discount_rate\n                 if loyalty_points > 100:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #122",
        "line": 238,
        "description": [
          "        if item['value1'] > threshold1 and item['value2'] < threshold2:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -235,7 +235,7 @@\n     filtered_data = []\n \n     for item in data:\n-        if item['value1'] > threshold1 and item['value2'] < threshold2:\n+        if item['value1'] > threshold1 or item['value2'] < threshold2:\n             if item['price'] > min_order_value:\n                 discount = item['price'] * discount_rate\n                 if loyalty_points > 100:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #123",
        "line": 239,
        "description": [
          "            if item['price'] > min_order_value:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -236,7 +236,7 @@\n \n     for item in data:\n         if item['value1'] > threshold1 and item['value2'] < threshold2:\n-            if item['price'] > min_order_value:\n+            if item['XXpriceXX'] > min_order_value:\n                 discount = item['price'] * discount_rate\n                 if loyalty_points > 100:\n                     discount += item['price'] * 0.05 \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #124",
        "line": 239,
        "description": [
          "            if item['price'] > min_order_value:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -236,7 +236,7 @@\n \n     for item in data:\n         if item['value1'] > threshold1 and item['value2'] < threshold2:\n-            if item['price'] > min_order_value:\n+            if item['price'] >= min_order_value:\n                 discount = item['price'] * discount_rate\n                 if loyalty_points > 100:\n                     discount += item['price'] * 0.05 \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #125",
        "line": 240,
        "description": [
          "                discount = item['price'] * discount_rate"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -237,7 +237,7 @@\n     for item in data:\n         if item['value1'] > threshold1 and item['value2'] < threshold2:\n             if item['price'] > min_order_value:\n-                discount = item['price'] * discount_rate\n+                discount = item['XXpriceXX'] * discount_rate\n                 if loyalty_points > 100:\n                     discount += item['price'] * 0.05 \n                 item['discounted_price'] = item['price'] - discount\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #126",
        "line": 240,
        "description": [
          "                discount = item['price'] * discount_rate"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -237,7 +237,7 @@\n     for item in data:\n         if item['value1'] > threshold1 and item['value2'] < threshold2:\n             if item['price'] > min_order_value:\n-                discount = item['price'] * discount_rate\n+                discount = item['price'] / discount_rate\n                 if loyalty_points > 100:\n                     discount += item['price'] * 0.05 \n                 item['discounted_price'] = item['price'] - discount\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #127",
        "line": 240,
        "description": [
          "                discount = item['price'] * discount_rate"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -237,7 +237,7 @@\n     for item in data:\n         if item['value1'] > threshold1 and item['value2'] < threshold2:\n             if item['price'] > min_order_value:\n-                discount = item['price'] * discount_rate\n+                discount = None\n                 if loyalty_points > 100:\n                     discount += item['price'] * 0.05 \n                 item['discounted_price'] = item['price'] - discount\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #128",
        "line": 241,
        "description": [
          "                if loyalty_points > 100:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -238,7 +238,7 @@\n         if item['value1'] > threshold1 and item['value2'] < threshold2:\n             if item['price'] > min_order_value:\n                 discount = item['price'] * discount_rate\n-                if loyalty_points > 100:\n+                if loyalty_points >= 100:\n                     discount += item['price'] * 0.05 \n                 item['discounted_price'] = item['price'] - discount\n                 filtered_data.append(item)\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #129",
        "line": 241,
        "description": [
          "                if loyalty_points > 100:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -238,7 +238,7 @@\n         if item['value1'] > threshold1 and item['value2'] < threshold2:\n             if item['price'] > min_order_value:\n                 discount = item['price'] * discount_rate\n-                if loyalty_points > 100:\n+                if loyalty_points > 101:\n                     discount += item['price'] * 0.05 \n                 item['discounted_price'] = item['price'] - discount\n                 filtered_data.append(item)\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #130",
        "line": 242,
        "description": [
          "                    discount += item['price'] * 0.05 "
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -239,7 +239,7 @@\n             if item['price'] > min_order_value:\n                 discount = item['price'] * discount_rate\n                 if loyalty_points > 100:\n-                    discount += item['price'] * 0.05 \n+                    discount = item['price'] * 0.05 \n                 item['discounted_price'] = item['price'] - discount\n                 filtered_data.append(item)\n             else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #131",
        "line": 242,
        "description": [
          "                    discount += item['price'] * 0.05 "
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -239,7 +239,7 @@\n             if item['price'] > min_order_value:\n                 discount = item['price'] * discount_rate\n                 if loyalty_points > 100:\n-                    discount += item['price'] * 0.05 \n+                    discount -= item['price'] * 0.05 \n                 item['discounted_price'] = item['price'] - discount\n                 filtered_data.append(item)\n             else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #132",
        "line": 242,
        "description": [
          "                    discount += item['price'] * 0.05 "
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -239,7 +239,7 @@\n             if item['price'] > min_order_value:\n                 discount = item['price'] * discount_rate\n                 if loyalty_points > 100:\n-                    discount += item['price'] * 0.05 \n+                    discount += item['XXpriceXX'] * 0.05 \n                 item['discounted_price'] = item['price'] - discount\n                 filtered_data.append(item)\n             else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #133",
        "line": 242,
        "description": [
          "                    discount += item['price'] * 0.05 "
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -239,7 +239,7 @@\n             if item['price'] > min_order_value:\n                 discount = item['price'] * discount_rate\n                 if loyalty_points > 100:\n-                    discount += item['price'] * 0.05 \n+                    discount += item['price'] / 0.05 \n                 item['discounted_price'] = item['price'] - discount\n                 filtered_data.append(item)\n             else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #134",
        "line": 242,
        "description": [
          "                    discount += item['price'] * 0.05 "
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -239,7 +239,7 @@\n             if item['price'] > min_order_value:\n                 discount = item['price'] * discount_rate\n                 if loyalty_points > 100:\n-                    discount += item['price'] * 0.05 \n+                    discount += item['price'] * 1.05 \n                 item['discounted_price'] = item['price'] - discount\n                 filtered_data.append(item)\n             else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #135",
        "line": 243,
        "description": [
          "                item['discounted_price'] = item['price'] - discount"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -240,7 +240,7 @@\n                 discount = item['price'] * discount_rate\n                 if loyalty_points > 100:\n                     discount += item['price'] * 0.05 \n-                item['discounted_price'] = item['price'] - discount\n+                item['XXdiscounted_priceXX'] = item['price'] - discount\n                 filtered_data.append(item)\n             else:\n                 print(f\"Order value for item {item['id']} is below minimum ({min_order_value})\")\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #136",
        "line": 243,
        "description": [
          "                item['discounted_price'] = item['price'] - discount"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -240,7 +240,7 @@\n                 discount = item['price'] * discount_rate\n                 if loyalty_points > 100:\n                     discount += item['price'] * 0.05 \n-                item['discounted_price'] = item['price'] - discount\n+                item['discounted_price'] = item['XXpriceXX'] - discount\n                 filtered_data.append(item)\n             else:\n                 print(f\"Order value for item {item['id']} is below minimum ({min_order_value})\")\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #137",
        "line": 243,
        "description": [
          "                item['discounted_price'] = item['price'] - discount"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -240,7 +240,7 @@\n                 discount = item['price'] * discount_rate\n                 if loyalty_points > 100:\n                     discount += item['price'] * 0.05 \n-                item['discounted_price'] = item['price'] - discount\n+                item['discounted_price'] = item['price'] + discount\n                 filtered_data.append(item)\n             else:\n                 print(f\"Order value for item {item['id']} is below minimum ({min_order_value})\")\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #138",
        "line": 243,
        "description": [
          "                item['discounted_price'] = item['price'] - discount"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -240,7 +240,7 @@\n                 discount = item['price'] * discount_rate\n                 if loyalty_points > 100:\n                     discount += item['price'] * 0.05 \n-                item['discounted_price'] = item['price'] - discount\n+                item['discounted_price'] = None\n                 filtered_data.append(item)\n             else:\n                 print(f\"Order value for item {item['id']} is below minimum ({min_order_value})\")\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #139",
        "line": 246,
        "description": [
          "                print(f\"Order value for item {item['id']} is below minimum ({min_order_value})\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -243,7 +243,7 @@\n                 item['discounted_price'] = item['price'] - discount\n                 filtered_data.append(item)\n             else:\n-                print(f\"Order value for item {item['id']} is below minimum ({min_order_value})\")\n+                print(f\"Order value for item {item['XXidXX']} is below minimum ({min_order_value})\")\n         else:\n             print(f\"Item {item['id']} does not meet the value thresholds\")\n         pass\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #140",
        "line": 246,
        "description": [
          "                print(f\"Order value for item {item['id']} is below minimum ({min_order_value})\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -243,7 +243,7 @@\n                 item['discounted_price'] = item['price'] - discount\n                 filtered_data.append(item)\n             else:\n-                print(f\"Order value for item {item['id']} is below minimum ({min_order_value})\")\n+                print(f\"XXOrder value for item {item['id']} is below minimum ({min_order_value})XX\")\n         else:\n             print(f\"Item {item['id']} does not meet the value thresholds\")\n         pass\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #141",
        "line": 248,
        "description": [
          "            print(f\"Item {item['id']} does not meet the value thresholds\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -245,7 +245,7 @@\n             else:\n                 print(f\"Order value for item {item['id']} is below minimum ({min_order_value})\")\n         else:\n-            print(f\"Item {item['id']} does not meet the value thresholds\")\n+            print(f\"Item {item['XXidXX']} does not meet the value thresholds\")\n         pass\n \n     # Deeply nested control structures (can be further nested for DNCS)\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #142",
        "line": 248,
        "description": [
          "            print(f\"Item {item['id']} does not meet the value thresholds\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -245,7 +245,7 @@\n             else:\n                 print(f\"Order value for item {item['id']} is below minimum ({min_order_value})\")\n         else:\n-            print(f\"Item {item['id']} does not meet the value thresholds\")\n+            print(f\"XXItem {item['id']} does not meet the value thresholdsXX\")\n         pass\n \n     # Deeply nested control structures (can be further nested for DNCS)\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #143",
        "line": 252,
        "description": [
          "    if len(filtered_data) > 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -249,7 +249,7 @@\n         pass\n \n     # Deeply nested control structures (can be further nested for DNCS)\n-    if len(filtered_data) > 0:\n+    if len(filtered_data) >= 0:\n         for item in filtered_data:\n             if item['discounted_price'] < 0:\n                 item['discounted_price'] = 0\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #144",
        "line": 252,
        "description": [
          "    if len(filtered_data) > 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -249,7 +249,7 @@\n         pass\n \n     # Deeply nested control structures (can be further nested for DNCS)\n-    if len(filtered_data) > 0:\n+    if len(filtered_data) > 1:\n         for item in filtered_data:\n             if item['discounted_price'] < 0:\n                 item['discounted_price'] = 0\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #145",
        "line": 254,
        "description": [
          "            if item['discounted_price'] < 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -251,7 +251,7 @@\n     # Deeply nested control structures (can be further nested for DNCS)\n     if len(filtered_data) > 0:\n         for item in filtered_data:\n-            if item['discounted_price'] < 0:\n+            if item['XXdiscounted_priceXX'] < 0:\n                 item['discounted_price'] = 0\n         global_variable += 1\n     else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #146",
        "line": 254,
        "description": [
          "            if item['discounted_price'] < 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -251,7 +251,7 @@\n     # Deeply nested control structures (can be further nested for DNCS)\n     if len(filtered_data) > 0:\n         for item in filtered_data:\n-            if item['discounted_price'] < 0:\n+            if item['discounted_price'] <= 0:\n                 item['discounted_price'] = 0\n         global_variable += 1\n     else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #147",
        "line": 254,
        "description": [
          "            if item['discounted_price'] < 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -251,7 +251,7 @@\n     # Deeply nested control structures (can be further nested for DNCS)\n     if len(filtered_data) > 0:\n         for item in filtered_data:\n-            if item['discounted_price'] < 0:\n+            if item['discounted_price'] < 1:\n                 item['discounted_price'] = 0\n         global_variable += 1\n     else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #148",
        "line": 255,
        "description": [
          "                item['discounted_price'] = 0"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -252,7 +252,7 @@\n     if len(filtered_data) > 0:\n         for item in filtered_data:\n             if item['discounted_price'] < 0:\n-                item['discounted_price'] = 0\n+                item['XXdiscounted_priceXX'] = 0\n         global_variable += 1\n     else:\n         print(\"No items met the filtering criteria.\")\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #149",
        "line": 255,
        "description": [
          "                item['discounted_price'] = 0"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -252,7 +252,7 @@\n     if len(filtered_data) > 0:\n         for item in filtered_data:\n             if item['discounted_price'] < 0:\n-                item['discounted_price'] = 0\n+                item['discounted_price'] = 1\n         global_variable += 1\n     else:\n         print(\"No items met the filtering criteria.\")\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #150",
        "line": 255,
        "description": [
          "                item['discounted_price'] = 0"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -252,7 +252,7 @@\n     if len(filtered_data) > 0:\n         for item in filtered_data:\n             if item['discounted_price'] < 0:\n-                item['discounted_price'] = 0\n+                item['discounted_price'] = None\n         global_variable += 1\n     else:\n         print(\"No items met the filtering criteria.\")\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #151",
        "line": 256,
        "description": [
          "        global_variable += 1"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -253,7 +253,7 @@\n         for item in filtered_data:\n             if item['discounted_price'] < 0:\n                 item['discounted_price'] = 0\n-        global_variable += 1\n+        global_variable = 1\n     else:\n         print(\"No items met the filtering criteria.\")\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #152",
        "line": 256,
        "description": [
          "        global_variable += 1"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -253,7 +253,7 @@\n         for item in filtered_data:\n             if item['discounted_price'] < 0:\n                 item['discounted_price'] = 0\n-        global_variable += 1\n+        global_variable -= 1\n     else:\n         print(\"No items met the filtering criteria.\")\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #153",
        "line": 256,
        "description": [
          "        global_variable += 1"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -253,7 +253,7 @@\n         for item in filtered_data:\n             if item['discounted_price'] < 0:\n                 item['discounted_price'] = 0\n-        global_variable += 1\n+        global_variable += 2\n     else:\n         print(\"No items met the filtering criteria.\")\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #154",
        "line": 258,
        "description": [
          "        print(\"No items met the filtering criteria.\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -255,7 +255,7 @@\n                 item['discounted_price'] = 0\n         global_variable += 1\n     else:\n-        print(\"No items met the filtering criteria.\")\n+        print(\"XXNo items met the filtering criteria.XX\")\n \n     return filtered_data\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "setName",
    "function_scope": "278-286",
    "patterns": [
      {
        "lineno": 279,
        "coloffset": 8,
        "linematch": "if not name:",
        "context": "        self.ssn = ssn\n        self.email = email\n        self.address = address\n    def setName(self, name):\n        if not name:\n            raise ValueError(\"Name cannot be empty\")\n        # Simulate unnecessary validation logic (for LM)\n        for char in name:\n            if not char.isalpha() and not char.isspace():\n                raise ValueError(\"Name can only contain letters and spaces\")",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 283,
        "coloffset": 12,
        "linematch": "if not char.isalpha() and not char.isspace():",
        "context": "        if not name:\n            raise ValueError(\"Name cannot be empty\")\n        # Simulate unnecessary validation logic (for LM)\n        for char in name:\n            if not char.isalpha() and not char.isspace():\n                raise ValueError(\"Name can only contain letters and spaces\")\n        self.name = name\n        return self\n    def setAge(self, age):\n        if age < 0:",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 278,
        "coloffset": 4,
        "linematch": "def setName(self, name):",
        "context": "        self.age = age\n        self.ssn = ssn\n        self.email = email\n        self.address = address\n    def setName(self, name):\n        if not name:\n            raise ValueError(\"Name cannot be empty\")\n        # Simulate unnecessary validation logic (for LM)\n        for char in name:\n            if not char.isalpha() and not char.isspace():",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 278,
        "coloffset": 4,
        "linematch": "def setName(self, name):",
        "context": "        self.age = age\n        self.ssn = ssn\n        self.email = email\n        self.address = address\n    def setName(self, name):\n        if not name:\n            raise ValueError(\"Name cannot be empty\")\n        # Simulate unnecessary validation logic (for LM)\n        for char in name:\n            if not char.isalpha() and not char.isspace():",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 279,
        "coloffset": 8,
        "linematch": "if not name:",
        "context": "        self.ssn = ssn\n        self.email = email\n        self.address = address\n    def setName(self, name):\n        if not name:\n            raise ValueError(\"Name cannot be empty\")\n        # Simulate unnecessary validation logic (for LM)\n        for char in name:\n            if not char.isalpha() and not char.isspace():\n                raise ValueError(\"Name can only contain letters and spaces\")",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 282,
        "coloffset": 8,
        "linematch": "for char in name:",
        "context": "    def setName(self, name):\n        if not name:\n            raise ValueError(\"Name cannot be empty\")\n        # Simulate unnecessary validation logic (for LM)\n        for char in name:\n            if not char.isalpha() and not char.isspace():\n                raise ValueError(\"Name can only contain letters and spaces\")\n        self.name = name\n        return self\n    def setAge(self, age):",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 285,
        "coloffset": 8,
        "linematch": "self.name = name",
        "context": "        # Simulate unnecessary validation logic (for LM)\n        for char in name:\n            if not char.isalpha() and not char.isspace():\n                raise ValueError(\"Name can only contain letters and spaces\")\n        self.name = name\n        return self\n    def setAge(self, age):\n        if age < 0:\n            raise ValueError(\"Age cannot be negative\")\n        try:",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 286,
        "coloffset": 8,
        "linematch": "return self",
        "context": "        for char in name:\n            if not char.isalpha() and not char.isspace():\n                raise ValueError(\"Name can only contain letters and spaces\")\n        self.name = name\n        return self\n    def setAge(self, age):\n        if age < 0:\n            raise ValueError(\"Age cannot be negative\")\n        try:\n            self.age = int(age)  # Potential for type conversion errors",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #164",
        "line": 279,
        "description": [
          "        if not name:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -276,7 +276,7 @@\n         self.email = email\n         self.address = address\n     def setName(self, name):\n-        if not name:\n+        if  name:\n             raise ValueError(\"Name cannot be empty\")\n         # Simulate unnecessary validation logic (for LM)\n         for char in name:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #165",
        "line": 280,
        "description": [
          "            raise ValueError(\"Name cannot be empty\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -277,7 +277,7 @@\n         self.address = address\n     def setName(self, name):\n         if not name:\n-            raise ValueError(\"Name cannot be empty\")\n+            raise ValueError(\"XXName cannot be emptyXX\")\n         # Simulate unnecessary validation logic (for LM)\n         for char in name:\n             if not char.isalpha() and not char.isspace():\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #166",
        "line": 283,
        "description": [
          "            if not char.isalpha() and not char.isspace():"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -280,7 +280,7 @@\n             raise ValueError(\"Name cannot be empty\")\n         # Simulate unnecessary validation logic (for LM)\n         for char in name:\n-            if not char.isalpha() and not char.isspace():\n+            if  char.isalpha() and not char.isspace():\n                 raise ValueError(\"Name can only contain letters and spaces\")\n         self.name = name\n         return self\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #167",
        "line": 283,
        "description": [
          "            if not char.isalpha() and not char.isspace():"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -280,7 +280,7 @@\n             raise ValueError(\"Name cannot be empty\")\n         # Simulate unnecessary validation logic (for LM)\n         for char in name:\n-            if not char.isalpha() and not char.isspace():\n+            if not char.isalpha() and  char.isspace():\n                 raise ValueError(\"Name can only contain letters and spaces\")\n         self.name = name\n         return self\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #168",
        "line": 283,
        "description": [
          "            if not char.isalpha() and not char.isspace():"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -280,7 +280,7 @@\n             raise ValueError(\"Name cannot be empty\")\n         # Simulate unnecessary validation logic (for LM)\n         for char in name:\n-            if not char.isalpha() and not char.isspace():\n+            if not char.isalpha() or not char.isspace():\n                 raise ValueError(\"Name can only contain letters and spaces\")\n         self.name = name\n         return self\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #169",
        "line": 284,
        "description": [
          "                raise ValueError(\"Name can only contain letters and spaces\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -281,7 +281,7 @@\n         # Simulate unnecessary validation logic (for LM)\n         for char in name:\n             if not char.isalpha() and not char.isspace():\n-                raise ValueError(\"Name can only contain letters and spaces\")\n+                raise ValueError(\"XXName can only contain letters and spacesXX\")\n         self.name = name\n         return self\n     def setAge(self, age):\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #170",
        "line": 285,
        "description": [
          "        self.name = name"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -282,7 +282,7 @@\n         for char in name:\n             if not char.isalpha() and not char.isspace():\n                 raise ValueError(\"Name can only contain letters and spaces\")\n-        self.name = name\n+        self.name = None\n         return self\n     def setAge(self, age):\n         if age < 0:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "setAge",
    "function_scope": "287-293",
    "patterns": [
      {
        "lineno": 288,
        "coloffset": 8,
        "linematch": "if age < 0:",
        "context": "                raise ValueError(\"Name can only contain letters and spaces\")\n        self.name = name\n        return self\n    def setAge(self, age):\n        if age < 0:\n            raise ValueError(\"Age cannot be negative\")\n        try:\n            self.age = int(age)  # Potential for type conversion errors\n        except ValueError:\n            pass  # Empty catch block (ECB)",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 287,
        "coloffset": 4,
        "linematch": "def setAge(self, age):",
        "context": "            if not char.isalpha() and not char.isspace():\n                raise ValueError(\"Name can only contain letters and spaces\")\n        self.name = name\n        return self\n    def setAge(self, age):\n        if age < 0:\n            raise ValueError(\"Age cannot be negative\")\n        try:\n            self.age = int(age)  # Potential for type conversion errors\n        except ValueError:",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 287,
        "coloffset": 4,
        "linematch": "def setAge(self, age):",
        "context": "            if not char.isalpha() and not char.isspace():\n                raise ValueError(\"Name can only contain letters and spaces\")\n        self.name = name\n        return self\n    def setAge(self, age):\n        if age < 0:\n            raise ValueError(\"Age cannot be negative\")\n        try:\n            self.age = int(age)  # Potential for type conversion errors\n        except ValueError:",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 288,
        "coloffset": 8,
        "linematch": "if age < 0:",
        "context": "                raise ValueError(\"Name can only contain letters and spaces\")\n        self.name = name\n        return self\n    def setAge(self, age):\n        if age < 0:\n            raise ValueError(\"Age cannot be negative\")\n        try:\n            self.age = int(age)  # Potential for type conversion errors\n        except ValueError:\n            pass  # Empty catch block (ECB)",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 290,
        "coloffset": 8,
        "linematch": "try:",
        "context": "        return self\n    def setAge(self, age):\n        if age < 0:\n            raise ValueError(\"Age cannot be negative\")\n        try:\n            self.age = int(age)  # Potential for type conversion errors\n        except ValueError:\n            pass  # Empty catch block (ECB)\n    def setSSN(self, ssn):\n        self.ssn = ssn",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #171",
        "line": 288,
        "description": [
          "        if age < 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -285,7 +285,7 @@\n         self.name = name\n         return self\n     def setAge(self, age):\n-        if age < 0:\n+        if age <= 0:\n             raise ValueError(\"Age cannot be negative\")\n         try:\n             self.age = int(age)  # Potential for type conversion errors\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #172",
        "line": 288,
        "description": [
          "        if age < 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -285,7 +285,7 @@\n         self.name = name\n         return self\n     def setAge(self, age):\n-        if age < 0:\n+        if age < 1:\n             raise ValueError(\"Age cannot be negative\")\n         try:\n             self.age = int(age)  # Potential for type conversion errors\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #173",
        "line": 289,
        "description": [
          "            raise ValueError(\"Age cannot be negative\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -286,7 +286,7 @@\n         return self\n     def setAge(self, age):\n         if age < 0:\n-            raise ValueError(\"Age cannot be negative\")\n+            raise ValueError(\"XXAge cannot be negativeXX\")\n         try:\n             self.age = int(age)  # Potential for type conversion errors\n         except ValueError:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #174",
        "line": 291,
        "description": [
          "            self.age = int(age)  # Potential for type conversion errors"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -288,7 +288,7 @@\n         if age < 0:\n             raise ValueError(\"Age cannot be negative\")\n         try:\n-            self.age = int(age)  # Potential for type conversion errors\n+            self.age = None  # Potential for type conversion errors\n         except ValueError:\n             pass  # Empty catch block (ECB)\n     def setSSN(self, ssn):\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "validate_ssn",
    "function_scope": "306-320",
    "patterns": [
      {
        "lineno": 307,
        "coloffset": 8,
        "linematch": "if not self.ssn:",
        "context": "    def create_person():\n        p = Person()\n        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n    def validate_ssn(self):\n        if not self.ssn:\n            return False\n        if len(self.ssn) != 11:\n            return False\n        parts = self.ssn.split(\"-\")\n        if len(parts) != 3:",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 309,
        "coloffset": 8,
        "linematch": "if len(self.ssn) != 11:",
        "context": "        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n    def validate_ssn(self):\n        if not self.ssn:\n            return False\n        if len(self.ssn) != 11:\n            return False\n        parts = self.ssn.split(\"-\")\n        if len(parts) != 3:\n            return False\n        try:",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 312,
        "coloffset": 8,
        "linematch": "if len(parts) != 3:",
        "context": "            return False\n        if len(self.ssn) != 11:\n            return False\n        parts = self.ssn.split(\"-\")\n        if len(parts) != 3:\n            return False\n        try:\n            int(parts[0])\n            int(parts[1])\n            int(parts[2])",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 306,
        "coloffset": 4,
        "linematch": "def validate_ssn(self):",
        "context": "        return self\n    def create_person():\n        p = Person()\n        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n    def validate_ssn(self):\n        if not self.ssn:\n            return False\n        if len(self.ssn) != 11:\n            return False\n        parts = self.ssn.split(\"-\")",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 309,
        "coloffset": 8,
        "linematch": "if len(self.ssn) != 11:",
        "context": "        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n    def validate_ssn(self):\n        if not self.ssn:\n            return False\n        if len(self.ssn) != 11:\n            return False\n        parts = self.ssn.split(\"-\")\n        if len(parts) != 3:\n            return False\n        try:",
        "pattern": ".//FunctionDef//If/following-sibling::If | .//FunctionDef//If/following-sibling::Elif | .//FunctionDef//If/following-sibling::Else",
        "check_id": "F002",
        "check_name": "number-of-conditions-in-function"
      },
      {
        "lineno": 312,
        "coloffset": 8,
        "linematch": "if len(parts) != 3:",
        "context": "            return False\n        if len(self.ssn) != 11:\n            return False\n        parts = self.ssn.split(\"-\")\n        if len(parts) != 3:\n            return False\n        try:\n            int(parts[0])\n            int(parts[1])\n            int(parts[2])",
        "pattern": ".//FunctionDef//If/following-sibling::If | .//FunctionDef//If/following-sibling::Elif | .//FunctionDef//If/following-sibling::Else",
        "check_id": "F002",
        "check_name": "number-of-conditions-in-function"
      },
      {
        "lineno": 306,
        "coloffset": 4,
        "linematch": "def validate_ssn(self):",
        "context": "        return self\n    def create_person():\n        p = Person()\n        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n    def validate_ssn(self):\n        if not self.ssn:\n            return False\n        if len(self.ssn) != 11:\n            return False\n        parts = self.ssn.split(\"-\")",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 307,
        "coloffset": 8,
        "linematch": "if not self.ssn:",
        "context": "    def create_person():\n        p = Person()\n        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n    def validate_ssn(self):\n        if not self.ssn:\n            return False\n        if len(self.ssn) != 11:\n            return False\n        parts = self.ssn.split(\"-\")\n        if len(parts) != 3:",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 309,
        "coloffset": 8,
        "linematch": "if len(self.ssn) != 11:",
        "context": "        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n    def validate_ssn(self):\n        if not self.ssn:\n            return False\n        if len(self.ssn) != 11:\n            return False\n        parts = self.ssn.split(\"-\")\n        if len(parts) != 3:\n            return False\n        try:",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 311,
        "coloffset": 8,
        "linematch": "parts = self.ssn.split(\"-\")",
        "context": "        if not self.ssn:\n            return False\n        if len(self.ssn) != 11:\n            return False\n        parts = self.ssn.split(\"-\")\n        if len(parts) != 3:\n            return False\n        try:\n            int(parts[0])\n            int(parts[1])",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 312,
        "coloffset": 8,
        "linematch": "if len(parts) != 3:",
        "context": "            return False\n        if len(self.ssn) != 11:\n            return False\n        parts = self.ssn.split(\"-\")\n        if len(parts) != 3:\n            return False\n        try:\n            int(parts[0])\n            int(parts[1])\n            int(parts[2])",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 314,
        "coloffset": 8,
        "linematch": "try:",
        "context": "            return False\n        parts = self.ssn.split(\"-\")\n        if len(parts) != 3:\n            return False\n        try:\n            int(parts[0])\n            int(parts[1])\n            int(parts[2])\n        except ValueError:\n            return False",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 320,
        "coloffset": 8,
        "linematch": "return True",
        "context": "            int(parts[1])\n            int(parts[2])\n        except ValueError:\n            return False\n        return True\n    def odd_even(self,age):\n        if age >= 0:\n            if age == 0:\n                return \"even\"\n            elif age == 1:",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 306,
        "coloffset": 4,
        "linematch": "def validate_ssn(self):",
        "context": "        return self\n    def create_person():\n        p = Person()\n        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n    def validate_ssn(self):\n        if not self.ssn:\n            return False\n        if len(self.ssn) != 11:\n            return False\n        parts = self.ssn.split(\"-\")",
        "pattern": ".//FunctionDef[count(body//Return) > 2]",
        "check_id": "MRET001",
        "check_name": "multiple-returns-in-function"
      },
      {
        "lineno": 306,
        "coloffset": 4,
        "linematch": "def validate_ssn(self):",
        "context": "        return self\n    def create_person():\n        p = Person()\n        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n    def validate_ssn(self):\n        if not self.ssn:\n            return False\n        if len(self.ssn) != 11:\n            return False\n        parts = self.ssn.split(\"-\")",
        "pattern": ".//FunctionDef[count(.//If | .//For | .//While | .//Try) > 3]",
        "check_id": "F030",
        "check_name": "deeply-nested-control-structures"
      },
      {
        "lineno": 306,
        "coloffset": 4,
        "linematch": "def validate_ssn(self):",
        "context": "        return self\n    def create_person():\n        p = Person()\n        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n    def validate_ssn(self):\n        if not self.ssn:\n            return False\n        if len(self.ssn) != 11:\n            return False\n        parts = self.ssn.split(\"-\")",
        "pattern": ".//FunctionDef[count(.//If | .//For | .//While | .//Try) > 3]",
        "check_id": "P005",
        "check_name": "long-scope-chaining"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #184",
        "line": 307,
        "description": [
          "        if not self.ssn:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -304,7 +304,7 @@\n         p = Person()\n         p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n     def validate_ssn(self):\n-        if not self.ssn:\n+        if  self.ssn:\n             return False\n         if len(self.ssn) != 11:\n             return False\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #185",
        "line": 308,
        "description": [
          "            return False"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -305,7 +305,7 @@\n         p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n     def validate_ssn(self):\n         if not self.ssn:\n-            return False\n+            return True\n         if len(self.ssn) != 11:\n             return False\n         parts = self.ssn.split(\"-\")\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #186",
        "line": 309,
        "description": [
          "        if len(self.ssn) != 11:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -306,7 +306,7 @@\n     def validate_ssn(self):\n         if not self.ssn:\n             return False\n-        if len(self.ssn) != 11:\n+        if len(self.ssn) == 11:\n             return False\n         parts = self.ssn.split(\"-\")\n         if len(parts) != 3:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #187",
        "line": 309,
        "description": [
          "        if len(self.ssn) != 11:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -306,7 +306,7 @@\n     def validate_ssn(self):\n         if not self.ssn:\n             return False\n-        if len(self.ssn) != 11:\n+        if len(self.ssn) != 12:\n             return False\n         parts = self.ssn.split(\"-\")\n         if len(parts) != 3:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #188",
        "line": 310,
        "description": [
          "            return False"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -307,7 +307,7 @@\n         if not self.ssn:\n             return False\n         if len(self.ssn) != 11:\n-            return False\n+            return True\n         parts = self.ssn.split(\"-\")\n         if len(parts) != 3:\n             return False\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #189",
        "line": 311,
        "description": [
          "        parts = self.ssn.split(\"-\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -308,7 +308,7 @@\n             return False\n         if len(self.ssn) != 11:\n             return False\n-        parts = self.ssn.split(\"-\")\n+        parts = self.ssn.split(\"XX-XX\")\n         if len(parts) != 3:\n             return False\n         try:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #190",
        "line": 311,
        "description": [
          "        parts = self.ssn.split(\"-\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -308,7 +308,7 @@\n             return False\n         if len(self.ssn) != 11:\n             return False\n-        parts = self.ssn.split(\"-\")\n+        parts = None\n         if len(parts) != 3:\n             return False\n         try:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #191",
        "line": 312,
        "description": [
          "        if len(parts) != 3:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -309,7 +309,7 @@\n         if len(self.ssn) != 11:\n             return False\n         parts = self.ssn.split(\"-\")\n-        if len(parts) != 3:\n+        if len(parts) == 3:\n             return False\n         try:\n             int(parts[0])\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #192",
        "line": 312,
        "description": [
          "        if len(parts) != 3:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -309,7 +309,7 @@\n         if len(self.ssn) != 11:\n             return False\n         parts = self.ssn.split(\"-\")\n-        if len(parts) != 3:\n+        if len(parts) != 4:\n             return False\n         try:\n             int(parts[0])\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #193",
        "line": 313,
        "description": [
          "            return False"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -310,7 +310,7 @@\n             return False\n         parts = self.ssn.split(\"-\")\n         if len(parts) != 3:\n-            return False\n+            return True\n         try:\n             int(parts[0])\n             int(parts[1])\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #194",
        "line": 315,
        "description": [
          "            int(parts[0])"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -312,7 +312,7 @@\n         if len(parts) != 3:\n             return False\n         try:\n-            int(parts[0])\n+            int(parts[1])\n             int(parts[1])\n             int(parts[2])\n         except ValueError:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #195",
        "line": 316,
        "description": [
          "            int(parts[1])"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -313,7 +313,7 @@\n             return False\n         try:\n             int(parts[0])\n-            int(parts[1])\n+            int(parts[2])\n             int(parts[2])\n         except ValueError:\n             return False\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #196",
        "line": 317,
        "description": [
          "            int(parts[2])"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -314,7 +314,7 @@\n         try:\n             int(parts[0])\n             int(parts[1])\n-            int(parts[2])\n+            int(parts[3])\n         except ValueError:\n             return False\n         return True\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #197",
        "line": 319,
        "description": [
          "            return False"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -316,7 +316,7 @@\n             int(parts[1])\n             int(parts[2])\n         except ValueError:\n-            return False\n+            return True\n         return True\n     def odd_even(self,age):\n         if age >= 0:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #198",
        "line": 320,
        "description": [
          "        return True"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -317,7 +317,7 @@\n             int(parts[2])\n         except ValueError:\n             return False\n-        return True\n+        return False\n     def odd_even(self,age):\n         if age >= 0:\n             if age == 0:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "odd_even",
    "function_scope": "321-376",
    "patterns": [
      {
        "lineno": 322,
        "coloffset": 8,
        "linematch": "if age >= 0:",
        "context": "        except ValueError:\n            return False\n        return True\n    def odd_even(self,age):\n        if age >= 0:\n            if age == 0:\n                return \"even\"\n            elif age == 1:\n                return \"odd\"\n            elif age == 2:",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 323,
        "coloffset": 12,
        "linematch": "if age == 0:",
        "context": "            return False\n        return True\n    def odd_even(self,age):\n        if age >= 0:\n            if age == 0:\n                return \"even\"\n            elif age == 1:\n                return \"odd\"\n            elif age == 2:\n                return \"even\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 325,
        "coloffset": 12,
        "linematch": "elif age == 1:",
        "context": "    def odd_even(self,age):\n        if age >= 0:\n            if age == 0:\n                return \"even\"\n            elif age == 1:\n                return \"odd\"\n            elif age == 2:\n                return \"even\"\n            elif age == 3:\n                return \"odd\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 327,
        "coloffset": 12,
        "linematch": "elif age == 2:",
        "context": "            if age == 0:\n                return \"even\"\n            elif age == 1:\n                return \"odd\"\n            elif age == 2:\n                return \"even\"\n            elif age == 3:\n                return \"odd\"\n            elif age == 4:\n                return \"even\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 329,
        "coloffset": 12,
        "linematch": "elif age == 3:",
        "context": "            elif age == 1:\n                return \"odd\"\n            elif age == 2:\n                return \"even\"\n            elif age == 3:\n                return \"odd\"\n            elif age == 4:\n                return \"even\"\n            elif age == 5:\n                return \"odd\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 331,
        "coloffset": 12,
        "linematch": "elif age == 4:",
        "context": "            elif age == 2:\n                return \"even\"\n            elif age == 3:\n                return \"odd\"\n            elif age == 4:\n                return \"even\"\n            elif age == 5:\n                return \"odd\"\n            elif age == 6:\n                return \"even\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 333,
        "coloffset": 12,
        "linematch": "elif age == 5:",
        "context": "            elif age == 3:\n                return \"odd\"\n            elif age == 4:\n                return \"even\"\n            elif age == 5:\n                return \"odd\"\n            elif age == 6:\n                return \"even\"\n            elif age == 7:\n                return \"odd\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 335,
        "coloffset": 12,
        "linematch": "elif age == 6:",
        "context": "            elif age == 4:\n                return \"even\"\n            elif age == 5:\n                return \"odd\"\n            elif age == 6:\n                return \"even\"\n            elif age == 7:\n                return \"odd\"\n            elif age == 8:\n                return \"even\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 337,
        "coloffset": 12,
        "linematch": "elif age == 7:",
        "context": "            elif age == 5:\n                return \"odd\"\n            elif age == 6:\n                return \"even\"\n            elif age == 7:\n                return \"odd\"\n            elif age == 8:\n                return \"even\"\n            elif age == 9:\n                return \"odd\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 339,
        "coloffset": 12,
        "linematch": "elif age == 8:",
        "context": "            elif age == 6:\n                return \"even\"\n            elif age == 7:\n                return \"odd\"\n            elif age == 8:\n                return \"even\"\n            elif age == 9:\n                return \"odd\"\n            elif age == 10:\n                return \"even\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 341,
        "coloffset": 12,
        "linematch": "elif age == 9:",
        "context": "            elif age == 7:\n                return \"odd\"\n            elif age == 8:\n                return \"even\"\n            elif age == 9:\n                return \"odd\"\n            elif age == 10:\n                return \"even\"\n            elif age == 11:\n                return \"odd\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 343,
        "coloffset": 12,
        "linematch": "elif age == 10:",
        "context": "            elif age == 8:\n                return \"even\"\n            elif age == 9:\n                return \"odd\"\n            elif age == 10:\n                return \"even\"\n            elif age == 11:\n                return \"odd\"\n            elif age == 12:\n                return \"even\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 345,
        "coloffset": 12,
        "linematch": "elif age == 11:",
        "context": "            elif age == 9:\n                return \"odd\"\n            elif age == 10:\n                return \"even\"\n            elif age == 11:\n                return \"odd\"\n            elif age == 12:\n                return \"even\"\n            elif age == 13:\n                return \"odd\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 347,
        "coloffset": 12,
        "linematch": "elif age == 12:",
        "context": "            elif age == 10:\n                return \"even\"\n            elif age == 11:\n                return \"odd\"\n            elif age == 12:\n                return \"even\"\n            elif age == 13:\n                return \"odd\"\n            elif age == 14:\n                return \"even\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 349,
        "coloffset": 12,
        "linematch": "elif age == 13:",
        "context": "            elif age == 11:\n                return \"odd\"\n            elif age == 12:\n                return \"even\"\n            elif age == 13:\n                return \"odd\"\n            elif age == 14:\n                return \"even\"\n            elif age == 15:\n                return \"odd\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 351,
        "coloffset": 12,
        "linematch": "elif age == 14:",
        "context": "            elif age == 12:\n                return \"even\"\n            elif age == 13:\n                return \"odd\"\n            elif age == 14:\n                return \"even\"\n            elif age == 15:\n                return \"odd\"\n            elif age == 16:\n                return \"even\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 353,
        "coloffset": 12,
        "linematch": "elif age == 15:",
        "context": "            elif age == 13:\n                return \"odd\"\n            elif age == 14:\n                return \"even\"\n            elif age == 15:\n                return \"odd\"\n            elif age == 16:\n                return \"even\"\n            elif age == 17:\n                return \"odd\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 355,
        "coloffset": 12,
        "linematch": "elif age == 16:",
        "context": "            elif age == 14:\n                return \"even\"\n            elif age == 15:\n                return \"odd\"\n            elif age == 16:\n                return \"even\"\n            elif age == 17:\n                return \"odd\"\n            elif age == 18:\n                return \"even\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 357,
        "coloffset": 12,
        "linematch": "elif age == 17:",
        "context": "            elif age == 15:\n                return \"odd\"\n            elif age == 16:\n                return \"even\"\n            elif age == 17:\n                return \"odd\"\n            elif age == 18:\n                return \"even\"\n            elif age == 19:\n                return \"odd\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 359,
        "coloffset": 12,
        "linematch": "elif age == 18:",
        "context": "            elif age == 16:\n                return \"even\"\n            elif age == 17:\n                return \"odd\"\n            elif age == 18:\n                return \"even\"\n            elif age == 19:\n                return \"odd\"\n            elif age == 20:\n                return \"even\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 361,
        "coloffset": 12,
        "linematch": "elif age == 19:",
        "context": "            elif age == 17:\n                return \"odd\"\n            elif age == 18:\n                return \"even\"\n            elif age == 19:\n                return \"odd\"\n            elif age == 20:\n                return \"even\"\n            elif age == 21:\n                return \"odd\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 363,
        "coloffset": 12,
        "linematch": "elif age == 20:",
        "context": "            elif age == 18:\n                return \"even\"\n            elif age == 19:\n                return \"odd\"\n            elif age == 20:\n                return \"even\"\n            elif age == 21:\n                return \"odd\"\n            elif age == 22:\n                return \"even\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 365,
        "coloffset": 12,
        "linematch": "elif age == 21:",
        "context": "            elif age == 19:\n                return \"odd\"\n            elif age == 20:\n                return \"even\"\n            elif age == 21:\n                return \"odd\"\n            elif age == 22:\n                return \"even\"\n            elif age == 23:\n                return \"odd\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 367,
        "coloffset": 12,
        "linematch": "elif age == 22:",
        "context": "            elif age == 20:\n                return \"even\"\n            elif age == 21:\n                return \"odd\"\n            elif age == 22:\n                return \"even\"\n            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 369,
        "coloffset": 12,
        "linematch": "elif age == 23:",
        "context": "            elif age == 21:\n                return \"odd\"\n            elif age == 22:\n                return \"even\"\n            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 371,
        "coloffset": 12,
        "linematch": "elif age == 24:",
        "context": "            elif age == 22:\n                return \"even\"\n            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 373,
        "coloffset": 12,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef/body//If",
        "check_id": "CL001",
        "check_name": "single-nested-if"
      },
      {
        "lineno": 323,
        "coloffset": 12,
        "linematch": "if age == 0:",
        "context": "            return False\n        return True\n    def odd_even(self,age):\n        if age >= 0:\n            if age == 0:\n                return \"even\"\n            elif age == 1:\n                return \"odd\"\n            elif age == 2:\n                return \"even\"",
        "pattern": ".//FunctionDef/body//If[ancestor::If and not(parent::orelse)]",
        "check_id": "CL002",
        "check_name": "double-nested-if"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 373,
        "coloffset": 17,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 321,
        "coloffset": 4,
        "linematch": "def odd_even(self,age):",
        "context": "            int(parts[2])\n        except ValueError:\n            return False\n        return True\n    def odd_even(self,age):\n        if age >= 0:\n            if age == 0:\n                return \"even\"\n            elif age == 1:\n                return \"odd\"",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 323,
        "coloffset": 12,
        "linematch": "if age == 0:",
        "context": "            return False\n        return True\n    def odd_even(self,age):\n        if age >= 0:\n            if age == 0:\n                return \"even\"\n            elif age == 1:\n                return \"odd\"\n            elif age == 2:\n                return \"even\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 325,
        "coloffset": 12,
        "linematch": "elif age == 1:",
        "context": "    def odd_even(self,age):\n        if age >= 0:\n            if age == 0:\n                return \"even\"\n            elif age == 1:\n                return \"odd\"\n            elif age == 2:\n                return \"even\"\n            elif age == 3:\n                return \"odd\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 327,
        "coloffset": 12,
        "linematch": "elif age == 2:",
        "context": "            if age == 0:\n                return \"even\"\n            elif age == 1:\n                return \"odd\"\n            elif age == 2:\n                return \"even\"\n            elif age == 3:\n                return \"odd\"\n            elif age == 4:\n                return \"even\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 329,
        "coloffset": 12,
        "linematch": "elif age == 3:",
        "context": "            elif age == 1:\n                return \"odd\"\n            elif age == 2:\n                return \"even\"\n            elif age == 3:\n                return \"odd\"\n            elif age == 4:\n                return \"even\"\n            elif age == 5:\n                return \"odd\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 331,
        "coloffset": 12,
        "linematch": "elif age == 4:",
        "context": "            elif age == 2:\n                return \"even\"\n            elif age == 3:\n                return \"odd\"\n            elif age == 4:\n                return \"even\"\n            elif age == 5:\n                return \"odd\"\n            elif age == 6:\n                return \"even\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 333,
        "coloffset": 12,
        "linematch": "elif age == 5:",
        "context": "            elif age == 3:\n                return \"odd\"\n            elif age == 4:\n                return \"even\"\n            elif age == 5:\n                return \"odd\"\n            elif age == 6:\n                return \"even\"\n            elif age == 7:\n                return \"odd\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 335,
        "coloffset": 12,
        "linematch": "elif age == 6:",
        "context": "            elif age == 4:\n                return \"even\"\n            elif age == 5:\n                return \"odd\"\n            elif age == 6:\n                return \"even\"\n            elif age == 7:\n                return \"odd\"\n            elif age == 8:\n                return \"even\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 337,
        "coloffset": 12,
        "linematch": "elif age == 7:",
        "context": "            elif age == 5:\n                return \"odd\"\n            elif age == 6:\n                return \"even\"\n            elif age == 7:\n                return \"odd\"\n            elif age == 8:\n                return \"even\"\n            elif age == 9:\n                return \"odd\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 339,
        "coloffset": 12,
        "linematch": "elif age == 8:",
        "context": "            elif age == 6:\n                return \"even\"\n            elif age == 7:\n                return \"odd\"\n            elif age == 8:\n                return \"even\"\n            elif age == 9:\n                return \"odd\"\n            elif age == 10:\n                return \"even\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 341,
        "coloffset": 12,
        "linematch": "elif age == 9:",
        "context": "            elif age == 7:\n                return \"odd\"\n            elif age == 8:\n                return \"even\"\n            elif age == 9:\n                return \"odd\"\n            elif age == 10:\n                return \"even\"\n            elif age == 11:\n                return \"odd\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 343,
        "coloffset": 12,
        "linematch": "elif age == 10:",
        "context": "            elif age == 8:\n                return \"even\"\n            elif age == 9:\n                return \"odd\"\n            elif age == 10:\n                return \"even\"\n            elif age == 11:\n                return \"odd\"\n            elif age == 12:\n                return \"even\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 345,
        "coloffset": 12,
        "linematch": "elif age == 11:",
        "context": "            elif age == 9:\n                return \"odd\"\n            elif age == 10:\n                return \"even\"\n            elif age == 11:\n                return \"odd\"\n            elif age == 12:\n                return \"even\"\n            elif age == 13:\n                return \"odd\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 347,
        "coloffset": 12,
        "linematch": "elif age == 12:",
        "context": "            elif age == 10:\n                return \"even\"\n            elif age == 11:\n                return \"odd\"\n            elif age == 12:\n                return \"even\"\n            elif age == 13:\n                return \"odd\"\n            elif age == 14:\n                return \"even\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 349,
        "coloffset": 12,
        "linematch": "elif age == 13:",
        "context": "            elif age == 11:\n                return \"odd\"\n            elif age == 12:\n                return \"even\"\n            elif age == 13:\n                return \"odd\"\n            elif age == 14:\n                return \"even\"\n            elif age == 15:\n                return \"odd\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 351,
        "coloffset": 12,
        "linematch": "elif age == 14:",
        "context": "            elif age == 12:\n                return \"even\"\n            elif age == 13:\n                return \"odd\"\n            elif age == 14:\n                return \"even\"\n            elif age == 15:\n                return \"odd\"\n            elif age == 16:\n                return \"even\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 353,
        "coloffset": 12,
        "linematch": "elif age == 15:",
        "context": "            elif age == 13:\n                return \"odd\"\n            elif age == 14:\n                return \"even\"\n            elif age == 15:\n                return \"odd\"\n            elif age == 16:\n                return \"even\"\n            elif age == 17:\n                return \"odd\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 355,
        "coloffset": 12,
        "linematch": "elif age == 16:",
        "context": "            elif age == 14:\n                return \"even\"\n            elif age == 15:\n                return \"odd\"\n            elif age == 16:\n                return \"even\"\n            elif age == 17:\n                return \"odd\"\n            elif age == 18:\n                return \"even\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 357,
        "coloffset": 12,
        "linematch": "elif age == 17:",
        "context": "            elif age == 15:\n                return \"odd\"\n            elif age == 16:\n                return \"even\"\n            elif age == 17:\n                return \"odd\"\n            elif age == 18:\n                return \"even\"\n            elif age == 19:\n                return \"odd\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 359,
        "coloffset": 12,
        "linematch": "elif age == 18:",
        "context": "            elif age == 16:\n                return \"even\"\n            elif age == 17:\n                return \"odd\"\n            elif age == 18:\n                return \"even\"\n            elif age == 19:\n                return \"odd\"\n            elif age == 20:\n                return \"even\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 361,
        "coloffset": 12,
        "linematch": "elif age == 19:",
        "context": "            elif age == 17:\n                return \"odd\"\n            elif age == 18:\n                return \"even\"\n            elif age == 19:\n                return \"odd\"\n            elif age == 20:\n                return \"even\"\n            elif age == 21:\n                return \"odd\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 363,
        "coloffset": 12,
        "linematch": "elif age == 20:",
        "context": "            elif age == 18:\n                return \"even\"\n            elif age == 19:\n                return \"odd\"\n            elif age == 20:\n                return \"even\"\n            elif age == 21:\n                return \"odd\"\n            elif age == 22:\n                return \"even\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 365,
        "coloffset": 12,
        "linematch": "elif age == 21:",
        "context": "            elif age == 19:\n                return \"odd\"\n            elif age == 20:\n                return \"even\"\n            elif age == 21:\n                return \"odd\"\n            elif age == 22:\n                return \"even\"\n            elif age == 23:\n                return \"odd\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 367,
        "coloffset": 12,
        "linematch": "elif age == 22:",
        "context": "            elif age == 20:\n                return \"even\"\n            elif age == 21:\n                return \"odd\"\n            elif age == 22:\n                return \"even\"\n            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 369,
        "coloffset": 12,
        "linematch": "elif age == 23:",
        "context": "            elif age == 21:\n                return \"odd\"\n            elif age == 22:\n                return \"even\"\n            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 371,
        "coloffset": 12,
        "linematch": "elif age == 24:",
        "context": "            elif age == 22:\n                return \"even\"\n            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 373,
        "coloffset": 12,
        "linematch": "elif age == 25:",
        "context": "            elif age == 23:\n                return \"odd\"\n            elif age == 24:\n                return \"even\"\n            elif age == 25:\n                return \"odd\"\n        else:\n            return \"Invalid age\"\n\n",
        "pattern": ".//FunctionDef//If/descendant::If",
        "check_id": "CL001",
        "check_name": "nested-conditions"
      },
      {
        "lineno": 321,
        "coloffset": 4,
        "linematch": "def odd_even(self,age):",
        "context": "            int(parts[2])\n        except ValueError:\n            return False\n        return True\n    def odd_even(self,age):\n        if age >= 0:\n            if age == 0:\n                return \"even\"\n            elif age == 1:\n                return \"odd\"",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 322,
        "coloffset": 8,
        "linematch": "if age >= 0:",
        "context": "        except ValueError:\n            return False\n        return True\n    def odd_even(self,age):\n        if age >= 0:\n            if age == 0:\n                return \"even\"\n            elif age == 1:\n                return \"odd\"\n            elif age == 2:",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 321,
        "coloffset": 4,
        "linematch": "def odd_even(self,age):",
        "context": "            int(parts[2])\n        except ValueError:\n            return False\n        return True\n    def odd_even(self,age):\n        if age >= 0:\n            if age == 0:\n                return \"even\"\n            elif age == 1:\n                return \"odd\"",
        "pattern": ".//FunctionDef[count(body//Return) > 2]",
        "check_id": "MRET001",
        "check_name": "multiple-returns-in-function"
      },
      {
        "lineno": 321,
        "coloffset": 4,
        "linematch": "def odd_even(self,age):",
        "context": "            int(parts[2])\n        except ValueError:\n            return False\n        return True\n    def odd_even(self,age):\n        if age >= 0:\n            if age == 0:\n                return \"even\"\n            elif age == 1:\n                return \"odd\"",
        "pattern": ".//FunctionDef[count(.//If | .//For | .//While | .//And | .//Or) > 10]",
        "check_id": "F027",
        "check_name": "high-cyclomatic-complexity"
      },
      {
        "lineno": 321,
        "coloffset": 4,
        "linematch": "def odd_even(self,age):",
        "context": "            int(parts[2])\n        except ValueError:\n            return False\n        return True\n    def odd_even(self,age):\n        if age >= 0:\n            if age == 0:\n                return \"even\"\n            elif age == 1:\n                return \"odd\"",
        "pattern": ".//FunctionDef[count(.//If | .//For | .//While | .//Try) > 3]",
        "check_id": "F030",
        "check_name": "deeply-nested-control-structures"
      },
      {
        "lineno": 321,
        "coloffset": 4,
        "linematch": "def odd_even(self,age):",
        "context": "            int(parts[2])\n        except ValueError:\n            return False\n        return True\n    def odd_even(self,age):\n        if age >= 0:\n            if age == 0:\n                return \"even\"\n            elif age == 1:\n                return \"odd\"",
        "pattern": ".//FunctionDef[count(.//If | .//For | .//While | .//Try) > 3]",
        "check_id": "P005",
        "check_name": "long-scope-chaining"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #199",
        "line": 322,
        "description": [
          "        if age >= 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -319,7 +319,7 @@\n             return False\n         return True\n     def odd_even(self,age):\n-        if age >= 0:\n+        if age > 0:\n             if age == 0:\n                 return \"even\"\n             elif age == 1:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #200",
        "line": 322,
        "description": [
          "        if age >= 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -319,7 +319,7 @@\n             return False\n         return True\n     def odd_even(self,age):\n-        if age >= 0:\n+        if age >= 1:\n             if age == 0:\n                 return \"even\"\n             elif age == 1:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #201",
        "line": 323,
        "description": [
          "            if age == 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -320,7 +320,7 @@\n         return True\n     def odd_even(self,age):\n         if age >= 0:\n-            if age == 0:\n+            if age != 0:\n                 return \"even\"\n             elif age == 1:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #202",
        "line": 323,
        "description": [
          "            if age == 0:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -320,7 +320,7 @@\n         return True\n     def odd_even(self,age):\n         if age >= 0:\n-            if age == 0:\n+            if age == 1:\n                 return \"even\"\n             elif age == 1:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #203",
        "line": 324,
        "description": [
          "                return \"even\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -321,7 +321,7 @@\n     def odd_even(self,age):\n         if age >= 0:\n             if age == 0:\n-                return \"even\"\n+                return \"XXevenXX\"\n             elif age == 1:\n                 return \"odd\"\n             elif age == 2:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #204",
        "line": 325,
        "description": [
          "            elif age == 1:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -322,7 +322,7 @@\n         if age >= 0:\n             if age == 0:\n                 return \"even\"\n-            elif age == 1:\n+            elif age != 1:\n                 return \"odd\"\n             elif age == 2:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #205",
        "line": 325,
        "description": [
          "            elif age == 1:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -322,7 +322,7 @@\n         if age >= 0:\n             if age == 0:\n                 return \"even\"\n-            elif age == 1:\n+            elif age == 2:\n                 return \"odd\"\n             elif age == 2:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #206",
        "line": 326,
        "description": [
          "                return \"odd\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -323,7 +323,7 @@\n             if age == 0:\n                 return \"even\"\n             elif age == 1:\n-                return \"odd\"\n+                return \"XXoddXX\"\n             elif age == 2:\n                 return \"even\"\n             elif age == 3:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #207",
        "line": 327,
        "description": [
          "            elif age == 2:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -324,7 +324,7 @@\n                 return \"even\"\n             elif age == 1:\n                 return \"odd\"\n-            elif age == 2:\n+            elif age != 2:\n                 return \"even\"\n             elif age == 3:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #208",
        "line": 327,
        "description": [
          "            elif age == 2:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -324,7 +324,7 @@\n                 return \"even\"\n             elif age == 1:\n                 return \"odd\"\n-            elif age == 2:\n+            elif age == 3:\n                 return \"even\"\n             elif age == 3:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #209",
        "line": 328,
        "description": [
          "                return \"even\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -325,7 +325,7 @@\n             elif age == 1:\n                 return \"odd\"\n             elif age == 2:\n-                return \"even\"\n+                return \"XXevenXX\"\n             elif age == 3:\n                 return \"odd\"\n             elif age == 4:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #210",
        "line": 329,
        "description": [
          "            elif age == 3:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -326,7 +326,7 @@\n                 return \"odd\"\n             elif age == 2:\n                 return \"even\"\n-            elif age == 3:\n+            elif age != 3:\n                 return \"odd\"\n             elif age == 4:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #211",
        "line": 329,
        "description": [
          "            elif age == 3:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -326,7 +326,7 @@\n                 return \"odd\"\n             elif age == 2:\n                 return \"even\"\n-            elif age == 3:\n+            elif age == 4:\n                 return \"odd\"\n             elif age == 4:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #212",
        "line": 330,
        "description": [
          "                return \"odd\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -327,7 +327,7 @@\n             elif age == 2:\n                 return \"even\"\n             elif age == 3:\n-                return \"odd\"\n+                return \"XXoddXX\"\n             elif age == 4:\n                 return \"even\"\n             elif age == 5:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #213",
        "line": 331,
        "description": [
          "            elif age == 4:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -328,7 +328,7 @@\n                 return \"even\"\n             elif age == 3:\n                 return \"odd\"\n-            elif age == 4:\n+            elif age != 4:\n                 return \"even\"\n             elif age == 5:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #214",
        "line": 331,
        "description": [
          "            elif age == 4:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -328,7 +328,7 @@\n                 return \"even\"\n             elif age == 3:\n                 return \"odd\"\n-            elif age == 4:\n+            elif age == 5:\n                 return \"even\"\n             elif age == 5:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #215",
        "line": 332,
        "description": [
          "                return \"even\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -329,7 +329,7 @@\n             elif age == 3:\n                 return \"odd\"\n             elif age == 4:\n-                return \"even\"\n+                return \"XXevenXX\"\n             elif age == 5:\n                 return \"odd\"\n             elif age == 6:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #216",
        "line": 333,
        "description": [
          "            elif age == 5:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -330,7 +330,7 @@\n                 return \"odd\"\n             elif age == 4:\n                 return \"even\"\n-            elif age == 5:\n+            elif age != 5:\n                 return \"odd\"\n             elif age == 6:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #217",
        "line": 333,
        "description": [
          "            elif age == 5:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -330,7 +330,7 @@\n                 return \"odd\"\n             elif age == 4:\n                 return \"even\"\n-            elif age == 5:\n+            elif age == 6:\n                 return \"odd\"\n             elif age == 6:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #218",
        "line": 334,
        "description": [
          "                return \"odd\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -331,7 +331,7 @@\n             elif age == 4:\n                 return \"even\"\n             elif age == 5:\n-                return \"odd\"\n+                return \"XXoddXX\"\n             elif age == 6:\n                 return \"even\"\n             elif age == 7:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #219",
        "line": 335,
        "description": [
          "            elif age == 6:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -332,7 +332,7 @@\n                 return \"even\"\n             elif age == 5:\n                 return \"odd\"\n-            elif age == 6:\n+            elif age != 6:\n                 return \"even\"\n             elif age == 7:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #220",
        "line": 335,
        "description": [
          "            elif age == 6:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -332,7 +332,7 @@\n                 return \"even\"\n             elif age == 5:\n                 return \"odd\"\n-            elif age == 6:\n+            elif age == 7:\n                 return \"even\"\n             elif age == 7:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #221",
        "line": 336,
        "description": [
          "                return \"even\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -333,7 +333,7 @@\n             elif age == 5:\n                 return \"odd\"\n             elif age == 6:\n-                return \"even\"\n+                return \"XXevenXX\"\n             elif age == 7:\n                 return \"odd\"\n             elif age == 8:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #222",
        "line": 337,
        "description": [
          "            elif age == 7:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -334,7 +334,7 @@\n                 return \"odd\"\n             elif age == 6:\n                 return \"even\"\n-            elif age == 7:\n+            elif age != 7:\n                 return \"odd\"\n             elif age == 8:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #223",
        "line": 337,
        "description": [
          "            elif age == 7:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -334,7 +334,7 @@\n                 return \"odd\"\n             elif age == 6:\n                 return \"even\"\n-            elif age == 7:\n+            elif age == 8:\n                 return \"odd\"\n             elif age == 8:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #224",
        "line": 338,
        "description": [
          "                return \"odd\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -335,7 +335,7 @@\n             elif age == 6:\n                 return \"even\"\n             elif age == 7:\n-                return \"odd\"\n+                return \"XXoddXX\"\n             elif age == 8:\n                 return \"even\"\n             elif age == 9:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #225",
        "line": 339,
        "description": [
          "            elif age == 8:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -336,7 +336,7 @@\n                 return \"even\"\n             elif age == 7:\n                 return \"odd\"\n-            elif age == 8:\n+            elif age != 8:\n                 return \"even\"\n             elif age == 9:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #226",
        "line": 339,
        "description": [
          "            elif age == 8:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -336,7 +336,7 @@\n                 return \"even\"\n             elif age == 7:\n                 return \"odd\"\n-            elif age == 8:\n+            elif age == 9:\n                 return \"even\"\n             elif age == 9:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #227",
        "line": 340,
        "description": [
          "                return \"even\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -337,7 +337,7 @@\n             elif age == 7:\n                 return \"odd\"\n             elif age == 8:\n-                return \"even\"\n+                return \"XXevenXX\"\n             elif age == 9:\n                 return \"odd\"\n             elif age == 10:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #228",
        "line": 341,
        "description": [
          "            elif age == 9:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -338,7 +338,7 @@\n                 return \"odd\"\n             elif age == 8:\n                 return \"even\"\n-            elif age == 9:\n+            elif age != 9:\n                 return \"odd\"\n             elif age == 10:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #229",
        "line": 341,
        "description": [
          "            elif age == 9:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -338,7 +338,7 @@\n                 return \"odd\"\n             elif age == 8:\n                 return \"even\"\n-            elif age == 9:\n+            elif age == 10:\n                 return \"odd\"\n             elif age == 10:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #230",
        "line": 342,
        "description": [
          "                return \"odd\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -339,7 +339,7 @@\n             elif age == 8:\n                 return \"even\"\n             elif age == 9:\n-                return \"odd\"\n+                return \"XXoddXX\"\n             elif age == 10:\n                 return \"even\"\n             elif age == 11:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #231",
        "line": 343,
        "description": [
          "            elif age == 10:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -340,7 +340,7 @@\n                 return \"even\"\n             elif age == 9:\n                 return \"odd\"\n-            elif age == 10:\n+            elif age != 10:\n                 return \"even\"\n             elif age == 11:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #232",
        "line": 343,
        "description": [
          "            elif age == 10:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -340,7 +340,7 @@\n                 return \"even\"\n             elif age == 9:\n                 return \"odd\"\n-            elif age == 10:\n+            elif age == 11:\n                 return \"even\"\n             elif age == 11:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #233",
        "line": 344,
        "description": [
          "                return \"even\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -341,7 +341,7 @@\n             elif age == 9:\n                 return \"odd\"\n             elif age == 10:\n-                return \"even\"\n+                return \"XXevenXX\"\n             elif age == 11:\n                 return \"odd\"\n             elif age == 12:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #234",
        "line": 345,
        "description": [
          "            elif age == 11:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -342,7 +342,7 @@\n                 return \"odd\"\n             elif age == 10:\n                 return \"even\"\n-            elif age == 11:\n+            elif age != 11:\n                 return \"odd\"\n             elif age == 12:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #235",
        "line": 345,
        "description": [
          "            elif age == 11:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -342,7 +342,7 @@\n                 return \"odd\"\n             elif age == 10:\n                 return \"even\"\n-            elif age == 11:\n+            elif age == 12:\n                 return \"odd\"\n             elif age == 12:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #236",
        "line": 346,
        "description": [
          "                return \"odd\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -343,7 +343,7 @@\n             elif age == 10:\n                 return \"even\"\n             elif age == 11:\n-                return \"odd\"\n+                return \"XXoddXX\"\n             elif age == 12:\n                 return \"even\"\n             elif age == 13:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #237",
        "line": 347,
        "description": [
          "            elif age == 12:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -344,7 +344,7 @@\n                 return \"even\"\n             elif age == 11:\n                 return \"odd\"\n-            elif age == 12:\n+            elif age != 12:\n                 return \"even\"\n             elif age == 13:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #238",
        "line": 347,
        "description": [
          "            elif age == 12:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -344,7 +344,7 @@\n                 return \"even\"\n             elif age == 11:\n                 return \"odd\"\n-            elif age == 12:\n+            elif age == 13:\n                 return \"even\"\n             elif age == 13:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #239",
        "line": 348,
        "description": [
          "                return \"even\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -345,7 +345,7 @@\n             elif age == 11:\n                 return \"odd\"\n             elif age == 12:\n-                return \"even\"\n+                return \"XXevenXX\"\n             elif age == 13:\n                 return \"odd\"\n             elif age == 14:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #240",
        "line": 349,
        "description": [
          "            elif age == 13:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -346,7 +346,7 @@\n                 return \"odd\"\n             elif age == 12:\n                 return \"even\"\n-            elif age == 13:\n+            elif age != 13:\n                 return \"odd\"\n             elif age == 14:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #241",
        "line": 349,
        "description": [
          "            elif age == 13:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -346,7 +346,7 @@\n                 return \"odd\"\n             elif age == 12:\n                 return \"even\"\n-            elif age == 13:\n+            elif age == 14:\n                 return \"odd\"\n             elif age == 14:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #242",
        "line": 350,
        "description": [
          "                return \"odd\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -347,7 +347,7 @@\n             elif age == 12:\n                 return \"even\"\n             elif age == 13:\n-                return \"odd\"\n+                return \"XXoddXX\"\n             elif age == 14:\n                 return \"even\"\n             elif age == 15:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #243",
        "line": 351,
        "description": [
          "            elif age == 14:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -348,7 +348,7 @@\n                 return \"even\"\n             elif age == 13:\n                 return \"odd\"\n-            elif age == 14:\n+            elif age != 14:\n                 return \"even\"\n             elif age == 15:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #244",
        "line": 351,
        "description": [
          "            elif age == 14:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -348,7 +348,7 @@\n                 return \"even\"\n             elif age == 13:\n                 return \"odd\"\n-            elif age == 14:\n+            elif age == 15:\n                 return \"even\"\n             elif age == 15:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #245",
        "line": 352,
        "description": [
          "                return \"even\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -349,7 +349,7 @@\n             elif age == 13:\n                 return \"odd\"\n             elif age == 14:\n-                return \"even\"\n+                return \"XXevenXX\"\n             elif age == 15:\n                 return \"odd\"\n             elif age == 16:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #246",
        "line": 353,
        "description": [
          "            elif age == 15:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -350,7 +350,7 @@\n                 return \"odd\"\n             elif age == 14:\n                 return \"even\"\n-            elif age == 15:\n+            elif age != 15:\n                 return \"odd\"\n             elif age == 16:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #247",
        "line": 353,
        "description": [
          "            elif age == 15:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -350,7 +350,7 @@\n                 return \"odd\"\n             elif age == 14:\n                 return \"even\"\n-            elif age == 15:\n+            elif age == 16:\n                 return \"odd\"\n             elif age == 16:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #248",
        "line": 354,
        "description": [
          "                return \"odd\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -351,7 +351,7 @@\n             elif age == 14:\n                 return \"even\"\n             elif age == 15:\n-                return \"odd\"\n+                return \"XXoddXX\"\n             elif age == 16:\n                 return \"even\"\n             elif age == 17:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #249",
        "line": 355,
        "description": [
          "            elif age == 16:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -352,7 +352,7 @@\n                 return \"even\"\n             elif age == 15:\n                 return \"odd\"\n-            elif age == 16:\n+            elif age != 16:\n                 return \"even\"\n             elif age == 17:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #250",
        "line": 355,
        "description": [
          "            elif age == 16:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -352,7 +352,7 @@\n                 return \"even\"\n             elif age == 15:\n                 return \"odd\"\n-            elif age == 16:\n+            elif age == 17:\n                 return \"even\"\n             elif age == 17:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #251",
        "line": 356,
        "description": [
          "                return \"even\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -353,7 +353,7 @@\n             elif age == 15:\n                 return \"odd\"\n             elif age == 16:\n-                return \"even\"\n+                return \"XXevenXX\"\n             elif age == 17:\n                 return \"odd\"\n             elif age == 18:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #252",
        "line": 357,
        "description": [
          "            elif age == 17:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -354,7 +354,7 @@\n                 return \"odd\"\n             elif age == 16:\n                 return \"even\"\n-            elif age == 17:\n+            elif age != 17:\n                 return \"odd\"\n             elif age == 18:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #253",
        "line": 357,
        "description": [
          "            elif age == 17:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -354,7 +354,7 @@\n                 return \"odd\"\n             elif age == 16:\n                 return \"even\"\n-            elif age == 17:\n+            elif age == 18:\n                 return \"odd\"\n             elif age == 18:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #254",
        "line": 358,
        "description": [
          "                return \"odd\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -355,7 +355,7 @@\n             elif age == 16:\n                 return \"even\"\n             elif age == 17:\n-                return \"odd\"\n+                return \"XXoddXX\"\n             elif age == 18:\n                 return \"even\"\n             elif age == 19:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #255",
        "line": 359,
        "description": [
          "            elif age == 18:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -356,7 +356,7 @@\n                 return \"even\"\n             elif age == 17:\n                 return \"odd\"\n-            elif age == 18:\n+            elif age != 18:\n                 return \"even\"\n             elif age == 19:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #256",
        "line": 359,
        "description": [
          "            elif age == 18:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -356,7 +356,7 @@\n                 return \"even\"\n             elif age == 17:\n                 return \"odd\"\n-            elif age == 18:\n+            elif age == 19:\n                 return \"even\"\n             elif age == 19:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #257",
        "line": 360,
        "description": [
          "                return \"even\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -357,7 +357,7 @@\n             elif age == 17:\n                 return \"odd\"\n             elif age == 18:\n-                return \"even\"\n+                return \"XXevenXX\"\n             elif age == 19:\n                 return \"odd\"\n             elif age == 20:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #258",
        "line": 361,
        "description": [
          "            elif age == 19:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -358,7 +358,7 @@\n                 return \"odd\"\n             elif age == 18:\n                 return \"even\"\n-            elif age == 19:\n+            elif age != 19:\n                 return \"odd\"\n             elif age == 20:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #259",
        "line": 361,
        "description": [
          "            elif age == 19:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -358,7 +358,7 @@\n                 return \"odd\"\n             elif age == 18:\n                 return \"even\"\n-            elif age == 19:\n+            elif age == 20:\n                 return \"odd\"\n             elif age == 20:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #260",
        "line": 362,
        "description": [
          "                return \"odd\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -359,7 +359,7 @@\n             elif age == 18:\n                 return \"even\"\n             elif age == 19:\n-                return \"odd\"\n+                return \"XXoddXX\"\n             elif age == 20:\n                 return \"even\"\n             elif age == 21:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #261",
        "line": 363,
        "description": [
          "            elif age == 20:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -360,7 +360,7 @@\n                 return \"even\"\n             elif age == 19:\n                 return \"odd\"\n-            elif age == 20:\n+            elif age != 20:\n                 return \"even\"\n             elif age == 21:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #262",
        "line": 363,
        "description": [
          "            elif age == 20:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -360,7 +360,7 @@\n                 return \"even\"\n             elif age == 19:\n                 return \"odd\"\n-            elif age == 20:\n+            elif age == 21:\n                 return \"even\"\n             elif age == 21:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #263",
        "line": 364,
        "description": [
          "                return \"even\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -361,7 +361,7 @@\n             elif age == 19:\n                 return \"odd\"\n             elif age == 20:\n-                return \"even\"\n+                return \"XXevenXX\"\n             elif age == 21:\n                 return \"odd\"\n             elif age == 22:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #264",
        "line": 365,
        "description": [
          "            elif age == 21:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -362,7 +362,7 @@\n                 return \"odd\"\n             elif age == 20:\n                 return \"even\"\n-            elif age == 21:\n+            elif age != 21:\n                 return \"odd\"\n             elif age == 22:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #265",
        "line": 365,
        "description": [
          "            elif age == 21:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -362,7 +362,7 @@\n                 return \"odd\"\n             elif age == 20:\n                 return \"even\"\n-            elif age == 21:\n+            elif age == 22:\n                 return \"odd\"\n             elif age == 22:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #266",
        "line": 366,
        "description": [
          "                return \"odd\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -363,7 +363,7 @@\n             elif age == 20:\n                 return \"even\"\n             elif age == 21:\n-                return \"odd\"\n+                return \"XXoddXX\"\n             elif age == 22:\n                 return \"even\"\n             elif age == 23:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #267",
        "line": 367,
        "description": [
          "            elif age == 22:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -364,7 +364,7 @@\n                 return \"even\"\n             elif age == 21:\n                 return \"odd\"\n-            elif age == 22:\n+            elif age != 22:\n                 return \"even\"\n             elif age == 23:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #268",
        "line": 367,
        "description": [
          "            elif age == 22:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -364,7 +364,7 @@\n                 return \"even\"\n             elif age == 21:\n                 return \"odd\"\n-            elif age == 22:\n+            elif age == 23:\n                 return \"even\"\n             elif age == 23:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #269",
        "line": 368,
        "description": [
          "                return \"even\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -365,7 +365,7 @@\n             elif age == 21:\n                 return \"odd\"\n             elif age == 22:\n-                return \"even\"\n+                return \"XXevenXX\"\n             elif age == 23:\n                 return \"odd\"\n             elif age == 24:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #270",
        "line": 369,
        "description": [
          "            elif age == 23:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -366,7 +366,7 @@\n                 return \"odd\"\n             elif age == 22:\n                 return \"even\"\n-            elif age == 23:\n+            elif age != 23:\n                 return \"odd\"\n             elif age == 24:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #271",
        "line": 369,
        "description": [
          "            elif age == 23:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -366,7 +366,7 @@\n                 return \"odd\"\n             elif age == 22:\n                 return \"even\"\n-            elif age == 23:\n+            elif age == 24:\n                 return \"odd\"\n             elif age == 24:\n                 return \"even\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #272",
        "line": 370,
        "description": [
          "                return \"odd\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -367,7 +367,7 @@\n             elif age == 22:\n                 return \"even\"\n             elif age == 23:\n-                return \"odd\"\n+                return \"XXoddXX\"\n             elif age == 24:\n                 return \"even\"\n             elif age == 25:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #273",
        "line": 371,
        "description": [
          "            elif age == 24:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -368,7 +368,7 @@\n                 return \"even\"\n             elif age == 23:\n                 return \"odd\"\n-            elif age == 24:\n+            elif age != 24:\n                 return \"even\"\n             elif age == 25:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #274",
        "line": 371,
        "description": [
          "            elif age == 24:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -368,7 +368,7 @@\n                 return \"even\"\n             elif age == 23:\n                 return \"odd\"\n-            elif age == 24:\n+            elif age == 25:\n                 return \"even\"\n             elif age == 25:\n                 return \"odd\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #275",
        "line": 372,
        "description": [
          "                return \"even\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -369,7 +369,7 @@\n             elif age == 23:\n                 return \"odd\"\n             elif age == 24:\n-                return \"even\"\n+                return \"XXevenXX\"\n             elif age == 25:\n                 return \"odd\"\n         else:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #276",
        "line": 373,
        "description": [
          "            elif age == 25:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -370,7 +370,7 @@\n                 return \"odd\"\n             elif age == 24:\n                 return \"even\"\n-            elif age == 25:\n+            elif age != 25:\n                 return \"odd\"\n         else:\n             return \"Invalid age\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #277",
        "line": 373,
        "description": [
          "            elif age == 25:"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -370,7 +370,7 @@\n                 return \"odd\"\n             elif age == 24:\n                 return \"even\"\n-            elif age == 25:\n+            elif age == 26:\n                 return \"odd\"\n         else:\n             return \"Invalid age\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #278",
        "line": 374,
        "description": [
          "                return \"odd\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -371,7 +371,7 @@\n             elif age == 24:\n                 return \"even\"\n             elif age == 25:\n-                return \"odd\"\n+                return \"XXoddXX\"\n         else:\n             return \"Invalid age\"\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #279",
        "line": 376,
        "description": [
          "            return \"Invalid age\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -373,7 +373,7 @@\n             elif age == 25:\n                 return \"odd\"\n         else:\n-            return \"Invalid age\"\n+            return \"XXInvalid ageXX\"\n \n \n global_var = 0  # This is a global variable (avoid in practice)\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "test_version",
    "function_scope": "7-9",
    "patterns": [
      {
        "lineno": 9,
        "coloffset": 11,
        "linematch": "assert __version__ == \"0.1.0\"",
        "context": "\n\ndef test_version():\n    \"\"\"Confirm that the version of the program is correct.\"\"\"\n    assert __version__ == \"0.1.0\"",
        "pattern": ".//FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq",
        "check_id": "BOOL001",
        "check_name": "boolean-comparison"
      },
      {
        "lineno": 7,
        "coloffset": 0,
        "linematch": "def test_version():",
        "context": "from src import __version__\nfrom src import main\n\n\ndef test_version():\n    \"\"\"Confirm that the version of the program is correct.\"\"\"\n    assert __version__ == \"0.1.0\"",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 9,
        "coloffset": 4,
        "linematch": "assert __version__ == \"0.1.0\"",
        "context": "\n\ndef test_version():\n    \"\"\"Confirm that the version of the program is correct.\"\"\"\n    assert __version__ == \"0.1.0\"",
        "pattern": ".//FunctionDef/body/Assert",
        "check_id": "NOA001",
        "check_name": "number-of-assertions"
      },
      {
        "lineno": 8,
        "coloffset": 4,
        "linematch": "\"\"\"Confirm that the version of the program is correct.\"\"\"",
        "context": "from src import main\n\n\ndef test_version():\n    \"\"\"Confirm that the version of the program is correct.\"\"\"\n    assert __version__ == \"0.1.0\"",
        "pattern": ".//FunctionDef[starts-with(@name, \"test_\")]/body/*",
        "check_id": "LOF001",
        "check_name": "count-test-method-lines"
      },
      {
        "lineno": 9,
        "coloffset": 4,
        "linematch": "assert __version__ == \"0.1.0\"",
        "context": "\n\ndef test_version():\n    \"\"\"Confirm that the version of the program is correct.\"\"\"\n    assert __version__ == \"0.1.0\"",
        "pattern": ".//FunctionDef[starts-with(@name, \"test_\")]/body/*",
        "check_id": "LOF001",
        "check_name": "count-test-method-lines"
      },
      {
        "lineno": 8,
        "coloffset": 4,
        "linematch": "\"\"\"Confirm that the version of the program is correct.\"\"\"",
        "context": "from src import main\n\n\ndef test_version():\n    \"\"\"Confirm that the version of the program is correct.\"\"\"\n    assert __version__ == \"0.1.0\"",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 9,
        "coloffset": 4,
        "linematch": "assert __version__ == \"0.1.0\"",
        "context": "\n\ndef test_version():\n    \"\"\"Confirm that the version of the program is correct.\"\"\"\n    assert __version__ == \"0.1.0\"",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [],
    "mutation_score": null
  },
  {
    "function_name": "handle_file",
    "function_scope": "43-54",
    "patterns": [
      {
        "lineno": 43,
        "coloffset": 0,
        "linematch": "def handle_file(filename):",
        "context": "    \"\"\"\n    if value != None:\n        print(\"Value is not None\")\n\ndef handle_file(filename):\n    \"\"\"\n    This function attempts to read a file but does not handle specific exception\n\n    Contains Patterns:\n        - No Exception type (EXC)",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 43,
        "coloffset": 0,
        "linematch": "def handle_file(filename):",
        "context": "    \"\"\"\n    if value != None:\n        print(\"Value is not None\")\n\ndef handle_file(filename):\n    \"\"\"\n    This function attempts to read a file but does not handle specific exception\n\n    Contains Patterns:\n        - No Exception type (EXC)",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 44,
        "coloffset": 4,
        "linematch": "\"\"\"",
        "context": "    if value != None:\n        print(\"Value is not None\")\n\ndef handle_file(filename):\n    \"\"\"\n    This function attempts to read a file but does not handle specific exception\n\n    Contains Patterns:\n        - No Exception type (EXC)\n    \"\"\"",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 50,
        "coloffset": 4,
        "linematch": "try:",
        "context": "\n    Contains Patterns:\n        - No Exception type (EXC)\n    \"\"\"\n    try:\n        with open(filename) as f:\n            data = f.read()\n    except:\n        print(\"Error reading file\")\n",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #21",
        "line": 52,
        "description": [
          "            data = f.read()"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -49,7 +49,7 @@\n     \"\"\"\n     try:\n         with open(filename) as f:\n-            data = f.read()\n+            data = None\n     except:\n         print(\"Error reading file\")\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #22",
        "line": 54,
        "description": [
          "        print(\"Error reading file\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -51,7 +51,7 @@\n         with open(filename) as f:\n             data = f.read()\n     except:\n-        print(\"Error reading file\")\n+        print(\"XXError reading fileXX\")\n \n def is_valid(value):\n     \"\"\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "validate_data",
    "function_scope": "86-91",
    "patterns": [
      {
        "lineno": 86,
        "coloffset": 0,
        "linematch": "def validate_data(data):",
        "context": "\n# Multi-value key literal (MVKL)- outside function scope\nuser_data = {\"name\": \"Alice\", \"name\":\"Bob\"}\n\ndef validate_data(data):\n    \"\"\" Asserts on tuple.\n        Contains Patterns:\n        - Assertion (AT)\n    \"\"\"\n    assert isinstance(data,tuple), \"Data must be a tuple\"",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 86,
        "coloffset": 0,
        "linematch": "def validate_data(data):",
        "context": "\n# Multi-value key literal (MVKL)- outside function scope\nuser_data = {\"name\": \"Alice\", \"name\":\"Bob\"}\n\ndef validate_data(data):\n    \"\"\" Asserts on tuple.\n        Contains Patterns:\n        - Assertion (AT)\n    \"\"\"\n    assert isinstance(data,tuple), \"Data must be a tuple\"",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 91,
        "coloffset": 4,
        "linematch": "assert isinstance(data,tuple), \"Data must be a tuple\"",
        "context": "    \"\"\" Asserts on tuple.\n        Contains Patterns:\n        - Assertion (AT)\n    \"\"\"\n    assert isinstance(data,tuple), \"Data must be a tuple\"\n\ndef modify_list(data):\n    \"\"\"\n    This function modifies a list by overiding its elements.\n",
        "pattern": ".//FunctionDef/body/Assert",
        "check_id": "NOA001",
        "check_name": "number-of-assertions"
      },
      {
        "lineno": 87,
        "coloffset": 4,
        "linematch": "\"\"\" Asserts on tuple.",
        "context": "# Multi-value key literal (MVKL)- outside function scope\nuser_data = {\"name\": \"Alice\", \"name\":\"Bob\"}\n\ndef validate_data(data):\n    \"\"\" Asserts on tuple.\n        Contains Patterns:\n        - Assertion (AT)\n    \"\"\"\n    assert isinstance(data,tuple), \"Data must be a tuple\"\n",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 91,
        "coloffset": 4,
        "linematch": "assert isinstance(data,tuple), \"Data must be a tuple\"",
        "context": "    \"\"\" Asserts on tuple.\n        Contains Patterns:\n        - Assertion (AT)\n    \"\"\"\n    assert isinstance(data,tuple), \"Data must be a tuple\"\n\ndef modify_list(data):\n    \"\"\"\n    This function modifies a list by overiding its elements.\n",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #40",
        "line": 91,
        "description": [
          "    assert isinstance(data,tuple), \"Data must be a tuple\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -88,7 +88,7 @@\n         Contains Patterns:\n         - Assertion (AT)\n     \"\"\"\n-    assert isinstance(data,tuple), \"Data must be a tuple\"\n+    assert isinstance(data,tuple), \"XXData must be a tupleXX\"\n \n def modify_list(data):\n     \"\"\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "modify_list",
    "function_scope": "93-102",
    "patterns": [
      {
        "lineno": 93,
        "coloffset": 0,
        "linematch": "def modify_list(data):",
        "context": "        - Assertion (AT)\n    \"\"\"\n    assert isinstance(data,tuple), \"Data must be a tuple\"\n\ndef modify_list(data):\n    \"\"\"\n    This function modifies a list by overiding its elements.\n\n    Contains Patterns:\n    - Loop variable iterates and overrides iterator (LVITOI)",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 93,
        "coloffset": 0,
        "linematch": "def modify_list(data):",
        "context": "        - Assertion (AT)\n    \"\"\"\n    assert isinstance(data,tuple), \"Data must be a tuple\"\n\ndef modify_list(data):\n    \"\"\"\n    This function modifies a list by overiding its elements.\n\n    Contains Patterns:\n    - Loop variable iterates and overrides iterator (LVITOI)",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 94,
        "coloffset": 4,
        "linematch": "\"\"\"",
        "context": "    \"\"\"\n    assert isinstance(data,tuple), \"Data must be a tuple\"\n\ndef modify_list(data):\n    \"\"\"\n    This function modifies a list by overiding its elements.\n\n    Contains Patterns:\n    - Loop variable iterates and overrides iterator (LVITOI)\n    \"\"\"",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 100,
        "coloffset": 4,
        "linematch": "for item in data:",
        "context": "\n    Contains Patterns:\n    - Loop variable iterates and overrides iterator (LVITOI)\n    \"\"\"\n    for item in data:\n        item = \"Modified\"\n    return data\n\ndef calculate_sum(numbers):\n    \"\"\"",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 102,
        "coloffset": 4,
        "linematch": "return data",
        "context": "    - Loop variable iterates and overrides iterator (LVITOI)\n    \"\"\"\n    for item in data:\n        item = \"Modified\"\n    return data\n\ndef calculate_sum(numbers):\n    \"\"\"\n    This function calculate the sum of a integer list\n",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #41",
        "line": 101,
        "description": [
          "        item = \"Modified\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -98,7 +98,7 @@\n     - Loop variable iterates and overrides iterator (LVITOI)\n     \"\"\"\n     for item in data:\n-        item = \"Modified\"\n+        item = \"XXModifiedXX\"\n     return data\n \n def calculate_sum(numbers):\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #42",
        "line": 101,
        "description": [
          "        item = \"Modified\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -98,7 +98,7 @@\n     - Loop variable iterates and overrides iterator (LVITOI)\n     \"\"\"\n     for item in data:\n-        item = \"Modified\"\n+        item = None\n     return data\n \n def calculate_sum(numbers):\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "calculate_sum",
    "function_scope": "104-113",
    "patterns": [
      {
        "lineno": 104,
        "coloffset": 0,
        "linematch": "def calculate_sum(numbers):",
        "context": "    for item in data:\n        item = \"Modified\"\n    return data\n\ndef calculate_sum(numbers):\n    \"\"\"\n    This function calculate the sum of a integer list\n\n    Contains Patterns:\n        - Function using loop variable (FLV)\"\"\"",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 104,
        "coloffset": 0,
        "linematch": "def calculate_sum(numbers):",
        "context": "    for item in data:\n        item = \"Modified\"\n    return data\n\ndef calculate_sum(numbers):\n    \"\"\"\n    This function calculate the sum of a integer list\n\n    Contains Patterns:\n        - Function using loop variable (FLV)\"\"\"",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 105,
        "coloffset": 4,
        "linematch": "\"\"\"",
        "context": "        item = \"Modified\"\n    return data\n\ndef calculate_sum(numbers):\n    \"\"\"\n    This function calculate the sum of a integer list\n\n    Contains Patterns:\n        - Function using loop variable (FLV)\"\"\"\n    total = 0",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 110,
        "coloffset": 4,
        "linematch": "total = 0",
        "context": "    This function calculate the sum of a integer list\n\n    Contains Patterns:\n        - Function using loop variable (FLV)\"\"\"\n    total = 0\n    for num in numbers:\n        total += num\n    return total\n\ndef nested_function_1():",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 111,
        "coloffset": 4,
        "linematch": "for num in numbers:",
        "context": "\n    Contains Patterns:\n        - Function using loop variable (FLV)\"\"\"\n    total = 0\n    for num in numbers:\n        total += num\n    return total\n\ndef nested_function_1():\n    \"\"\" Function with nested depth (ND)\"\"\"",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 113,
        "coloffset": 4,
        "linematch": "return total",
        "context": "        - Function using loop variable (FLV)\"\"\"\n    total = 0\n    for num in numbers:\n        total += num\n    return total\n\ndef nested_function_1():\n    \"\"\" Function with nested depth (ND)\"\"\"\n    def nested_function_2():\n        def nested_function_3():",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #43",
        "line": 110,
        "description": [
          "    total = 0"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -107,7 +107,7 @@\n \n     Contains Patterns:\n         - Function using loop variable (FLV)\"\"\"\n-    total = 0\n+    total = 1\n     for num in numbers:\n         total += num\n     return total\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #44",
        "line": 110,
        "description": [
          "    total = 0"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -107,7 +107,7 @@\n \n     Contains Patterns:\n         - Function using loop variable (FLV)\"\"\"\n-    total = 0\n+    total = None\n     for num in numbers:\n         total += num\n     return total\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #45",
        "line": 112,
        "description": [
          "        total += num"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -109,7 +109,7 @@\n         - Function using loop variable (FLV)\"\"\"\n     total = 0\n     for num in numbers:\n-        total += num\n+        total = num\n     return total\n \n def nested_function_1():\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #46",
        "line": 112,
        "description": [
          "        total += num"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -109,7 +109,7 @@\n         - Function using loop variable (FLV)\"\"\"\n     total = 0\n     for num in numbers:\n-        total += num\n+        total -= num\n     return total\n \n def nested_function_1():\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "nested_function_1",
    "function_scope": "115-120",
    "patterns": [
      {
        "lineno": 115,
        "coloffset": 0,
        "linematch": "def nested_function_1():",
        "context": "    for num in numbers:\n        total += num\n    return total\n\ndef nested_function_1():\n    \"\"\" Function with nested depth (ND)\"\"\"\n    def nested_function_2():\n        def nested_function_3():\n            pass\n    nested_function_2()",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 117,
        "coloffset": 4,
        "linematch": "def nested_function_2():",
        "context": "    return total\n\ndef nested_function_1():\n    \"\"\" Function with nested depth (ND)\"\"\"\n    def nested_function_2():\n        def nested_function_3():\n            pass\n    nested_function_2()\n\ndef handle_request(method, data):",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 118,
        "coloffset": 8,
        "linematch": "def nested_function_3():",
        "context": "\ndef nested_function_1():\n    \"\"\" Function with nested depth (ND)\"\"\"\n    def nested_function_2():\n        def nested_function_3():\n            pass\n    nested_function_2()\n\ndef handle_request(method, data):\n    \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 115,
        "coloffset": 0,
        "linematch": "def nested_function_1():",
        "context": "    for num in numbers:\n        total += num\n    return total\n\ndef nested_function_1():\n    \"\"\" Function with nested depth (ND)\"\"\"\n    def nested_function_2():\n        def nested_function_3():\n            pass\n    nested_function_2()",
        "pattern": ".//FunctionDef//FunctionDef/ancestor::*",
        "check_id": "F001",
        "check_name": "nested-depth"
      },
      {
        "lineno": 117,
        "coloffset": 4,
        "linematch": "def nested_function_2():",
        "context": "    return total\n\ndef nested_function_1():\n    \"\"\" Function with nested depth (ND)\"\"\"\n    def nested_function_2():\n        def nested_function_3():\n            pass\n    nested_function_2()\n\ndef handle_request(method, data):",
        "pattern": ".//FunctionDef//FunctionDef/ancestor::*",
        "check_id": "F001",
        "check_name": "nested-depth"
      },
      {
        "lineno": 115,
        "coloffset": 0,
        "linematch": "def nested_function_1():",
        "context": "    for num in numbers:\n        total += num\n    return total\n\ndef nested_function_1():\n    \"\"\" Function with nested depth (ND)\"\"\"\n    def nested_function_2():\n        def nested_function_3():\n            pass\n    nested_function_2()",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 117,
        "coloffset": 4,
        "linematch": "def nested_function_2():",
        "context": "    return total\n\ndef nested_function_1():\n    \"\"\" Function with nested depth (ND)\"\"\"\n    def nested_function_2():\n        def nested_function_3():\n            pass\n    nested_function_2()\n\ndef handle_request(method, data):",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 118,
        "coloffset": 8,
        "linematch": "def nested_function_3():",
        "context": "\ndef nested_function_1():\n    \"\"\" Function with nested depth (ND)\"\"\"\n    def nested_function_2():\n        def nested_function_3():\n            pass\n    nested_function_2()\n\ndef handle_request(method, data):\n    \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 116,
        "coloffset": 4,
        "linematch": "\"\"\" Function with nested depth (ND)\"\"\"",
        "context": "        total += num\n    return total\n\ndef nested_function_1():\n    \"\"\" Function with nested depth (ND)\"\"\"\n    def nested_function_2():\n        def nested_function_3():\n            pass\n    nested_function_2()\n",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 117,
        "coloffset": 4,
        "linematch": "def nested_function_2():",
        "context": "    return total\n\ndef nested_function_1():\n    \"\"\" Function with nested depth (ND)\"\"\"\n    def nested_function_2():\n        def nested_function_3():\n            pass\n    nested_function_2()\n\ndef handle_request(method, data):",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 118,
        "coloffset": 8,
        "linematch": "def nested_function_3():",
        "context": "\ndef nested_function_1():\n    \"\"\" Function with nested depth (ND)\"\"\"\n    def nested_function_2():\n        def nested_function_3():\n            pass\n    nested_function_2()\n\ndef handle_request(method, data):\n    \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 119,
        "coloffset": 12,
        "linematch": "pass",
        "context": "def nested_function_1():\n    \"\"\" Function with nested depth (ND)\"\"\"\n    def nested_function_2():\n        def nested_function_3():\n            pass\n    nested_function_2()\n\ndef handle_request(method, data):\n    \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n    if method == \"GET\":",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 120,
        "coloffset": 4,
        "linematch": "nested_function_2()",
        "context": "    \"\"\" Function with nested depth (ND)\"\"\"\n    def nested_function_2():\n        def nested_function_3():\n            pass\n    nested_function_2()\n\ndef handle_request(method, data):\n    \"\"\"Function with multiple conditions (COND) and count method lines (CML)\"\"\"\n    if method == \"GET\":\n        return \"Processing GET request\"",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [],
    "mutation_score": null
  },
  {
    "function_name": "validate_user_input",
    "function_scope": "175-183",
    "patterns": [
      {
        "lineno": 175,
        "coloffset": 0,
        "linematch": "def validate_user_input(name, email):",
        "context": "        for j in range(2, i + 1):  # Nested loop\n            factorial *= j\n    return factorial\n\ndef validate_user_input(name, email):\n    \"\"\"\n    This function validates user input for name and email. (Simple example)\n\n    Contains Pattern: Number of Assertions (NOA)\n    \"\"\"",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 175,
        "coloffset": 0,
        "linematch": "def validate_user_input(name, email):",
        "context": "        for j in range(2, i + 1):  # Nested loop\n            factorial *= j\n    return factorial\n\ndef validate_user_input(name, email):\n    \"\"\"\n    This function validates user input for name and email. (Simple example)\n\n    Contains Pattern: Number of Assertions (NOA)\n    \"\"\"",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 181,
        "coloffset": 4,
        "linematch": "assert name.isalpha(), \"Name must only contain letters\"",
        "context": "    This function validates user input for name and email. (Simple example)\n\n    Contains Pattern: Number of Assertions (NOA)\n    \"\"\"\n    assert name.isalpha(), \"Name must only contain letters\"\n    assert \"@\" in email, \"Email must contain an '@' symbol\"\n    return True\n\ndef write_to_file(filename, data):\n    \"\"\"",
        "pattern": ".//FunctionDef/body/Assert",
        "check_id": "NOA001",
        "check_name": "number-of-assertions"
      },
      {
        "lineno": 182,
        "coloffset": 4,
        "linematch": "assert \"@\" in email, \"Email must contain an '@' symbol\"",
        "context": "\n    Contains Pattern: Number of Assertions (NOA)\n    \"\"\"\n    assert name.isalpha(), \"Name must only contain letters\"\n    assert \"@\" in email, \"Email must contain an '@' symbol\"\n    return True\n\ndef write_to_file(filename, data):\n    \"\"\"\n    This function writes data to a file without using a context manager.",
        "pattern": ".//FunctionDef/body/Assert",
        "check_id": "NOA001",
        "check_name": "number-of-assertions"
      },
      {
        "lineno": 176,
        "coloffset": 4,
        "linematch": "\"\"\"",
        "context": "            factorial *= j\n    return factorial\n\ndef validate_user_input(name, email):\n    \"\"\"\n    This function validates user input for name and email. (Simple example)\n\n    Contains Pattern: Number of Assertions (NOA)\n    \"\"\"\n    assert name.isalpha(), \"Name must only contain letters\"",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 181,
        "coloffset": 4,
        "linematch": "assert name.isalpha(), \"Name must only contain letters\"",
        "context": "    This function validates user input for name and email. (Simple example)\n\n    Contains Pattern: Number of Assertions (NOA)\n    \"\"\"\n    assert name.isalpha(), \"Name must only contain letters\"\n    assert \"@\" in email, \"Email must contain an '@' symbol\"\n    return True\n\ndef write_to_file(filename, data):\n    \"\"\"",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 182,
        "coloffset": 4,
        "linematch": "assert \"@\" in email, \"Email must contain an '@' symbol\"",
        "context": "\n    Contains Pattern: Number of Assertions (NOA)\n    \"\"\"\n    assert name.isalpha(), \"Name must only contain letters\"\n    assert \"@\" in email, \"Email must contain an '@' symbol\"\n    return True\n\ndef write_to_file(filename, data):\n    \"\"\"\n    This function writes data to a file without using a context manager.",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 183,
        "coloffset": 4,
        "linematch": "return True",
        "context": "    Contains Pattern: Number of Assertions (NOA)\n    \"\"\"\n    assert name.isalpha(), \"Name must only contain letters\"\n    assert \"@\" in email, \"Email must contain an '@' symbol\"\n    return True\n\ndef write_to_file(filename, data):\n    \"\"\"\n    This function writes data to a file without using a context manager.\n",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #81",
        "line": 181,
        "description": [
          "    assert name.isalpha(), \"Name must only contain letters\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -178,7 +178,7 @@\n \n     Contains Pattern: Number of Assertions (NOA)\n     \"\"\"\n-    assert name.isalpha(), \"Name must only contain letters\"\n+    assert name.isalpha(), \"XXName must only contain lettersXX\"\n     assert \"@\" in email, \"Email must contain an '@' symbol\"\n     return True\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #82",
        "line": 182,
        "description": [
          "    assert \"@\" in email, \"Email must contain an '@' symbol\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -179,7 +179,7 @@\n     Contains Pattern: Number of Assertions (NOA)\n     \"\"\"\n     assert name.isalpha(), \"Name must only contain letters\"\n-    assert \"@\" in email, \"Email must contain an '@' symbol\"\n+    assert \"XX@XX\" in email, \"Email must contain an '@' symbol\"\n     return True\n \n def write_to_file(filename, data):\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #83",
        "line": 182,
        "description": [
          "    assert \"@\" in email, \"Email must contain an '@' symbol\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -179,7 +179,7 @@\n     Contains Pattern: Number of Assertions (NOA)\n     \"\"\"\n     assert name.isalpha(), \"Name must only contain letters\"\n-    assert \"@\" in email, \"Email must contain an '@' symbol\"\n+    assert \"@\" not in email, \"Email must contain an '@' symbol\"\n     return True\n \n def write_to_file(filename, data):\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #84",
        "line": 182,
        "description": [
          "    assert \"@\" in email, \"Email must contain an '@' symbol\""
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -179,7 +179,7 @@\n     Contains Pattern: Number of Assertions (NOA)\n     \"\"\"\n     assert name.isalpha(), \"Name must only contain letters\"\n-    assert \"@\" in email, \"Email must contain an '@' symbol\"\n+    assert \"@\" in email, \"XXEmail must contain an '@' symbolXX\"\n     return True\n \n def write_to_file(filename, data):\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #85",
        "line": 183,
        "description": [
          "    return True"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -180,7 +180,7 @@\n     \"\"\"\n     assert name.isalpha(), \"Name must only contain letters\"\n     assert \"@\" in email, \"Email must contain an '@' symbol\"\n-    return True\n+    return False\n \n def write_to_file(filename, data):\n     \"\"\"\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "write_to_file",
    "function_scope": "185-193",
    "patterns": [
      {
        "lineno": 185,
        "coloffset": 0,
        "linematch": "def write_to_file(filename, data):",
        "context": "    assert name.isalpha(), \"Name must only contain letters\"\n    assert \"@\" in email, \"Email must contain an '@' symbol\"\n    return True\n\ndef write_to_file(filename, data):\n    \"\"\"\n    This function writes data to a file without using a context manager.\n\n    Contains Pattern: Not Using Context Manager (DUCM)\n    \"\"\"",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 185,
        "coloffset": 0,
        "linematch": "def write_to_file(filename, data):",
        "context": "    assert name.isalpha(), \"Name must only contain letters\"\n    assert \"@\" in email, \"Email must contain an '@' symbol\"\n    return True\n\ndef write_to_file(filename, data):\n    \"\"\"\n    This function writes data to a file without using a context manager.\n\n    Contains Pattern: Not Using Context Manager (DUCM)\n    \"\"\"",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 186,
        "coloffset": 4,
        "linematch": "\"\"\"",
        "context": "    assert \"@\" in email, \"Email must contain an '@' symbol\"\n    return True\n\ndef write_to_file(filename, data):\n    \"\"\"\n    This function writes data to a file without using a context manager.\n\n    Contains Pattern: Not Using Context Manager (DUCM)\n    \"\"\"\n    f = open(filename, \"w\")",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 191,
        "coloffset": 4,
        "linematch": "f = open(filename, \"w\")",
        "context": "    This function writes data to a file without using a context manager.\n\n    Contains Pattern: Not Using Context Manager (DUCM)\n    \"\"\"\n    f = open(filename, \"w\")\n    f.write(data)\n    f.close()\n\ndef calculate_grade(score):\n    \"\"\"",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 192,
        "coloffset": 4,
        "linematch": "f.write(data)",
        "context": "\n    Contains Pattern: Not Using Context Manager (DUCM)\n    \"\"\"\n    f = open(filename, \"w\")\n    f.write(data)\n    f.close()\n\ndef calculate_grade(score):\n    \"\"\"\n    This function calculates a letter grade based on a score. (Simple example)",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 193,
        "coloffset": 4,
        "linematch": "f.close()",
        "context": "    Contains Pattern: Not Using Context Manager (DUCM)\n    \"\"\"\n    f = open(filename, \"w\")\n    f.write(data)\n    f.close()\n\ndef calculate_grade(score):\n    \"\"\"\n    This function calculates a letter grade based on a score. (Simple example)\n",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #86",
        "line": 191,
        "description": [
          "    f = open(filename, \"w\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -188,7 +188,7 @@\n \n     Contains Pattern: Not Using Context Manager (DUCM)\n     \"\"\"\n-    f = open(filename, \"w\")\n+    f = open(filename, \"XXwXX\")\n     f.write(data)\n     f.close()\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #87",
        "line": 191,
        "description": [
          "    f = open(filename, \"w\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -188,7 +188,7 @@\n \n     Contains Pattern: Not Using Context Manager (DUCM)\n     \"\"\"\n-    f = open(filename, \"w\")\n+    f = None\n     f.write(data)\n     f.close()\n \n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "calculate_something",
    "function_scope": "381-390",
    "patterns": [
      {
        "lineno": 381,
        "coloffset": 0,
        "linematch": "def calculate_something(data):",
        "context": "\n\nglobal_var = 0  # This is a global variable (avoid in practice)\n\ndef calculate_something(data):\n    \"\"\"\n    This function demonstrates the use of a global variable.\n\n    Contains Pattern (and code smell):\n        - Use of Global Variables (UGV): Uses a global variable 'global_var'.",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 381,
        "coloffset": 0,
        "linematch": "def calculate_something(data):",
        "context": "\n\nglobal_var = 0  # This is a global variable (avoid in practice)\n\ndef calculate_something(data):\n    \"\"\"\n    This function demonstrates the use of a global variable.\n\n    Contains Pattern (and code smell):\n        - Use of Global Variables (UGV): Uses a global variable 'global_var'.",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 382,
        "coloffset": 4,
        "linematch": "\"\"\"",
        "context": "\nglobal_var = 0  # This is a global variable (avoid in practice)\n\ndef calculate_something(data):\n    \"\"\"\n    This function demonstrates the use of a global variable.\n\n    Contains Pattern (and code smell):\n        - Use of Global Variables (UGV): Uses a global variable 'global_var'.\n    \"\"\"",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 388,
        "coloffset": 4,
        "linematch": "result = data['field1'] * data['field2'] * 2",
        "context": "\n    Contains Pattern (and code smell):\n        - Use of Global Variables (UGV): Uses a global variable 'global_var'.\n    \"\"\"\n    result = data['field1'] * data['field2'] * 2\n    global_var += 1  # Modifying global variable\n    return result + global_var",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 389,
        "coloffset": 4,
        "linematch": "global_var += 1  # Modifying global variable",
        "context": "    Contains Pattern (and code smell):\n        - Use of Global Variables (UGV): Uses a global variable 'global_var'.\n    \"\"\"\n    result = data['field1'] * data['field2'] * 2\n    global_var += 1  # Modifying global variable\n    return result + global_var",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 390,
        "coloffset": 4,
        "linematch": "return result + global_var",
        "context": "        - Use of Global Variables (UGV): Uses a global variable 'global_var'.\n    \"\"\"\n    result = data['field1'] * data['field2'] * 2\n    global_var += 1  # Modifying global variable\n    return result + global_var",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #282",
        "line": 388,
        "description": [
          "    result = data['field1'] * data['field2'] * 2"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -385,6 +385,6 @@\n     Contains Pattern (and code smell):\n         - Use of Global Variables (UGV): Uses a global variable 'global_var'.\n     \"\"\"\n-    result = data['field1'] * data['field2'] * 2\n+    result = data['XXfield1XX'] * data['field2'] * 2\n     global_var += 1  # Modifying global variable\n     return result + global_var\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #283",
        "line": 388,
        "description": [
          "    result = data['field1'] * data['field2'] * 2"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -385,6 +385,6 @@\n     Contains Pattern (and code smell):\n         - Use of Global Variables (UGV): Uses a global variable 'global_var'.\n     \"\"\"\n-    result = data['field1'] * data['field2'] * 2\n+    result = data['field1'] / data['field2'] * 2\n     global_var += 1  # Modifying global variable\n     return result + global_var\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #284",
        "line": 388,
        "description": [
          "    result = data['field1'] * data['field2'] * 2"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -385,6 +385,6 @@\n     Contains Pattern (and code smell):\n         - Use of Global Variables (UGV): Uses a global variable 'global_var'.\n     \"\"\"\n-    result = data['field1'] * data['field2'] * 2\n+    result = data['field1'] * data['XXfield2XX'] * 2\n     global_var += 1  # Modifying global variable\n     return result + global_var\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #285",
        "line": 388,
        "description": [
          "    result = data['field1'] * data['field2'] * 2"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -385,6 +385,6 @@\n     Contains Pattern (and code smell):\n         - Use of Global Variables (UGV): Uses a global variable 'global_var'.\n     \"\"\"\n-    result = data['field1'] * data['field2'] * 2\n+    result = data['field1'] * data['field2'] / 2\n     global_var += 1  # Modifying global variable\n     return result + global_var\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #286",
        "line": 388,
        "description": [
          "    result = data['field1'] * data['field2'] * 2"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -385,6 +385,6 @@\n     Contains Pattern (and code smell):\n         - Use of Global Variables (UGV): Uses a global variable 'global_var'.\n     \"\"\"\n-    result = data['field1'] * data['field2'] * 2\n+    result = data['field1'] * data['field2'] * 3\n     global_var += 1  # Modifying global variable\n     return result + global_var\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #287",
        "line": 388,
        "description": [
          "    result = data['field1'] * data['field2'] * 2"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -385,6 +385,6 @@\n     Contains Pattern (and code smell):\n         - Use of Global Variables (UGV): Uses a global variable 'global_var'.\n     \"\"\"\n-    result = data['field1'] * data['field2'] * 2\n+    result = None\n     global_var += 1  # Modifying global variable\n     return result + global_var\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #288",
        "line": 389,
        "description": [
          "    global_var += 1  # Modifying global variable"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -386,5 +386,5 @@\n         - Use of Global Variables (UGV): Uses a global variable 'global_var'.\n     \"\"\"\n     result = data['field1'] * data['field2'] * 2\n-    global_var += 1  # Modifying global variable\n+    global_var = 1  # Modifying global variable\n     return result + global_var\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #289",
        "line": 389,
        "description": [
          "    global_var += 1  # Modifying global variable"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -386,5 +386,5 @@\n         - Use of Global Variables (UGV): Uses a global variable 'global_var'.\n     \"\"\"\n     result = data['field1'] * data['field2'] * 2\n-    global_var += 1  # Modifying global variable\n+    global_var -= 1  # Modifying global variable\n     return result + global_var\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #290",
        "line": 389,
        "description": [
          "    global_var += 1  # Modifying global variable"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -386,5 +386,5 @@\n         - Use of Global Variables (UGV): Uses a global variable 'global_var'.\n     \"\"\"\n     result = data['field1'] * data['field2'] * 2\n-    global_var += 1  # Modifying global variable\n+    global_var += 2  # Modifying global variable\n     return result + global_var\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #291",
        "line": 390,
        "description": [
          "    return result + global_var"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -387,4 +387,4 @@\n     \"\"\"\n     result = data['field1'] * data['field2'] * 2\n     global_var += 1  # Modifying global variable\n-    return result + global_var\n+    return result - global_var\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "__init__",
    "function_scope": "272-277",
    "patterns": [
      {
        "lineno": 272,
        "coloffset": 4,
        "linematch": "def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):",
        "context": "        - Include empty catch block (ECB)\n        - Long Scope Chaining (LSC)\n        - Number of Conditions in Function (COND)\n    \"\"\"\n    def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):\n        self.name = name\n        self.age = age\n        self.ssn = ssn\n        self.email = email\n        self.address = address",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 272,
        "coloffset": 4,
        "linematch": "def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):",
        "context": "        - Include empty catch block (ECB)\n        - Long Scope Chaining (LSC)\n        - Number of Conditions in Function (COND)\n    \"\"\"\n    def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):\n        self.name = name\n        self.age = age\n        self.ssn = ssn\n        self.email = email\n        self.address = address",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 273,
        "coloffset": 8,
        "linematch": "self.name = name",
        "context": "        - Long Scope Chaining (LSC)\n        - Number of Conditions in Function (COND)\n    \"\"\"\n    def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):\n        self.name = name\n        self.age = age\n        self.ssn = ssn\n        self.email = email\n        self.address = address\n    def setName(self, name):",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 274,
        "coloffset": 8,
        "linematch": "self.age = age",
        "context": "        - Number of Conditions in Function (COND)\n    \"\"\"\n    def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):\n        self.name = name\n        self.age = age\n        self.ssn = ssn\n        self.email = email\n        self.address = address\n    def setName(self, name):\n        if not name:",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 275,
        "coloffset": 8,
        "linematch": "self.ssn = ssn",
        "context": "    \"\"\"\n    def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):\n        self.name = name\n        self.age = age\n        self.ssn = ssn\n        self.email = email\n        self.address = address\n    def setName(self, name):\n        if not name:\n            raise ValueError(\"Name cannot be empty\")",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 276,
        "coloffset": 8,
        "linematch": "self.email = email",
        "context": "    def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):\n        self.name = name\n        self.age = age\n        self.ssn = ssn\n        self.email = email\n        self.address = address\n    def setName(self, name):\n        if not name:\n            raise ValueError(\"Name cannot be empty\")\n        # Simulate unnecessary validation logic (for LM)",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 277,
        "coloffset": 8,
        "linematch": "self.address = address",
        "context": "        self.name = name\n        self.age = age\n        self.ssn = ssn\n        self.email = email\n        self.address = address\n    def setName(self, name):\n        if not name:\n            raise ValueError(\"Name cannot be empty\")\n        # Simulate unnecessary validation logic (for LM)\n        for char in name:",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #155",
        "line": 272,
        "description": [
          "    def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -269,7 +269,7 @@\n         - Long Scope Chaining (LSC)\n         - Number of Conditions in Function (COND)\n     \"\"\"\n-    def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):\n+    def __init__(self, name=\"XXXX\", age= 0, ssn=None, email=\"\", address = \"\"):\n         self.name = name\n         self.age = age\n         self.ssn = ssn\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #156",
        "line": 272,
        "description": [
          "    def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -269,7 +269,7 @@\n         - Long Scope Chaining (LSC)\n         - Number of Conditions in Function (COND)\n     \"\"\"\n-    def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):\n+    def __init__(self, name=\"\", age= 1, ssn=None, email=\"\", address = \"\"):\n         self.name = name\n         self.age = age\n         self.ssn = ssn\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #157",
        "line": 272,
        "description": [
          "    def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -269,7 +269,7 @@\n         - Long Scope Chaining (LSC)\n         - Number of Conditions in Function (COND)\n     \"\"\"\n-    def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):\n+    def __init__(self, name=\"\", age= 0, ssn=None, email=\"XXXX\", address = \"\"):\n         self.name = name\n         self.age = age\n         self.ssn = ssn\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #158",
        "line": 272,
        "description": [
          "    def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -269,7 +269,7 @@\n         - Long Scope Chaining (LSC)\n         - Number of Conditions in Function (COND)\n     \"\"\"\n-    def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):\n+    def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"XXXX\"):\n         self.name = name\n         self.age = age\n         self.ssn = ssn\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #159",
        "line": 273,
        "description": [
          "        self.name = name"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -270,7 +270,7 @@\n         - Number of Conditions in Function (COND)\n     \"\"\"\n     def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):\n-        self.name = name\n+        self.name = None\n         self.age = age\n         self.ssn = ssn\n         self.email = email\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #160",
        "line": 274,
        "description": [
          "        self.age = age"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -271,7 +271,7 @@\n     \"\"\"\n     def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):\n         self.name = name\n-        self.age = age\n+        self.age = None\n         self.ssn = ssn\n         self.email = email\n         self.address = address\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #161",
        "line": 275,
        "description": [
          "        self.ssn = ssn"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -272,7 +272,7 @@\n     def __init__(self, name=\"\", age= 0, ssn=None, email=\"\", address = \"\"):\n         self.name = name\n         self.age = age\n-        self.ssn = ssn\n+        self.ssn = None\n         self.email = email\n         self.address = address\n     def setName(self, name):\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #162",
        "line": 276,
        "description": [
          "        self.email = email"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -273,7 +273,7 @@\n         self.name = name\n         self.age = age\n         self.ssn = ssn\n-        self.email = email\n+        self.email = None\n         self.address = address\n     def setName(self, name):\n         if not name:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #163",
        "line": 277,
        "description": [
          "        self.address = address"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -274,7 +274,7 @@\n         self.age = age\n         self.ssn = ssn\n         self.email = email\n-        self.address = address\n+        self.address = None\n     def setName(self, name):\n         if not name:\n             raise ValueError(\"Name cannot be empty\")\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "setSSN",
    "function_scope": "294-296",
    "patterns": [
      {
        "lineno": 294,
        "coloffset": 4,
        "linematch": "def setSSN(self, ssn):",
        "context": "        try:\n            self.age = int(age)  # Potential for type conversion errors\n        except ValueError:\n            pass  # Empty catch block (ECB)\n    def setSSN(self, ssn):\n        self.ssn = ssn\n        return self\n    def setEmail(self,email):\n        self.email = email\n        return self",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 294,
        "coloffset": 4,
        "linematch": "def setSSN(self, ssn):",
        "context": "        try:\n            self.age = int(age)  # Potential for type conversion errors\n        except ValueError:\n            pass  # Empty catch block (ECB)\n    def setSSN(self, ssn):\n        self.ssn = ssn\n        return self\n    def setEmail(self,email):\n        self.email = email\n        return self",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 295,
        "coloffset": 8,
        "linematch": "self.ssn = ssn",
        "context": "            self.age = int(age)  # Potential for type conversion errors\n        except ValueError:\n            pass  # Empty catch block (ECB)\n    def setSSN(self, ssn):\n        self.ssn = ssn\n        return self\n    def setEmail(self,email):\n        self.email = email\n        return self\n    def setAddress(self,address):",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 296,
        "coloffset": 8,
        "linematch": "return self",
        "context": "        except ValueError:\n            pass  # Empty catch block (ECB)\n    def setSSN(self, ssn):\n        self.ssn = ssn\n        return self\n    def setEmail(self,email):\n        self.email = email\n        return self\n    def setAddress(self,address):\n        self.address = address",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #175",
        "line": 295,
        "description": [
          "        self.ssn = ssn"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -292,7 +292,7 @@\n         except ValueError:\n             pass  # Empty catch block (ECB)\n     def setSSN(self, ssn):\n-        self.ssn = ssn\n+        self.ssn = None\n         return self\n     def setEmail(self,email):\n         self.email = email\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "setEmail",
    "function_scope": "297-299",
    "patterns": [
      {
        "lineno": 297,
        "coloffset": 4,
        "linematch": "def setEmail(self,email):",
        "context": "            pass  # Empty catch block (ECB)\n    def setSSN(self, ssn):\n        self.ssn = ssn\n        return self\n    def setEmail(self,email):\n        self.email = email\n        return self\n    def setAddress(self,address):\n        self.address = address\n        return self",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 297,
        "coloffset": 4,
        "linematch": "def setEmail(self,email):",
        "context": "            pass  # Empty catch block (ECB)\n    def setSSN(self, ssn):\n        self.ssn = ssn\n        return self\n    def setEmail(self,email):\n        self.email = email\n        return self\n    def setAddress(self,address):\n        self.address = address\n        return self",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 298,
        "coloffset": 8,
        "linematch": "self.email = email",
        "context": "    def setSSN(self, ssn):\n        self.ssn = ssn\n        return self\n    def setEmail(self,email):\n        self.email = email\n        return self\n    def setAddress(self,address):\n        self.address = address\n        return self\n    def create_person():",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 299,
        "coloffset": 8,
        "linematch": "return self",
        "context": "        self.ssn = ssn\n        return self\n    def setEmail(self,email):\n        self.email = email\n        return self\n    def setAddress(self,address):\n        self.address = address\n        return self\n    def create_person():\n        p = Person()",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #176",
        "line": 298,
        "description": [
          "        self.email = email"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -295,7 +295,7 @@\n         self.ssn = ssn\n         return self\n     def setEmail(self,email):\n-        self.email = email\n+        self.email = None\n         return self\n     def setAddress(self,address):\n         self.address = address\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "setAddress",
    "function_scope": "300-302",
    "patterns": [
      {
        "lineno": 300,
        "coloffset": 4,
        "linematch": "def setAddress(self,address):",
        "context": "        return self\n    def setEmail(self,email):\n        self.email = email\n        return self\n    def setAddress(self,address):\n        self.address = address\n        return self\n    def create_person():\n        p = Person()\n        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 300,
        "coloffset": 4,
        "linematch": "def setAddress(self,address):",
        "context": "        return self\n    def setEmail(self,email):\n        self.email = email\n        return self\n    def setAddress(self,address):\n        self.address = address\n        return self\n    def create_person():\n        p = Person()\n        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 301,
        "coloffset": 8,
        "linematch": "self.address = address",
        "context": "    def setEmail(self,email):\n        self.email = email\n        return self\n    def setAddress(self,address):\n        self.address = address\n        return self\n    def create_person():\n        p = Person()\n        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n    def validate_ssn(self):",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 302,
        "coloffset": 8,
        "linematch": "return self",
        "context": "        self.email = email\n        return self\n    def setAddress(self,address):\n        self.address = address\n        return self\n    def create_person():\n        p = Person()\n        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n    def validate_ssn(self):\n        if not self.ssn:",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #177",
        "line": 301,
        "description": [
          "        self.address = address"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -298,7 +298,7 @@\n         self.email = email\n         return self\n     def setAddress(self,address):\n-        self.address = address\n+        self.address = None\n         return self\n     def create_person():\n         p = Person()\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  },
  {
    "function_name": "create_person",
    "function_scope": "303-305",
    "patterns": [
      {
        "lineno": 303,
        "coloffset": 4,
        "linematch": "def create_person():",
        "context": "        return self\n    def setAddress(self,address):\n        self.address = address\n        return self\n    def create_person():\n        p = Person()\n        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n    def validate_ssn(self):\n        if not self.ssn:\n            return False",
        "pattern": ".//FunctionDef[not(args/arg/annotation) or not(returns)]",
        "check_id": "ANNOT001",
        "check_name": "missing-annotations"
      },
      {
        "lineno": 303,
        "coloffset": 4,
        "linematch": "def create_person():",
        "context": "        return self\n    def setAddress(self,address):\n        self.address = address\n        return self\n    def create_person():\n        p = Person()\n        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n    def validate_ssn(self):\n        if not self.ssn:\n            return False",
        "pattern": ".//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]",
        "check_id": "C002",
        "check_name": "nested-loop-conditions"
      },
      {
        "lineno": 304,
        "coloffset": 8,
        "linematch": "p = Person()",
        "context": "    def setAddress(self,address):\n        self.address = address\n        return self\n    def create_person():\n        p = Person()\n        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n    def validate_ssn(self):\n        if not self.ssn:\n            return False\n        if len(self.ssn) != 11:",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      },
      {
        "lineno": 305,
        "coloffset": 8,
        "linematch": "p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")",
        "context": "        self.address = address\n        return self\n    def create_person():\n        p = Person()\n        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n    def validate_ssn(self):\n        if not self.ssn:\n            return False\n        if len(self.ssn) != 11:\n            return False",
        "pattern": ".//FunctionDef/body/* | .//FunctionDef/body/Return",
        "check_id": "CML001",
        "check_name": "count-method-lines"
      }
    ],
    "mutants": [
      {
        "name": "Mutant #178",
        "line": 304,
        "description": [
          "        p = Person()"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -301,7 +301,7 @@\n         self.address = address\n         return self\n     def create_person():\n-        p = Person()\n+        p = None\n         p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n     def validate_ssn(self):\n         if not self.ssn:\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #179",
        "line": 305,
        "description": [
          "        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -302,7 +302,7 @@\n         return self\n     def create_person():\n         p = Person()\n-        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n+        p.setName(\"XXJohnXX\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n     def validate_ssn(self):\n         if not self.ssn:\n             return False\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #180",
        "line": 305,
        "description": [
          "        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -302,7 +302,7 @@\n         return self\n     def create_person():\n         p = Person()\n-        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n+        p.setName(\"John\").setAge(31).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n     def validate_ssn(self):\n         if not self.ssn:\n             return False\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #181",
        "line": 305,
        "description": [
          "        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -302,7 +302,7 @@\n         return self\n     def create_person():\n         p = Person()\n-        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n+        p.setName(\"John\").setAge(30).setSSN(\"XX123-45-678XX\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n     def validate_ssn(self):\n         if not self.ssn:\n             return False\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #182",
        "line": 305,
        "description": [
          "        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -302,7 +302,7 @@\n         return self\n     def create_person():\n         p = Person()\n-        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n+        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"XXjohndoe@gmail.comXX\").setAddress(\"123Street\")\n     def validate_ssn(self):\n         if not self.ssn:\n             return False\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      },
      {
        "name": "Mutant #183",
        "line": 305,
        "description": [
          "        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")"
        ],
        "failure": [
          {
            "inner": "--- src/main.py\n+++ src/main.py\n@@ -302,7 +302,7 @@\n         return self\n     def create_person():\n         p = Person()\n-        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"123Street\")\n+        p.setName(\"John\").setAge(30).setSSN(\"123-45-678\").setEmail(\"johndoe@gmail.com\").setAddress(\"XX123StreetXX\")\n     def validate_ssn(self):\n         if not self.ssn:\n             return False\n",
            "type": "failure",
            "message": "bad_survived"
          }
        ]
      }
    ],
    "mutation_score": 0.0
  }
]