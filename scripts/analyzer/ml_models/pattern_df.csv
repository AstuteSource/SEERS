//FunctionDef//If/following-sibling::If | //FunctionDef//If/following-sibling::Elif | //FunctionDef//If/following-sibling::Else,.//ClassDef,//Compare/ops/Is | //Compare/ops/Eq,//FunctionDef//if//For,"//FunctionDef//ImportFrom[starts-with(@module, 'import') and @names=('*')]","//Compare/left[@id=""input_dirs""]/following-sibling::Compare/ops/NotEq | //Compare/comparators[@id=""input_dirs""]/following-sibling::Compare/ops/NotEq","//*[starts-with(., 'with open')]",.//FunctionDef,"//ImportFrom/keyword[@name=""from""]",//FunctionDef[not(args/arg/annotation) or not(returns)],"//FunctionDef[@name=""tp""]/body/Assign/value/Dict/keys/Name[preceding-sibling::Name/@id = @id]","//FunctionDef//Call/func/Attribute[@attr=""keys""]",".//FunctionDef[not(contains(@name, ""test_""))]",//FunctionDef[./body/Assert/test/Tuple],//FunctionDef//For[.//For],"//FunctionDef[@type='str' and starts-with(@name, 'test_')]/body/*",.//FunctionDef/body//If,.//FunctionDef/body//If[ancestor::If and not(parent::orelse)],"//FunctionDef[@name=""init""]/body/Return",.//Try/ExceptHandler[not(ExceptHandler/type)],//function[@name='your_function_name']/*[your_xpath_condition],//FunctionDef//If/descendant::If,//FunctionDef/body/For[target/Name/@id = iter/Name/@id],"//ImportFrom[@module='__future']/alias[not(starts-with(@name, 'division') or starts-with(@name, 'absolute_import') or starts-with(@name, 'print_function') or starts-with(@name, 'unicode_literals'))]",//FunctionDef[@type='str']/body/* | //FunctionDef[@type='str']/body/Return,//FunctionDef//FunctionDef/ancestor::*,//Assert[count(.//Call[func/Name/@id='test_function']) > 0],//Try/ExceptHandler[not(ExceptHandler/type)],//FunctionDef[BreakStmt[count(ancestor::For|ancestor::While|ancestor::If) = 0]],//FunctionDef[body//comprehension/target/Name],//FunctionDef[//(If/following-sibling::For | For/following-sibling::If)],//FunctionDef[@type='str']/body/Assert,mutation_category,filename
0,0,0,0,0,0,0,1,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,low,101_sorting.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,low,101_sorting.json
1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,low,101_sorting.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,low,101_sorting.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,low,101_sorting.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,low,101_sorting.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,low,101_sorting.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,low,101_sorting.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,low,101_intersection.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,medium,101_intersection.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,high,101_intersection.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,high,101_intersection.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,high,101_intersection.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,high,101_intersection.json
1,0,1,0,0,0,0,1,0,1,0,0,1,0,0,0,1,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,low,101_intersection.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,high,101_palindrome.json
0,0,1,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,medium,101_palindrome.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,medium,101_palindrome.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,high,lazytracker.json
1,0,1,0,0,0,0,1,0,1,0,0,1,0,1,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,high,lazytracker.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,high,lazytracker.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,high,lazytracker.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,high,lazytracker.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,high,lazytracker.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,medium,lazytracker.json
0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,high,lazytracker.json
1,0,1,0,0,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,1,0,0,high,lazytracker.json
